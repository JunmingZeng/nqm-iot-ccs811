
tmp.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000114  00800100  00001d54  00001de8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001d54  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000014  00800214  00800214  00001efc  2**0
                  ALLOC
  3 .stab         00002bf8  00000000  00000000  00001efc  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00001398  00000000  00000000  00004af4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000011  00000000  00000000  00005e8c  2**0
                  CONTENTS, READONLY

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__ctors_end>
       4:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
       8:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
       c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      10:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      14:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      18:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      1c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      20:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      24:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      28:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      2c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      30:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      34:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      38:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      3c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      40:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      44:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      48:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      4c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      50:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      54:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      58:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      5c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      60:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      64:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	6e 61       	ori	r22, 0x1E	; 30
      6a:	6e 00       	.word	0x006e	; ????

0000006c <__c.2159>:
      6c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      7c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      8c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      9c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      ac:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      bc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      cc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      dc:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      ec:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      fc:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     10c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     11c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     12c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     13c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     14c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     15c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016a <__ctors_end>:
     16a:	11 24       	eor	r1, r1
     16c:	1f be       	out	0x3f, r1	; 63
     16e:	cf ef       	ldi	r28, 0xFF	; 255
     170:	d8 e0       	ldi	r29, 0x08	; 8
     172:	de bf       	out	0x3e, r29	; 62
     174:	cd bf       	out	0x3d, r28	; 61

00000176 <__do_copy_data>:
     176:	12 e0       	ldi	r17, 0x02	; 2
     178:	a0 e0       	ldi	r26, 0x00	; 0
     17a:	b1 e0       	ldi	r27, 0x01	; 1
     17c:	e4 e5       	ldi	r30, 0x54	; 84
     17e:	fd e1       	ldi	r31, 0x1D	; 29
     180:	02 c0       	rjmp	.+4      	; 0x186 <__do_copy_data+0x10>
     182:	05 90       	lpm	r0, Z+
     184:	0d 92       	st	X+, r0
     186:	a4 31       	cpi	r26, 0x14	; 20
     188:	b1 07       	cpc	r27, r17
     18a:	d9 f7       	brne	.-10     	; 0x182 <__do_copy_data+0xc>

0000018c <__do_clear_bss>:
     18c:	22 e0       	ldi	r18, 0x02	; 2
     18e:	a4 e1       	ldi	r26, 0x14	; 20
     190:	b2 e0       	ldi	r27, 0x02	; 2
     192:	01 c0       	rjmp	.+2      	; 0x196 <.do_clear_bss_start>

00000194 <.do_clear_bss_loop>:
     194:	1d 92       	st	X+, r1

00000196 <.do_clear_bss_start>:
     196:	a8 32       	cpi	r26, 0x28	; 40
     198:	b2 07       	cpc	r27, r18
     19a:	e1 f7       	brne	.-8      	; 0x194 <.do_clear_bss_loop>
     19c:	0e 94 36 05 	call	0xa6c	; 0xa6c <main>
     1a0:	0c 94 a8 0e 	jmp	0x1d50	; 0x1d50 <_exit>

000001a4 <__bad_interrupt>:
     1a4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001a8 <init>:
#include "twi.h"
#include "escape.h"

void init()
{
	uart0_init();
     1a8:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <uart0_init>
	stdout = uart0_fd();
     1ac:	0e 94 f7 01 	call	0x3ee	; 0x3ee <uart0_fd>
     1b0:	90 93 21 02 	sts	0x0221, r25
     1b4:	80 93 20 02 	sts	0x0220, r24

	twi_init();
     1b8:	0e 94 0c 02 	call	0x418	; 0x418 <twi_init>
	ccs811_init();
     1bc:	0c 94 f2 02 	jmp	0x5e4	; 0x5e4 <ccs811_init>

000001c0 <uart0_init>:
void uart0_init()
{
	// UART 0 initialisation
	#define BAUD	UART0_BAUD
	#include <util/setbaud.h>
	UBRR0H = UBRRH_VALUE;
     1c0:	10 92 c5 00 	sts	0x00C5, r1
	UBRR0L = UBRRL_VALUE;
     1c4:	8c e0       	ldi	r24, 0x0C	; 12
     1c6:	80 93 c4 00 	sts	0x00C4, r24
	UCSR0A = USE_2X << U2X0;
     1ca:	10 92 c0 00 	sts	0x00C0, r1
	UCSR0B = _BV(RXEN0) | _BV(TXEN0);
     1ce:	88 e1       	ldi	r24, 0x18	; 24
     1d0:	80 93 c1 00 	sts	0x00C1, r24
	UCSR0C = _BV(UCSZ00) | _BV(UCSZ01);
     1d4:	86 e0       	ldi	r24, 0x06	; 6
     1d6:	80 93 c2 00 	sts	0x00C2, r24
     1da:	08 95       	ret

000001dc <uart0_read_unblocked>:

// Return file descriptor
FILE *uart0_fd();

// If characters available for read
static inline uint8_t uart0_available() {return UCSR0A & _BV(RXC0);}
     1dc:	80 91 c0 00 	lds	r24, 0x00C0
}

int uart0_read_unblocked()
{
	if (!uart0_available())
     1e0:	87 ff       	sbrs	r24, 7
     1e2:	04 c0       	rjmp	.+8      	; 0x1ec <uart0_read_unblocked+0x10>
		return -1;
	return UDR0;
     1e4:	80 91 c6 00 	lds	r24, 0x00C6
     1e8:	90 e0       	ldi	r25, 0x00	; 0
     1ea:	08 95       	ret
}

int uart0_read_unblocked()
{
	if (!uart0_available())
		return -1;
     1ec:	8f ef       	ldi	r24, 0xFF	; 255
     1ee:	9f ef       	ldi	r25, 0xFF	; 255
	return UDR0;
}
     1f0:	08 95       	ret

000001f2 <uart0_read>:
     1f2:	80 91 c0 00 	lds	r24, 0x00C0

// Read 1 character, blocking
char uart0_read()
{
	while (!uart0_available());
     1f6:	87 ff       	sbrs	r24, 7
     1f8:	fc cf       	rjmp	.-8      	; 0x1f2 <uart0_read>
	return UDR0;
     1fa:	80 91 c6 00 	lds	r24, 0x00C6
}
     1fe:	08 95       	ret

00000200 <getch>:
}

// For fdevopen
static int getch(FILE *stream)
{
	return uart0_read();
     200:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <uart0_read>
}
     204:	99 27       	eor	r25, r25
     206:	87 fd       	sbrc	r24, 7
     208:	90 95       	com	r25
     20a:	08 95       	ret

0000020c <uart0_read_data>:
	while (!uart0_available());
	return UDR0;
}

void uart0_read_data(char *ptr, unsigned long length)
{
     20c:	cf 92       	push	r12
     20e:	df 92       	push	r13
     210:	ef 92       	push	r14
     212:	ff 92       	push	r15
     214:	cf 93       	push	r28
     216:	df 93       	push	r29
     218:	ec 01       	movw	r28, r24
	while (length--)
     21a:	6a 01       	movw	r12, r20
     21c:	7b 01       	movw	r14, r22
     21e:	c1 14       	cp	r12, r1
     220:	d1 04       	cpc	r13, r1
     222:	e1 04       	cpc	r14, r1
     224:	f1 04       	cpc	r15, r1
     226:	49 f0       	breq	.+18     	; 0x23a <uart0_read_data+0x2e>
		*ptr++ = uart0_read();
     228:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <uart0_read>
     22c:	89 93       	st	Y+, r24
     22e:	81 e0       	ldi	r24, 0x01	; 1
     230:	c8 1a       	sub	r12, r24
     232:	d1 08       	sbc	r13, r1
     234:	e1 08       	sbc	r14, r1
     236:	f1 08       	sbc	r15, r1
     238:	f2 cf       	rjmp	.-28     	; 0x21e <uart0_read_data+0x12>
}
     23a:	df 91       	pop	r29
     23c:	cf 91       	pop	r28
     23e:	ff 90       	pop	r15
     240:	ef 90       	pop	r14
     242:	df 90       	pop	r13
     244:	cf 90       	pop	r12
     246:	08 95       	ret

00000248 <uart0_write_unblocked>:

// If UART tx buffer is available
static inline uint8_t uart0_ready() {return UCSR0A & _BV(UDRE0);}
     248:	90 91 c0 00 	lds	r25, 0x00C0

int uart0_write_unblocked(const char data)
{
	if (!uart0_ready())
     24c:	95 ff       	sbrs	r25, 5
     24e:	06 c0       	rjmp	.+12     	; 0x25c <uart0_write_unblocked+0x14>
		return -1;
	UDR0 = data;
     250:	80 93 c6 00 	sts	0x00C6, r24
	return data;
     254:	99 27       	eor	r25, r25
     256:	87 fd       	sbrc	r24, 7
     258:	90 95       	com	r25
     25a:	08 95       	ret
}

int uart0_write_unblocked(const char data)
{
	if (!uart0_ready())
		return -1;
     25c:	8f ef       	ldi	r24, 0xFF	; 255
     25e:	9f ef       	ldi	r25, 0xFF	; 255
	UDR0 = data;
	return data;
}
     260:	08 95       	ret

00000262 <uart0_write>:
     262:	90 91 c0 00 	lds	r25, 0x00C0

void uart0_write(const char data)
{
	while (!uart0_ready());
     266:	95 ff       	sbrs	r25, 5
     268:	fc cf       	rjmp	.-8      	; 0x262 <uart0_write>
	UDR0 = data;
     26a:	80 93 c6 00 	sts	0x00C6, r24
     26e:	08 95       	ret

00000270 <putch>:
	goto loop;
}

// For fdevopen
static int putch(char ch, FILE *stream)
{
     270:	cf 93       	push	r28
     272:	c8 2f       	mov	r28, r24
	if (ch == '\n')
     274:	8a 30       	cpi	r24, 0x0A	; 10
     276:	19 f4       	brne	.+6      	; 0x27e <putch+0xe>
		putch('\r', stream);
     278:	8d e0       	ldi	r24, 0x0D	; 13
     27a:	0e 94 38 01 	call	0x270	; 0x270 <putch>
	uart0_write(ch);
     27e:	8c 2f       	mov	r24, r28
     280:	0e 94 31 01 	call	0x262	; 0x262 <uart0_write>
	return ch;
}
     284:	8c 2f       	mov	r24, r28
     286:	99 27       	eor	r25, r25
     288:	87 fd       	sbrc	r24, 7
     28a:	90 95       	com	r25
     28c:	cf 91       	pop	r28
     28e:	08 95       	ret

00000290 <uart0_write_data>:
	while (!uart0_ready());
	UDR0 = data;
}

void uart0_write_data(const char *ptr, unsigned long length)
{
     290:	cf 92       	push	r12
     292:	df 92       	push	r13
     294:	ef 92       	push	r14
     296:	ff 92       	push	r15
     298:	cf 93       	push	r28
     29a:	df 93       	push	r29
     29c:	ec 01       	movw	r28, r24
	while (length--)
     29e:	6a 01       	movw	r12, r20
     2a0:	7b 01       	movw	r14, r22
     2a2:	c1 14       	cp	r12, r1
     2a4:	d1 04       	cpc	r13, r1
     2a6:	e1 04       	cpc	r14, r1
     2a8:	f1 04       	cpc	r15, r1
     2aa:	49 f0       	breq	.+18     	; 0x2be <uart0_write_data+0x2e>
		uart0_write(*ptr++);
     2ac:	89 91       	ld	r24, Y+
     2ae:	0e 94 31 01 	call	0x262	; 0x262 <uart0_write>
     2b2:	81 e0       	ldi	r24, 0x01	; 1
     2b4:	c8 1a       	sub	r12, r24
     2b6:	d1 08       	sbc	r13, r1
     2b8:	e1 08       	sbc	r14, r1
     2ba:	f1 08       	sbc	r15, r1
     2bc:	f2 cf       	rjmp	.-28     	; 0x2a2 <uart0_write_data+0x12>
}
     2be:	df 91       	pop	r29
     2c0:	cf 91       	pop	r28
     2c2:	ff 90       	pop	r15
     2c4:	ef 90       	pop	r14
     2c6:	df 90       	pop	r13
     2c8:	cf 90       	pop	r12
     2ca:	08 95       	ret

000002cc <uart0_write_string>:

void uart0_write_string(const char *str)
{
     2cc:	0f 93       	push	r16
     2ce:	1f 93       	push	r17
     2d0:	cf 93       	push	r28
     2d2:	df 93       	push	r29
     2d4:	ec 01       	movw	r28, r24
     2d6:	8e 01       	movw	r16, r28
	while (*str != '\0') {
     2d8:	88 81       	ld	r24, Y
     2da:	88 23       	and	r24, r24
     2dc:	59 f0       	breq	.+22     	; 0x2f4 <uart0_write_string+0x28>
		if (*str == '\n')
     2de:	8a 30       	cpi	r24, 0x0A	; 10
     2e0:	19 f4       	brne	.+6      	; 0x2e8 <uart0_write_string+0x1c>
			uart0_write('\r');
     2e2:	8d e0       	ldi	r24, 0x0D	; 13
     2e4:	0e 94 31 01 	call	0x262	; 0x262 <uart0_write>
     2e8:	21 96       	adiw	r28, 0x01	; 1
		uart0_write(*str++);
     2ea:	f8 01       	movw	r30, r16
     2ec:	80 81       	ld	r24, Z
     2ee:	0e 94 31 01 	call	0x262	; 0x262 <uart0_write>
     2f2:	f1 cf       	rjmp	.-30     	; 0x2d6 <uart0_write_string+0xa>
	}
}
     2f4:	df 91       	pop	r29
     2f6:	cf 91       	pop	r28
     2f8:	1f 91       	pop	r17
     2fa:	0f 91       	pop	r16
     2fc:	08 95       	ret

000002fe <uart0_readline>:

unsigned long uart0_readline(char *buffer, unsigned long length)
{
     2fe:	af 92       	push	r10
     300:	bf 92       	push	r11
     302:	cf 92       	push	r12
     304:	df 92       	push	r13
     306:	ef 92       	push	r14
     308:	ff 92       	push	r15
     30a:	1f 93       	push	r17
     30c:	cf 93       	push	r28
     30e:	df 93       	push	r29
     310:	00 d0       	rcall	.+0      	; 0x312 <uart0_readline+0x14>
     312:	00 d0       	rcall	.+0      	; 0x314 <uart0_readline+0x16>
     314:	cd b7       	in	r28, 0x3d	; 61
     316:	de b7       	in	r29, 0x3e	; 62
     318:	5c 01       	movw	r10, r24
	unsigned long cnt = 0;
	long c;
	length--;
     31a:	41 50       	subi	r20, 0x01	; 1
     31c:	51 09       	sbc	r21, r1
     31e:	61 09       	sbc	r22, r1
     320:	71 09       	sbc	r23, r1
	}
}

unsigned long uart0_readline(char *buffer, unsigned long length)
{
	unsigned long cnt = 0;
     322:	c1 2c       	mov	r12, r1
     324:	d1 2c       	mov	r13, r1
     326:	76 01       	movw	r14, r12
	long c;
	length--;

loop:
	switch (c = uart0_read()) {
     328:	49 83       	std	Y+1, r20	; 0x01
     32a:	5a 83       	std	Y+2, r21	; 0x02
     32c:	6b 83       	std	Y+3, r22	; 0x03
     32e:	7c 83       	std	Y+4, r23	; 0x04
     330:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <uart0_read>
     334:	18 2f       	mov	r17, r24
     336:	49 81       	ldd	r20, Y+1	; 0x01
     338:	5a 81       	ldd	r21, Y+2	; 0x02
     33a:	6b 81       	ldd	r22, Y+3	; 0x03
     33c:	7c 81       	ldd	r23, Y+4	; 0x04
     33e:	8d 30       	cpi	r24, 0x0D	; 13
     340:	f1 f1       	breq	.+124    	; 0x3be <uart0_readline+0xc0>
     342:	8f 37       	cpi	r24, 0x7F	; 127
     344:	19 f0       	breq	.+6      	; 0x34c <uart0_readline+0x4e>
     346:	8a 30       	cpi	r24, 0x0A	; 10
     348:	b1 f4       	brne	.+44     	; 0x376 <uart0_readline+0x78>
     34a:	39 c0       	rjmp	.+114    	; 0x3be <uart0_readline+0xc0>
		uart0_write('\r');
		uart0_write('\n');
		*buffer = '\0';
		return cnt;
	case '\x7f':	// Backspace
		if (cnt) {
     34c:	c1 14       	cp	r12, r1
     34e:	d1 04       	cpc	r13, r1
     350:	e1 04       	cpc	r14, r1
     352:	f1 04       	cpc	r15, r1
     354:	49 f3       	breq	.-46     	; 0x328 <uart0_readline+0x2a>
			uart0_write(c);
     356:	8f e7       	ldi	r24, 0x7F	; 127
     358:	49 83       	std	Y+1, r20	; 0x01
     35a:	5a 83       	std	Y+2, r21	; 0x02
     35c:	6b 83       	std	Y+3, r22	; 0x03
     35e:	7c 83       	std	Y+4, r23	; 0x04
     360:	0e 94 31 01 	call	0x262	; 0x262 <uart0_write>
			buffer--;
     364:	f1 e0       	ldi	r31, 0x01	; 1
     366:	af 1a       	sub	r10, r31
     368:	b1 08       	sbc	r11, r1
			cnt--;
     36a:	81 e0       	ldi	r24, 0x01	; 1
     36c:	c8 1a       	sub	r12, r24
     36e:	d1 08       	sbc	r13, r1
     370:	e1 08       	sbc	r14, r1
     372:	f1 08       	sbc	r15, r1
     374:	1f c0       	rjmp	.+62     	; 0x3b4 <uart0_readline+0xb6>
		}
		break;
	default:
		if (!isprint(c) || cnt == length)
     376:	99 27       	eor	r25, r25
     378:	87 fd       	sbrc	r24, 7
     37a:	90 95       	com	r25
     37c:	49 83       	std	Y+1, r20	; 0x01
     37e:	5a 83       	std	Y+2, r21	; 0x02
     380:	6b 83       	std	Y+3, r22	; 0x03
     382:	7c 83       	std	Y+4, r23	; 0x04
     384:	0e 94 23 0c 	call	0x1846	; 0x1846 <isprint>
     388:	49 81       	ldd	r20, Y+1	; 0x01
     38a:	5a 81       	ldd	r21, Y+2	; 0x02
     38c:	6b 81       	ldd	r22, Y+3	; 0x03
     38e:	7c 81       	ldd	r23, Y+4	; 0x04
     390:	89 2b       	or	r24, r25
     392:	51 f2       	breq	.-108    	; 0x328 <uart0_readline+0x2a>
     394:	c4 16       	cp	r12, r20
     396:	d5 06       	cpc	r13, r21
     398:	e6 06       	cpc	r14, r22
     39a:	f7 06       	cpc	r15, r23
     39c:	29 f2       	breq	.-118    	; 0x328 <uart0_readline+0x2a>
			break;
		uart0_write(c);
     39e:	81 2f       	mov	r24, r17
     3a0:	0e 94 31 01 	call	0x262	; 0x262 <uart0_write>
		*buffer = c;
     3a4:	f5 01       	movw	r30, r10
     3a6:	11 93       	st	Z+, r17
     3a8:	5f 01       	movw	r10, r30
		buffer++;
		cnt++;
     3aa:	ff ef       	ldi	r31, 0xFF	; 255
     3ac:	cf 1a       	sub	r12, r31
     3ae:	df 0a       	sbc	r13, r31
     3b0:	ef 0a       	sbc	r14, r31
     3b2:	ff 0a       	sbc	r15, r31
     3b4:	49 81       	ldd	r20, Y+1	; 0x01
     3b6:	5a 81       	ldd	r21, Y+2	; 0x02
     3b8:	6b 81       	ldd	r22, Y+3	; 0x03
     3ba:	7c 81       	ldd	r23, Y+4	; 0x04
     3bc:	b5 cf       	rjmp	.-150    	; 0x328 <uart0_readline+0x2a>

loop:
	switch (c = uart0_read()) {
	case '\n':
	case '\r':
		uart0_write('\r');
     3be:	8d e0       	ldi	r24, 0x0D	; 13
     3c0:	0e 94 31 01 	call	0x262	; 0x262 <uart0_write>
		uart0_write('\n');
     3c4:	8a e0       	ldi	r24, 0x0A	; 10
     3c6:	0e 94 31 01 	call	0x262	; 0x262 <uart0_write>
		*buffer = '\0';
     3ca:	f5 01       	movw	r30, r10
     3cc:	10 82       	st	Z, r1
		buffer++;
		cnt++;
	}

	goto loop;
}
     3ce:	c7 01       	movw	r24, r14
     3d0:	b6 01       	movw	r22, r12
     3d2:	0f 90       	pop	r0
     3d4:	0f 90       	pop	r0
     3d6:	0f 90       	pop	r0
     3d8:	0f 90       	pop	r0
     3da:	df 91       	pop	r29
     3dc:	cf 91       	pop	r28
     3de:	1f 91       	pop	r17
     3e0:	ff 90       	pop	r15
     3e2:	ef 90       	pop	r14
     3e4:	df 90       	pop	r13
     3e6:	cf 90       	pop	r12
     3e8:	bf 90       	pop	r11
     3ea:	af 90       	pop	r10
     3ec:	08 95       	ret

000003ee <uart0_fd>:
}

FILE *uart0_fd()
{
	static FILE *dev = NULL;
	if (dev == NULL)
     3ee:	80 91 14 02 	lds	r24, 0x0214
     3f2:	90 91 15 02 	lds	r25, 0x0215
     3f6:	89 2b       	or	r24, r25
     3f8:	51 f4       	brne	.+20     	; 0x40e <uart0_fd+0x20>
		dev = fdevopen(putch, getch);
     3fa:	60 e0       	ldi	r22, 0x00	; 0
     3fc:	71 e0       	ldi	r23, 0x01	; 1
     3fe:	88 e3       	ldi	r24, 0x38	; 56
     400:	91 e0       	ldi	r25, 0x01	; 1
     402:	0e 94 3f 0c 	call	0x187e	; 0x187e <fdevopen>
     406:	90 93 15 02 	sts	0x0215, r25
     40a:	80 93 14 02 	sts	0x0214, r24
	return dev;
}
     40e:	80 91 14 02 	lds	r24, 0x0214
     412:	90 91 15 02 	lds	r25, 0x0215
     416:	08 95       	ret

00000418 <twi_init>:
#endif

void twi_init()
{
	//PORTC |= _BV(0) | _BV(1);
	TWBR = (F_CPU / TWI_BAUD - 16) / 2 / 1;
     418:	82 e0       	ldi	r24, 0x02	; 2
     41a:	80 93 b8 00 	sts	0x00B8, r24
	TWSR = 0;
     41e:	10 92 b9 00 	sts	0x00B9, r1
     422:	08 95       	ret

00000424 <twi_start>:
}

void twi_start()
{
	dbg(__func__);
	TWCR = _BV(TWINT) | _BV(TWSTA) | _BV(TWEN);
     424:	84 ea       	ldi	r24, 0xA4	; 164
     426:	80 93 bc 00 	sts	0x00BC, r24
	TWSR = 0;
}

static inline uint8_t twi_ready()
{
	return TWCR & _BV(TWINT);
     42a:	80 91 bc 00 	lds	r24, 0x00BC

void twi_start()
{
	dbg(__func__);
	TWCR = _BV(TWINT) | _BV(TWSTA) | _BV(TWEN);
	while (!twi_ready());
     42e:	87 ff       	sbrs	r24, 7
     430:	fc cf       	rjmp	.-8      	; 0x42a <twi_start+0x6>
}
     432:	08 95       	ret

00000434 <twi_stop>:

void twi_stop()
{
	dbg(__func__);
	TWCR = _BV(TWINT) | _BV(TWSTO) | _BV(TWEN);
     434:	84 e9       	ldi	r24, 0x94	; 148
     436:	80 93 bc 00 	sts	0x00BC, r24
	while (TWCR & _BV(TWSTO));
     43a:	80 91 bc 00 	lds	r24, 0x00BC
     43e:	84 fd       	sbrc	r24, 4
     440:	fc cf       	rjmp	.-8      	; 0x43a <twi_stop+0x6>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     442:	87 ec       	ldi	r24, 0xC7	; 199
     444:	90 e0       	ldi	r25, 0x00	; 0
     446:	01 97       	sbiw	r24, 0x01	; 1
     448:	f1 f7       	brne	.-4      	; 0x446 <twi_stop+0x12>
     44a:	00 c0       	rjmp	.+0      	; 0x44c <twi_stop+0x18>
     44c:	00 00       	nop
     44e:	08 95       	ret

00000450 <twi_write>:
}

uint8_t twi_write(uint8_t data)
{
	dbg(__func__);
	TWDR = data;
     450:	80 93 bb 00 	sts	0x00BB, r24
	TWCR = _BV(TWINT) | _BV(TWEN);
     454:	84 e8       	ldi	r24, 0x84	; 132
     456:	80 93 bc 00 	sts	0x00BC, r24
	TWSR = 0;
}

static inline uint8_t twi_ready()
{
	return TWCR & _BV(TWINT);
     45a:	80 91 bc 00 	lds	r24, 0x00BC
uint8_t twi_write(uint8_t data)
{
	dbg(__func__);
	TWDR = data;
	TWCR = _BV(TWINT) | _BV(TWEN);
	while (!twi_ready());
     45e:	87 ff       	sbrs	r24, 7
     460:	fc cf       	rjmp	.-8      	; 0x45a <twi_write+0xa>
	uint8_t s = TWSR & 0xf8;
     462:	90 91 b9 00 	lds	r25, 0x00B9
     466:	98 7f       	andi	r25, 0xF8	; 248
	return s == 0x40 || s == 0x18 || s == 0x28;
     468:	81 e0       	ldi	r24, 0x01	; 1
     46a:	90 34       	cpi	r25, 0x40	; 64
     46c:	31 f0       	breq	.+12     	; 0x47a <twi_write+0x2a>
     46e:	98 31       	cpi	r25, 0x18	; 24
     470:	29 f0       	breq	.+10     	; 0x47c <twi_write+0x2c>
     472:	98 32       	cpi	r25, 0x28	; 40
     474:	19 f0       	breq	.+6      	; 0x47c <twi_write+0x2c>
     476:	80 e0       	ldi	r24, 0x00	; 0
     478:	08 95       	ret
     47a:	08 95       	ret
}
     47c:	08 95       	ret

0000047e <twi_read>:

uint8_t twi_read(uint8_t ack)
{
	dbg(__func__);
	TWCR = _BV(TWINT) | (ack ? _BV(TWEA) : 0) | _BV(TWEN);
     47e:	88 23       	and	r24, r24
     480:	11 f0       	breq	.+4      	; 0x486 <twi_read+0x8>
     482:	84 ec       	ldi	r24, 0xC4	; 196
     484:	01 c0       	rjmp	.+2      	; 0x488 <twi_read+0xa>
     486:	84 e8       	ldi	r24, 0x84	; 132
     488:	80 93 bc 00 	sts	0x00BC, r24
	TWSR = 0;
}

static inline uint8_t twi_ready()
{
	return TWCR & _BV(TWINT);
     48c:	80 91 bc 00 	lds	r24, 0x00BC

uint8_t twi_read(uint8_t ack)
{
	dbg(__func__);
	TWCR = _BV(TWINT) | (ack ? _BV(TWEA) : 0) | _BV(TWEN);
	while (!twi_ready());
     490:	87 ff       	sbrs	r24, 7
     492:	fc cf       	rjmp	.-8      	; 0x48c <twi_read+0xe>
	return TWDR;
     494:	80 91 bb 00 	lds	r24, 0x00BB
}
     498:	08 95       	ret

0000049a <twi_scan>:

uint8_t twi_scan(uint8_t addr)
{
     49a:	cf 93       	push	r28
     49c:	df 93       	push	r29
     49e:	1f 92       	push	r1
     4a0:	cd b7       	in	r28, 0x3d	; 61
     4a2:	de b7       	in	r29, 0x3e	; 62
	dbg(__func__);
	twi_start();
     4a4:	89 83       	std	Y+1, r24	; 0x01
     4a6:	0e 94 12 02 	call	0x424	; 0x424 <twi_start>
	uint8_t ack = twi_write(addr);
     4aa:	89 81       	ldd	r24, Y+1	; 0x01
     4ac:	0e 94 28 02 	call	0x450	; 0x450 <twi_write>
	twi_stop();
     4b0:	89 83       	std	Y+1, r24	; 0x01
     4b2:	0e 94 1a 02 	call	0x434	; 0x434 <twi_stop>
	return ack;
}
     4b6:	89 81       	ldd	r24, Y+1	; 0x01
     4b8:	0f 90       	pop	r0
     4ba:	df 91       	pop	r29
     4bc:	cf 91       	pop	r28
     4be:	08 95       	ret

000004c0 <twi_write_data>:

uint8_t twi_write_data(uint8_t addr, uint8_t reg, uint8_t len, uint8_t *ptr)
{
     4c0:	ef 92       	push	r14
     4c2:	ff 92       	push	r15
     4c4:	0f 93       	push	r16
     4c6:	1f 93       	push	r17
     4c8:	cf 93       	push	r28
     4ca:	df 93       	push	r29
     4cc:	00 d0       	rcall	.+0      	; 0x4ce <twi_write_data+0xe>
     4ce:	00 d0       	rcall	.+0      	; 0x4d0 <twi_write_data+0x10>
     4d0:	1f 92       	push	r1
     4d2:	cd b7       	in	r28, 0x3d	; 61
     4d4:	de b7       	in	r29, 0x3e	; 62
	uint8_t err = 0;
	twi_start();
     4d6:	2c 83       	std	Y+4, r18	; 0x04
     4d8:	3d 83       	std	Y+5, r19	; 0x05
     4da:	4b 83       	std	Y+3, r20	; 0x03
     4dc:	6a 83       	std	Y+2, r22	; 0x02
     4de:	89 83       	std	Y+1, r24	; 0x01
     4e0:	0e 94 12 02 	call	0x424	; 0x424 <twi_start>
	err += !twi_write(addr << 1);
     4e4:	89 81       	ldd	r24, Y+1	; 0x01
     4e6:	88 0f       	add	r24, r24
     4e8:	0e 94 28 02 	call	0x450	; 0x450 <twi_write>
     4ec:	08 2f       	mov	r16, r24
	err += !twi_write(reg);
     4ee:	6a 81       	ldd	r22, Y+2	; 0x02
     4f0:	86 2f       	mov	r24, r22
     4f2:	0e 94 28 02 	call	0x450	; 0x450 <twi_write>
     4f6:	91 e0       	ldi	r25, 0x01	; 1
     4f8:	2c 81       	ldd	r18, Y+4	; 0x04
     4fa:	3d 81       	ldd	r19, Y+5	; 0x05
     4fc:	4b 81       	ldd	r20, Y+3	; 0x03
     4fe:	81 11       	cpse	r24, r1
     500:	90 e0       	ldi	r25, 0x00	; 0

uint8_t twi_write_data(uint8_t addr, uint8_t reg, uint8_t len, uint8_t *ptr)
{
	uint8_t err = 0;
	twi_start();
	err += !twi_write(addr << 1);
     502:	11 e0       	ldi	r17, 0x01	; 1
     504:	01 11       	cpse	r16, r1
     506:	10 e0       	ldi	r17, 0x00	; 0
	err += !twi_write(reg);
     508:	19 0f       	add	r17, r25
	while (len--)
     50a:	79 01       	movw	r14, r18
     50c:	04 2f       	mov	r16, r20
     50e:	02 0f       	add	r16, r18
     510:	0e 15       	cp	r16, r14
     512:	51 f0       	breq	.+20     	; 0x528 <twi_write_data+0x68>
		err += !twi_write(*ptr++);
     514:	f7 01       	movw	r30, r14
     516:	81 91       	ld	r24, Z+
     518:	7f 01       	movw	r14, r30
     51a:	0e 94 28 02 	call	0x450	; 0x450 <twi_write>
     51e:	91 e0       	ldi	r25, 0x01	; 1
     520:	81 11       	cpse	r24, r1
     522:	90 e0       	ldi	r25, 0x00	; 0
     524:	19 0f       	add	r17, r25
     526:	f4 cf       	rjmp	.-24     	; 0x510 <twi_write_data+0x50>
	twi_stop();
     528:	0e 94 1a 02 	call	0x434	; 0x434 <twi_stop>
	return !err;
     52c:	81 e0       	ldi	r24, 0x01	; 1
     52e:	11 11       	cpse	r17, r1
     530:	80 e0       	ldi	r24, 0x00	; 0
}
     532:	0f 90       	pop	r0
     534:	0f 90       	pop	r0
     536:	0f 90       	pop	r0
     538:	0f 90       	pop	r0
     53a:	0f 90       	pop	r0
     53c:	df 91       	pop	r29
     53e:	cf 91       	pop	r28
     540:	1f 91       	pop	r17
     542:	0f 91       	pop	r16
     544:	ff 90       	pop	r15
     546:	ef 90       	pop	r14
     548:	08 95       	ret

0000054a <twi_read_data>:

uint8_t twi_read_data(uint8_t addr, uint8_t reg, uint8_t len, uint8_t *ptr)
{
     54a:	cf 92       	push	r12
     54c:	df 92       	push	r13
     54e:	ef 92       	push	r14
     550:	ff 92       	push	r15
     552:	0f 93       	push	r16
     554:	1f 93       	push	r17
     556:	cf 93       	push	r28
     558:	df 93       	push	r29
     55a:	1f 92       	push	r1
     55c:	cd b7       	in	r28, 0x3d	; 61
     55e:	de b7       	in	r29, 0x3e	; 62
     560:	e8 2e       	mov	r14, r24
     562:	14 2f       	mov	r17, r20
     564:	f2 2e       	mov	r15, r18
     566:	03 2f       	mov	r16, r19
	uint8_t err = 0;
	twi_start();
     568:	69 83       	std	Y+1, r22	; 0x01
     56a:	0e 94 12 02 	call	0x424	; 0x424 <twi_start>
	err += !twi_write(addr << 1);
     56e:	ee 0c       	add	r14, r14
     570:	8e 2d       	mov	r24, r14
     572:	0e 94 28 02 	call	0x450	; 0x450 <twi_write>
     576:	d8 2e       	mov	r13, r24
	err += !twi_write(reg);
     578:	69 81       	ldd	r22, Y+1	; 0x01
     57a:	86 2f       	mov	r24, r22
     57c:	0e 94 28 02 	call	0x450	; 0x450 <twi_write>
     580:	91 e0       	ldi	r25, 0x01	; 1
     582:	81 11       	cpse	r24, r1
     584:	90 e0       	ldi	r25, 0x00	; 0

uint8_t twi_read_data(uint8_t addr, uint8_t reg, uint8_t len, uint8_t *ptr)
{
	uint8_t err = 0;
	twi_start();
	err += !twi_write(addr << 1);
     586:	51 e0       	ldi	r21, 0x01	; 1
     588:	d1 10       	cpse	r13, r1
     58a:	50 e0       	ldi	r21, 0x00	; 0
	err += !twi_write(reg);
     58c:	d9 2e       	mov	r13, r25
     58e:	d5 0e       	add	r13, r21

	// Repeated start
	twi_start();
     590:	0e 94 12 02 	call	0x424	; 0x424 <twi_start>
	err += !twi_write((addr << 1) | 1U);
     594:	8e 2d       	mov	r24, r14
     596:	81 60       	ori	r24, 0x01	; 1
     598:	0e 94 28 02 	call	0x450	; 0x450 <twi_write>
     59c:	91 e0       	ldi	r25, 0x01	; 1
     59e:	81 11       	cpse	r24, r1
     5a0:	90 e0       	ldi	r25, 0x00	; 0
     5a2:	d9 0e       	add	r13, r25
	if (err) {
     5a4:	21 f4       	brne	.+8      	; 0x5ae <twi_read_data+0x64>
     5a6:	11 50       	subi	r17, 0x01	; 1
     5a8:	cf 2c       	mov	r12, r15
     5aa:	d0 2e       	mov	r13, r16
     5ac:	04 c0       	rjmp	.+8      	; 0x5b6 <twi_read_data+0x6c>
		twi_stop();
     5ae:	0e 94 1a 02 	call	0x434	; 0x434 <twi_stop>
		return err;
     5b2:	8d 2d       	mov	r24, r13
     5b4:	0d c0       	rjmp	.+26     	; 0x5d0 <twi_read_data+0x86>
	}

	while (len--)
     5b6:	1f 3f       	cpi	r17, 0xFF	; 255
     5b8:	41 f0       	breq	.+16     	; 0x5ca <twi_read_data+0x80>
		*ptr++ = twi_read(len);
     5ba:	81 2f       	mov	r24, r17
     5bc:	0e 94 3f 02 	call	0x47e	; 0x47e <twi_read>
     5c0:	f6 01       	movw	r30, r12
     5c2:	81 93       	st	Z+, r24
     5c4:	6f 01       	movw	r12, r30
     5c6:	11 50       	subi	r17, 0x01	; 1
     5c8:	f6 cf       	rjmp	.-20     	; 0x5b6 <twi_read_data+0x6c>
	twi_stop();
     5ca:	0e 94 1a 02 	call	0x434	; 0x434 <twi_stop>
	return !err;
     5ce:	81 e0       	ldi	r24, 0x01	; 1
}
     5d0:	0f 90       	pop	r0
     5d2:	df 91       	pop	r29
     5d4:	cf 91       	pop	r28
     5d6:	1f 91       	pop	r17
     5d8:	0f 91       	pop	r16
     5da:	ff 90       	pop	r15
     5dc:	ef 90       	pop	r14
     5de:	df 90       	pop	r13
     5e0:	cf 90       	pop	r12
     5e2:	08 95       	ret

000005e4 <ccs811_init>:

static uint8_t err;

#include <stdio.h>
void ccs811_init()
{
     5e4:	08 95       	ret

000005e6 <ccs811_error>:
}

uint8_t ccs811_error()
{
	return err;
}
     5e6:	80 e0       	ldi	r24, 0x00	; 0
     5e8:	08 95       	ret

000005ea <ccs811_read_status>:
	uint8_t data;
	return twi_read_data(CCS811_ADDRESS, addr, 1, &data) ? data : 0;
}

uint8_t ccs811_read_status()
{
     5ea:	cf 93       	push	r28
     5ec:	df 93       	push	r29
     5ee:	1f 92       	push	r1
     5f0:	cd b7       	in	r28, 0x3d	; 61
     5f2:	de b7       	in	r29, 0x3e	; 62
}

static inline uint8_t ccs811_read(uint8_t addr)
{
	uint8_t data;
	return twi_read_data(CCS811_ADDRESS, addr, 1, &data) ? data : 0;
     5f4:	9e 01       	movw	r18, r28
     5f6:	2f 5f       	subi	r18, 0xFF	; 255
     5f8:	3f 4f       	sbci	r19, 0xFF	; 255
     5fa:	41 e0       	ldi	r20, 0x01	; 1
     5fc:	60 e0       	ldi	r22, 0x00	; 0
     5fe:	8a e5       	ldi	r24, 0x5A	; 90
     600:	0e 94 a5 02 	call	0x54a	; 0x54a <twi_read_data>
     604:	88 23       	and	r24, r24
     606:	11 f0       	breq	.+4      	; 0x60c <ccs811_read_status+0x22>
     608:	89 81       	ldd	r24, Y+1	; 0x01
     60a:	01 c0       	rjmp	.+2      	; 0x60e <ccs811_read_status+0x24>
     60c:	80 e0       	ldi	r24, 0x00	; 0
}

uint8_t ccs811_read_status()
{
	return ccs811_read(STATUS_REG);
}
     60e:	0f 90       	pop	r0
     610:	df 91       	pop	r29
     612:	cf 91       	pop	r28
     614:	08 95       	ret

00000616 <ccs811_read_mode>:

uint8_t ccs811_read_mode()
{
     616:	cf 93       	push	r28
     618:	df 93       	push	r29
     61a:	1f 92       	push	r1
     61c:	cd b7       	in	r28, 0x3d	; 61
     61e:	de b7       	in	r29, 0x3e	; 62
}

static inline uint8_t ccs811_read(uint8_t addr)
{
	uint8_t data;
	return twi_read_data(CCS811_ADDRESS, addr, 1, &data) ? data : 0;
     620:	9e 01       	movw	r18, r28
     622:	2f 5f       	subi	r18, 0xFF	; 255
     624:	3f 4f       	sbci	r19, 0xFF	; 255
     626:	41 e0       	ldi	r20, 0x01	; 1
     628:	61 e0       	ldi	r22, 0x01	; 1
     62a:	8a e5       	ldi	r24, 0x5A	; 90
     62c:	0e 94 a5 02 	call	0x54a	; 0x54a <twi_read_data>
     630:	88 23       	and	r24, r24
     632:	11 f0       	breq	.+4      	; 0x638 <ccs811_read_mode+0x22>
     634:	89 81       	ldd	r24, Y+1	; 0x01
     636:	01 c0       	rjmp	.+2      	; 0x63a <ccs811_read_mode+0x24>
     638:	80 e0       	ldi	r24, 0x00	; 0
}

uint8_t ccs811_read_mode()
{
	return ccs811_read(MEAS_MODE_REG);
}
     63a:	0f 90       	pop	r0
     63c:	df 91       	pop	r29
     63e:	cf 91       	pop	r28
     640:	08 95       	ret

00000642 <ccs811_poll>:

uint8_t ccs811_poll()
{
	return ccs811_read_status() & CCS811_DATA_READY;
     642:	0e 94 f5 02 	call	0x5ea	; 0x5ea <ccs811_read_status>
}
     646:	88 70       	andi	r24, 0x08	; 8
     648:	08 95       	ret

0000064a <ccs811_read_data>:
{
	return ((data & 0xff) << 8) | ((data >> 8) & 0xff);
}

void ccs811_read_data(struct ccs811_data_t *ptr)
{
     64a:	cf 93       	push	r28
     64c:	df 93       	push	r29
     64e:	ec 01       	movw	r28, r24
	twi_read_data(CCS811_ADDRESS, ALG_RESULT_DATA, sizeof(struct ccs811_data_t), (void *)ptr);
     650:	9c 01       	movw	r18, r24
     652:	48 e0       	ldi	r20, 0x08	; 8
     654:	62 e0       	ldi	r22, 0x02	; 2
     656:	8a e5       	ldi	r24, 0x5A	; 90
     658:	0e 94 a5 02 	call	0x54a	; 0x54a <twi_read_data>
	return ccs811_read_status() & CCS811_DATA_READY;
}

static inline uint16_t swap_u16(uint16_t data)
{
	return ((data & 0xff) << 8) | ((data >> 8) & 0xff);
     65c:	88 81       	ld	r24, Y
     65e:	99 81       	ldd	r25, Y+1	; 0x01
     660:	98 27       	eor	r25, r24
     662:	89 27       	eor	r24, r25
     664:	98 27       	eor	r25, r24
}

void ccs811_read_data(struct ccs811_data_t *ptr)
{
	twi_read_data(CCS811_ADDRESS, ALG_RESULT_DATA, sizeof(struct ccs811_data_t), (void *)ptr);
	ptr->eco2 = swap_u16(ptr->eco2);
     666:	99 83       	std	Y+1, r25	; 0x01
     668:	88 83       	st	Y, r24
	return ccs811_read_status() & CCS811_DATA_READY;
}

static inline uint16_t swap_u16(uint16_t data)
{
	return ((data & 0xff) << 8) | ((data >> 8) & 0xff);
     66a:	8a 81       	ldd	r24, Y+2	; 0x02
     66c:	9b 81       	ldd	r25, Y+3	; 0x03
     66e:	98 27       	eor	r25, r24
     670:	89 27       	eor	r24, r25
     672:	98 27       	eor	r25, r24

void ccs811_read_data(struct ccs811_data_t *ptr)
{
	twi_read_data(CCS811_ADDRESS, ALG_RESULT_DATA, sizeof(struct ccs811_data_t), (void *)ptr);
	ptr->eco2 = swap_u16(ptr->eco2);
	ptr->tvoc = swap_u16(ptr->tvoc);
     674:	9b 83       	std	Y+3, r25	; 0x03
     676:	8a 83       	std	Y+2, r24	; 0x02
	return ccs811_read_status() & CCS811_DATA_READY;
}

static inline uint16_t swap_u16(uint16_t data)
{
	return ((data & 0xff) << 8) | ((data >> 8) & 0xff);
     678:	8e 81       	ldd	r24, Y+6	; 0x06
     67a:	9f 81       	ldd	r25, Y+7	; 0x07
     67c:	98 27       	eor	r25, r24
     67e:	89 27       	eor	r24, r25
     680:	98 27       	eor	r25, r24
void ccs811_read_data(struct ccs811_data_t *ptr)
{
	twi_read_data(CCS811_ADDRESS, ALG_RESULT_DATA, sizeof(struct ccs811_data_t), (void *)ptr);
	ptr->eco2 = swap_u16(ptr->eco2);
	ptr->tvoc = swap_u16(ptr->tvoc);
	ptr->raw = swap_u16(ptr->raw);
     682:	9f 83       	std	Y+7, r25	; 0x07
     684:	8e 83       	std	Y+6, r24	; 0x06
}
     686:	df 91       	pop	r29
     688:	cf 91       	pop	r28
     68a:	08 95       	ret

0000068c <ccs811_test>:
	//ccs811_read(STATUS_REG);
}

void ccs811_test()
{
	printf("\n\e[1;36m%s\e[0m\n", __func__);
     68c:	86 e0       	ldi	r24, 0x06	; 6
     68e:	91 e0       	ldi	r25, 0x01	; 1
     690:	9f 93       	push	r25
     692:	8f 93       	push	r24
     694:	89 eb       	ldi	r24, 0xB9	; 185
     696:	91 e0       	ldi	r25, 0x01	; 1
     698:	9f 93       	push	r25
     69a:	8f 93       	push	r24
     69c:	0e 94 bc 0c 	call	0x1978	; 0x1978 <printf>
	printf("CCS811 status: %02x, (%02x)\n", ccs811_read_status(), err);
     6a0:	0e 94 f5 02 	call	0x5ea	; 0x5ea <ccs811_read_status>
     6a4:	1f 92       	push	r1
     6a6:	1f 92       	push	r1
     6a8:	1f 92       	push	r1
     6aa:	8f 93       	push	r24
     6ac:	89 ec       	ldi	r24, 0xC9	; 201
     6ae:	91 e0       	ldi	r25, 0x01	; 1
     6b0:	9f 93       	push	r25
     6b2:	8f 93       	push	r24
     6b4:	0e 94 bc 0c 	call	0x1978	; 0x1978 <printf>
	printf("CCS811 mode: %02x (%02x)\n", ccs811_read_mode(), err);
     6b8:	0e 94 0b 03 	call	0x616	; 0x616 <ccs811_read_mode>
     6bc:	1f 92       	push	r1
     6be:	1f 92       	push	r1
     6c0:	1f 92       	push	r1
     6c2:	8f 93       	push	r24
     6c4:	86 ee       	ldi	r24, 0xE6	; 230
     6c6:	91 e0       	ldi	r25, 0x01	; 1
     6c8:	9f 93       	push	r25
     6ca:	8f 93       	push	r24
     6cc:	0e 94 bc 0c 	call	0x1978	; 0x1978 <printf>
	//printf("CCS811 poll: %02x (%02x)\n", ccs811_poll(), err);
	if (ccs811_poll()) {
     6d0:	0e 94 21 03 	call	0x642	; 0x642 <ccs811_poll>
     6d4:	2d b7       	in	r18, 0x3d	; 61
     6d6:	3e b7       	in	r19, 0x3e	; 62
     6d8:	20 5f       	subi	r18, 0xF0	; 240
     6da:	3f 4f       	sbci	r19, 0xFF	; 255
     6dc:	0f b6       	in	r0, 0x3f	; 63
     6de:	f8 94       	cli
     6e0:	3e bf       	out	0x3e, r19	; 62
     6e2:	0f be       	out	0x3f, r0	; 63
     6e4:	2d bf       	out	0x3d, r18	; 61
     6e6:	88 23       	and	r24, r24
     6e8:	81 f0       	breq	.+32     	; 0x70a <ccs811_test+0x7e>
		static struct ccs811_data_t data;
		ccs811_read_data(&data);
     6ea:	86 e1       	ldi	r24, 0x16	; 22
     6ec:	92 e0       	ldi	r25, 0x02	; 2
     6ee:	0e 94 25 03 	call	0x64a	; 0x64a <ccs811_read_data>
		printf("CCS811 data (%02x)\n", err);
     6f2:	1f 92       	push	r1
     6f4:	1f 92       	push	r1
     6f6:	80 e0       	ldi	r24, 0x00	; 0
     6f8:	92 e0       	ldi	r25, 0x02	; 2
     6fa:	9f 93       	push	r25
     6fc:	8f 93       	push	r24
     6fe:	0e 94 bc 0c 	call	0x1978	; 0x1978 <printf>
     702:	0f 90       	pop	r0
     704:	0f 90       	pop	r0
     706:	0f 90       	pop	r0
     708:	0f 90       	pop	r0
     70a:	08 95       	ret

0000070c <si7021_read>:
#define REG_SN_1	0xfa0f
#define REG_SN_2	0xfcc9
#define REG_REV		0x84b8

struct si7021_data_t si7021_read()
{
     70c:	0f 93       	push	r16
     70e:	1f 93       	push	r17
     710:	cf 93       	push	r28
     712:	df 93       	push	r29
     714:	00 d0       	rcall	.+0      	; 0x716 <si7021_read+0xa>
     716:	cd b7       	in	r28, 0x3d	; 61
     718:	de b7       	in	r29, 0x3e	; 62
	struct si7021_data_t res;
	uint8_t data[2];
	twi_read_data(I2C_ADDRESS, REG_RH_HOLD, 2, data);
     71a:	9e 01       	movw	r18, r28
     71c:	2f 5f       	subi	r18, 0xFF	; 255
     71e:	3f 4f       	sbci	r19, 0xFF	; 255
     720:	42 e0       	ldi	r20, 0x02	; 2
     722:	65 ee       	ldi	r22, 0xE5	; 229
     724:	80 e4       	ldi	r24, 0x40	; 64
     726:	0e 94 a5 02 	call	0x54a	; 0x54a <twi_read_data>
	res.rh = ((uint16_t)data[0] << 8) | ((uint16_t)data[1]);
     72a:	09 81       	ldd	r16, Y+1	; 0x01
     72c:	10 e0       	ldi	r17, 0x00	; 0
     72e:	10 2f       	mov	r17, r16
     730:	00 27       	eor	r16, r16
     732:	8a 81       	ldd	r24, Y+2	; 0x02
     734:	08 2b       	or	r16, r24
	twi_read_data(I2C_ADDRESS, REG_TEMP_PREV, 2, data);
     736:	9e 01       	movw	r18, r28
     738:	2f 5f       	subi	r18, 0xFF	; 255
     73a:	3f 4f       	sbci	r19, 0xFF	; 255
     73c:	42 e0       	ldi	r20, 0x02	; 2
     73e:	60 ee       	ldi	r22, 0xE0	; 224
     740:	80 e4       	ldi	r24, 0x40	; 64
     742:	0e 94 a5 02 	call	0x54a	; 0x54a <twi_read_data>
	res.temp = ((uint16_t)data[0] << 8) | ((uint16_t)data[1]);
     746:	29 81       	ldd	r18, Y+1	; 0x01
     748:	30 e0       	ldi	r19, 0x00	; 0
     74a:	32 2f       	mov	r19, r18
     74c:	22 27       	eor	r18, r18
     74e:	4a 81       	ldd	r20, Y+2	; 0x02
	return res;
     750:	b8 01       	movw	r22, r16
     752:	c9 01       	movw	r24, r18
     754:	84 2b       	or	r24, r20
}
     756:	0f 90       	pop	r0
     758:	0f 90       	pop	r0
     75a:	df 91       	pop	r29
     75c:	cf 91       	pop	r28
     75e:	1f 91       	pop	r17
     760:	0f 91       	pop	r16
     762:	08 95       	ret

00000764 <si7021_read_user1>:

uint8_t si7021_read_user1()
{
     764:	cf 93       	push	r28
     766:	df 93       	push	r29
     768:	1f 92       	push	r1
     76a:	cd b7       	in	r28, 0x3d	; 61
     76c:	de b7       	in	r29, 0x3e	; 62
	uint8_t data;
	if (!twi_read_data(I2C_ADDRESS, REG_USER1_R, 1, &data))
     76e:	9e 01       	movw	r18, r28
     770:	2f 5f       	subi	r18, 0xFF	; 255
     772:	3f 4f       	sbci	r19, 0xFF	; 255
     774:	41 e0       	ldi	r20, 0x01	; 1
     776:	67 ee       	ldi	r22, 0xE7	; 231
     778:	80 e4       	ldi	r24, 0x40	; 64
     77a:	0e 94 a5 02 	call	0x54a	; 0x54a <twi_read_data>
     77e:	88 23       	and	r24, r24
     780:	11 f0       	breq	.+4      	; 0x786 <si7021_read_user1+0x22>
		return 0;
	return data;
     782:	89 81       	ldd	r24, Y+1	; 0x01
     784:	01 c0       	rjmp	.+2      	; 0x788 <si7021_read_user1+0x24>

uint8_t si7021_read_user1()
{
	uint8_t data;
	if (!twi_read_data(I2C_ADDRESS, REG_USER1_R, 1, &data))
		return 0;
     786:	80 e0       	ldi	r24, 0x00	; 0
	return data;
}
     788:	0f 90       	pop	r0
     78a:	df 91       	pop	r29
     78c:	cf 91       	pop	r28
     78e:	08 95       	ret

00000790 <si7021_read_temp>:

uint16_t si7021_read_temp()
{
     790:	cf 93       	push	r28
     792:	df 93       	push	r29
     794:	00 d0       	rcall	.+0      	; 0x796 <si7021_read_temp+0x6>
     796:	cd b7       	in	r28, 0x3d	; 61
     798:	de b7       	in	r29, 0x3e	; 62
	uint8_t data[2];
	twi_read_data(I2C_ADDRESS, REG_TEMP_HOLD, 2, data);
     79a:	9e 01       	movw	r18, r28
     79c:	2f 5f       	subi	r18, 0xFF	; 255
     79e:	3f 4f       	sbci	r19, 0xFF	; 255
     7a0:	42 e0       	ldi	r20, 0x02	; 2
     7a2:	63 ee       	ldi	r22, 0xE3	; 227
     7a4:	80 e4       	ldi	r24, 0x40	; 64
     7a6:	0e 94 a5 02 	call	0x54a	; 0x54a <twi_read_data>
	return ((uint16_t)data[0] << 8) | ((uint16_t)data[1]);
     7aa:	89 81       	ldd	r24, Y+1	; 0x01
     7ac:	90 e0       	ldi	r25, 0x00	; 0
     7ae:	98 2f       	mov	r25, r24
     7b0:	88 27       	eor	r24, r24
     7b2:	2a 81       	ldd	r18, Y+2	; 0x02
}
     7b4:	82 2b       	or	r24, r18
     7b6:	0f 90       	pop	r0
     7b8:	0f 90       	pop	r0
     7ba:	df 91       	pop	r29
     7bc:	cf 91       	pop	r28
     7be:	08 95       	ret

000007c0 <si7021_read_u16_u32>:

uint32_t si7021_read_u16_u32(uint16_t reg)
{
     7c0:	cf 92       	push	r12
     7c2:	df 92       	push	r13
     7c4:	ef 92       	push	r14
     7c6:	ff 92       	push	r15
     7c8:	0f 93       	push	r16
     7ca:	1f 93       	push	r17
     7cc:	cf 93       	push	r28
     7ce:	df 93       	push	r29
     7d0:	1f 92       	push	r1
     7d2:	cd b7       	in	r28, 0x3d	; 61
     7d4:	de b7       	in	r29, 0x3e	; 62
     7d6:	18 2f       	mov	r17, r24
	uint32_t data = 0;
	uint8_t err = 0;
	twi_start();
     7d8:	99 83       	std	Y+1, r25	; 0x01
     7da:	0e 94 12 02 	call	0x424	; 0x424 <twi_start>
	err += !twi_write(I2C_ADDRESS << 1);
     7de:	80 e8       	ldi	r24, 0x80	; 128
     7e0:	0e 94 28 02 	call	0x450	; 0x450 <twi_write>
     7e4:	f8 2e       	mov	r15, r24
	err += !twi_write(reg >> 8);
     7e6:	99 81       	ldd	r25, Y+1	; 0x01
     7e8:	89 2f       	mov	r24, r25
     7ea:	0e 94 28 02 	call	0x450	; 0x450 <twi_write>
     7ee:	91 e0       	ldi	r25, 0x01	; 1
     7f0:	81 11       	cpse	r24, r1
     7f2:	90 e0       	ldi	r25, 0x00	; 0
uint32_t si7021_read_u16_u32(uint16_t reg)
{
	uint32_t data = 0;
	uint8_t err = 0;
	twi_start();
	err += !twi_write(I2C_ADDRESS << 1);
     7f4:	21 e0       	ldi	r18, 0x01	; 1
     7f6:	f1 10       	cpse	r15, r1
     7f8:	20 e0       	ldi	r18, 0x00	; 0
	err += !twi_write(reg >> 8);
     7fa:	f9 2e       	mov	r15, r25
     7fc:	f2 0e       	add	r15, r18
	err += !twi_write(reg & 0xff);
     7fe:	81 2f       	mov	r24, r17
     800:	0e 94 28 02 	call	0x450	; 0x450 <twi_write>
     804:	21 e0       	ldi	r18, 0x01	; 1
     806:	81 11       	cpse	r24, r1
     808:	20 e0       	ldi	r18, 0x00	; 0
     80a:	f2 0e       	add	r15, r18
	twi_start();
     80c:	0e 94 12 02 	call	0x424	; 0x424 <twi_start>
	err += !twi_write((I2C_ADDRESS << 1) | 1U);
     810:	81 e8       	ldi	r24, 0x81	; 129
     812:	0e 94 28 02 	call	0x450	; 0x450 <twi_write>
     816:	91 e0       	ldi	r25, 0x01	; 1
     818:	81 11       	cpse	r24, r1
     81a:	90 e0       	ldi	r25, 0x00	; 0
     81c:	9f 0d       	add	r25, r15
	if (err)
     81e:	f9 f4       	brne	.+62     	; 0x85e <si7021_read_u16_u32+0x9e>
     820:	16 e0       	ldi	r17, 0x06	; 6
     822:	c1 2c       	mov	r12, r1
     824:	d1 2c       	mov	r13, r1
     826:	76 01       	movw	r14, r12
		return 0;
	uint8_t i = 6;
	while (i--) {
		if ((i % 3) == 0) {
     828:	03 e0       	ldi	r16, 0x03	; 3
	twi_start();
	err += !twi_write((I2C_ADDRESS << 1) | 1U);
	if (err)
		return 0;
	uint8_t i = 6;
	while (i--) {
     82a:	11 50       	subi	r17, 0x01	; 1
     82c:	98 f0       	brcs	.+38     	; 0x854 <si7021_read_u16_u32+0x94>
		if ((i % 3) == 0) {
     82e:	81 2f       	mov	r24, r17
     830:	60 2f       	mov	r22, r16
     832:	0e 94 83 09 	call	0x1306	; 0x1306 <__udivmodqi4>
     836:	91 11       	cpse	r25, r1
     838:	04 c0       	rjmp	.+8      	; 0x842 <si7021_read_u16_u32+0x82>
			twi_read(i);	// Skip CRC
     83a:	81 2f       	mov	r24, r17
     83c:	0e 94 3f 02 	call	0x47e	; 0x47e <twi_read>
     840:	f4 cf       	rjmp	.-24     	; 0x82a <si7021_read_u16_u32+0x6a>
			continue;
		}
		data <<= 8;
     842:	fe 2c       	mov	r15, r14
     844:	ed 2c       	mov	r14, r13
     846:	dc 2c       	mov	r13, r12
     848:	cc 24       	eor	r12, r12
		data |= (uint32_t)twi_read(i);
     84a:	81 2f       	mov	r24, r17
     84c:	0e 94 3f 02 	call	0x47e	; 0x47e <twi_read>
     850:	c8 2a       	or	r12, r24
     852:	eb cf       	rjmp	.-42     	; 0x82a <si7021_read_u16_u32+0x6a>
	}
	twi_stop();
     854:	0e 94 1a 02 	call	0x434	; 0x434 <twi_stop>
     858:	b6 01       	movw	r22, r12
     85a:	c7 01       	movw	r24, r14
     85c:	04 c0       	rjmp	.+8      	; 0x866 <si7021_read_u16_u32+0xa6>
	err += !twi_write(reg >> 8);
	err += !twi_write(reg & 0xff);
	twi_start();
	err += !twi_write((I2C_ADDRESS << 1) | 1U);
	if (err)
		return 0;
     85e:	60 e0       	ldi	r22, 0x00	; 0
     860:	70 e0       	ldi	r23, 0x00	; 0
     862:	80 e0       	ldi	r24, 0x00	; 0
     864:	90 e0       	ldi	r25, 0x00	; 0
		data <<= 8;
		data |= (uint32_t)twi_read(i);
	}
	twi_stop();
	return data;
}
     866:	0f 90       	pop	r0
     868:	df 91       	pop	r29
     86a:	cf 91       	pop	r28
     86c:	1f 91       	pop	r17
     86e:	0f 91       	pop	r16
     870:	ff 90       	pop	r15
     872:	ef 90       	pop	r14
     874:	df 90       	pop	r13
     876:	cf 90       	pop	r12
     878:	08 95       	ret

0000087a <si7021_read_sn>:

uint64_t si7021_read_sn()
{
     87a:	af 92       	push	r10
     87c:	bf 92       	push	r11
     87e:	cf 92       	push	r12
     880:	df 92       	push	r13
     882:	ef 92       	push	r14
     884:	ff 92       	push	r15
     886:	0f 93       	push	r16
     888:	1f 93       	push	r17
     88a:	cf 93       	push	r28
     88c:	df 93       	push	r29
	uint64_t data = (uint64_t)si7021_read_u16_u32(REG_SN_1) << 32;
     88e:	8f e0       	ldi	r24, 0x0F	; 15
     890:	9a ef       	ldi	r25, 0xFA	; 250
     892:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <si7021_read_u16_u32>
     896:	dc 01       	movw	r26, r24
     898:	cb 01       	movw	r24, r22
     89a:	9c 01       	movw	r18, r24
     89c:	ad 01       	movw	r20, r26
     89e:	60 e0       	ldi	r22, 0x00	; 0
     8a0:	70 e0       	ldi	r23, 0x00	; 0
     8a2:	80 e0       	ldi	r24, 0x00	; 0
     8a4:	90 e0       	ldi	r25, 0x00	; 0
     8a6:	00 e2       	ldi	r16, 0x20	; 32
     8a8:	0e 94 da 09 	call	0x13b4	; 0x13b4 <__ashldi3>
     8ac:	d2 2e       	mov	r13, r18
     8ae:	c3 2e       	mov	r12, r19
     8b0:	b4 2e       	mov	r11, r20
     8b2:	a5 2e       	mov	r10, r21
     8b4:	7b 01       	movw	r14, r22
     8b6:	d8 2f       	mov	r29, r24
     8b8:	c9 2f       	mov	r28, r25
	data |= si7021_read_u16_u32(REG_SN_2);
     8ba:	89 ec       	ldi	r24, 0xC9	; 201
     8bc:	9c ef       	ldi	r25, 0xFC	; 252
     8be:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <si7021_read_u16_u32>
     8c2:	8b 01       	movw	r16, r22
     8c4:	9c 01       	movw	r18, r24
     8c6:	d6 2a       	or	r13, r22
     8c8:	c1 2a       	or	r12, r17
     8ca:	b2 2a       	or	r11, r18
     8cc:	5a 2d       	mov	r21, r10
     8ce:	53 2b       	or	r21, r19
	return data;
}
     8d0:	2d 2d       	mov	r18, r13
     8d2:	3c 2d       	mov	r19, r12
     8d4:	4b 2d       	mov	r20, r11
     8d6:	b7 01       	movw	r22, r14
     8d8:	8d 2f       	mov	r24, r29
     8da:	9c 2f       	mov	r25, r28
     8dc:	df 91       	pop	r29
     8de:	cf 91       	pop	r28
     8e0:	1f 91       	pop	r17
     8e2:	0f 91       	pop	r16
     8e4:	ff 90       	pop	r15
     8e6:	ef 90       	pop	r14
     8e8:	df 90       	pop	r13
     8ea:	cf 90       	pop	r12
     8ec:	bf 90       	pop	r11
     8ee:	af 90       	pop	r10
     8f0:	08 95       	ret

000008f2 <si7021_write_heater>:

uint8_t si7021_write_heater(uint8_t heater)
{
     8f2:	1f 93       	push	r17
     8f4:	cf 93       	push	r28
     8f6:	df 93       	push	r29
     8f8:	1f 92       	push	r1
     8fa:	cd b7       	in	r28, 0x3d	; 61
     8fc:	de b7       	in	r29, 0x3e	; 62
     8fe:	18 2f       	mov	r17, r24
	uint8_t data;
	if (!twi_read_data(I2C_ADDRESS, REG_USER1_R, 1, &data))
     900:	9e 01       	movw	r18, r28
     902:	2f 5f       	subi	r18, 0xFF	; 255
     904:	3f 4f       	sbci	r19, 0xFF	; 255
     906:	41 e0       	ldi	r20, 0x01	; 1
     908:	67 ee       	ldi	r22, 0xE7	; 231
     90a:	80 e4       	ldi	r24, 0x40	; 64
     90c:	0e 94 a5 02 	call	0x54a	; 0x54a <twi_read_data>
     910:	81 11       	cpse	r24, r1
     912:	02 c0       	rjmp	.+4      	; 0x918 <__stack+0x19>
		return 0;
     914:	80 e0       	ldi	r24, 0x00	; 0
     916:	29 c0       	rjmp	.+82     	; 0x96a <__stack+0x6b>
     918:	89 81       	ldd	r24, Y+1	; 0x01
	if (heater & 0x80)
     91a:	17 ff       	sbrs	r17, 7
     91c:	02 c0       	rjmp	.+4      	; 0x922 <__stack+0x23>
		data |= REG_USER1_HTRE;
     91e:	84 60       	ori	r24, 0x04	; 4
     920:	01 c0       	rjmp	.+2      	; 0x924 <__stack+0x25>
	else
		data &= ~REG_USER1_HTRE;
     922:	8b 7f       	andi	r24, 0xFB	; 251
     924:	89 83       	std	Y+1, r24	; 0x01
	if (!twi_write_data(I2C_ADDRESS, REG_USER1_W, 1, &data))
     926:	9e 01       	movw	r18, r28
     928:	2f 5f       	subi	r18, 0xFF	; 255
     92a:	3f 4f       	sbci	r19, 0xFF	; 255
     92c:	41 e0       	ldi	r20, 0x01	; 1
     92e:	66 ee       	ldi	r22, 0xE6	; 230
     930:	80 e4       	ldi	r24, 0x40	; 64
     932:	0e 94 60 02 	call	0x4c0	; 0x4c0 <twi_write_data>
     936:	88 23       	and	r24, r24
     938:	69 f3       	breq	.-38     	; 0x914 <__stack+0x15>
		return 0;
	if (!twi_read_data(I2C_ADDRESS, REG_HEATER_R, 1, &data))
     93a:	9e 01       	movw	r18, r28
     93c:	2f 5f       	subi	r18, 0xFF	; 255
     93e:	3f 4f       	sbci	r19, 0xFF	; 255
     940:	41 e0       	ldi	r20, 0x01	; 1
     942:	61 e1       	ldi	r22, 0x11	; 17
     944:	80 e4       	ldi	r24, 0x40	; 64
     946:	0e 94 a5 02 	call	0x54a	; 0x54a <twi_read_data>
     94a:	88 23       	and	r24, r24
     94c:	19 f3       	breq	.-58     	; 0x914 <__stack+0x15>
		return 0;
	data = (data & 0xf0) | (heater & 0x0f);
     94e:	81 2f       	mov	r24, r17
     950:	8f 70       	andi	r24, 0x0F	; 15
     952:	99 81       	ldd	r25, Y+1	; 0x01
     954:	90 7f       	andi	r25, 0xF0	; 240
     956:	89 2b       	or	r24, r25
     958:	89 83       	std	Y+1, r24	; 0x01
	return twi_write_data(I2C_ADDRESS, REG_HEATER_W, 1, &data);
     95a:	9e 01       	movw	r18, r28
     95c:	2f 5f       	subi	r18, 0xFF	; 255
     95e:	3f 4f       	sbci	r19, 0xFF	; 255
     960:	41 e0       	ldi	r20, 0x01	; 1
     962:	61 e5       	ldi	r22, 0x51	; 81
     964:	80 e4       	ldi	r24, 0x40	; 64
     966:	0e 94 60 02 	call	0x4c0	; 0x4c0 <twi_write_data>
}
     96a:	0f 90       	pop	r0
     96c:	df 91       	pop	r29
     96e:	cf 91       	pop	r28
     970:	1f 91       	pop	r17
     972:	08 95       	ret

00000974 <read>:

static uint8_t read()
{
	uint8_t data = 0;
	uint8_t i = 8;
	while (i--) {
     974:	99 e0       	ldi	r25, 0x09	; 9
	return 0;
}

static uint8_t read()
{
	uint8_t data = 0;
     976:	80 e0       	ldi	r24, 0x00	; 0
     978:	91 50       	subi	r25, 0x01	; 1
	uint8_t i = 8;
	while (i--) {
     97a:	69 f0       	breq	.+26     	; 0x996 <read+0x22>
		while (!READ());
     97c:	18 9b       	sbis	0x03, 0	; 3
     97e:	fe cf       	rjmp	.-4      	; 0x97c <read+0x8>
     980:	25 e8       	ldi	r18, 0x85	; 133
     982:	2a 95       	dec	r18
     984:	f1 f7       	brne	.-4      	; 0x982 <read+0xe>
     986:	00 00       	nop
		// > TH0_MAX
		// < TH1_MIN
		// < TH0_MIN + TLOW_MIN
		_delay_us(50);
		data <<= 1;
		data |= !!READ();
     988:	23 b1       	in	r18, 0x03	; 3
		// Delay conditions:
		// > TH0_MAX
		// < TH1_MIN
		// < TH0_MIN + TLOW_MIN
		_delay_us(50);
		data <<= 1;
     98a:	88 0f       	add	r24, r24
		data |= !!READ();
     98c:	21 70       	andi	r18, 0x01	; 1
     98e:	82 2b       	or	r24, r18
		while (READ());
     990:	18 99       	sbic	0x03, 0	; 3
     992:	fe cf       	rjmp	.-4      	; 0x990 <read+0x1c>
     994:	f1 cf       	rjmp	.-30     	; 0x978 <read+0x4>
	}
	return data;
}
     996:	08 95       	ret

00000998 <am2302_read>:

struct am2302_data am2302_read()
{
     998:	ef 92       	push	r14
     99a:	ff 92       	push	r15
     99c:	0f 93       	push	r16
     99e:	1f 93       	push	r17
     9a0:	cf 93       	push	r28
     9a2:	df 93       	push	r29
     9a4:	00 d0       	rcall	.+0      	; 0x9a6 <am2302_read+0xe>
     9a6:	00 d0       	rcall	.+0      	; 0x9a8 <am2302_read+0x10>
     9a8:	1f 92       	push	r1
     9aa:	cd b7       	in	r28, 0x3d	; 61
     9ac:	de b7       	in	r29, 0x3e	; 62
#define MODE_RD()	DDRB &= ~_BV(PIN)
#define READ()		(PINB & _BV(PIN))

static uint8_t start()
{
	while (!READ());
     9ae:	18 9b       	sbis	0x03, 0	; 3
     9b0:	fe cf       	rjmp	.-4      	; 0x9ae <am2302_read+0x16>
	LOW();
     9b2:	28 98       	cbi	0x05, 0	; 5
	MODE_WR();
     9b4:	20 9a       	sbi	0x04, 0	; 4
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     9b6:	8f ec       	ldi	r24, 0xCF	; 207
     9b8:	97 e0       	ldi	r25, 0x07	; 7
     9ba:	01 97       	sbiw	r24, 0x01	; 1
     9bc:	f1 f7       	brne	.-4      	; 0x9ba <am2302_read+0x22>
     9be:	00 c0       	rjmp	.+0      	; 0x9c0 <am2302_read+0x28>
     9c0:	00 00       	nop
	_delay_ms(1);	// Tbe
	MODE_RD();
     9c2:	20 98       	cbi	0x04, 0	; 4
	HIGH();
     9c4:	28 9a       	sbi	0x05, 0	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     9c6:	90 e5       	ldi	r25, 0x50	; 80
     9c8:	9a 95       	dec	r25
     9ca:	f1 f7       	brne	.-4      	; 0x9c8 <am2302_read+0x30>
     9cc:	85 e1       	ldi	r24, 0x15	; 21
     9ce:	81 50       	subi	r24, 0x01	; 1
	_delay_us(30);	// Tgo
	uint8_t i = 20;	// Wait for response for 200us
	while (i--) {
     9d0:	61 f0       	breq	.+24     	; 0x9ea <am2302_read+0x52>
		if (!READ()) {
     9d2:	18 99       	sbic	0x03, 0	; 3
     9d4:	05 c0       	rjmp	.+10     	; 0x9e0 <am2302_read+0x48>
			while (!READ());	// Trel
     9d6:	18 9b       	sbis	0x03, 0	; 3
     9d8:	fe cf       	rjmp	.-4      	; 0x9d6 <am2302_read+0x3e>
			while (READ());		// Treh
     9da:	18 99       	sbic	0x03, 0	; 3
     9dc:	fe cf       	rjmp	.-4      	; 0x9da <am2302_read+0x42>
     9de:	0b c0       	rjmp	.+22     	; 0x9f6 <am2302_read+0x5e>
     9e0:	9a e1       	ldi	r25, 0x1A	; 26
     9e2:	9a 95       	dec	r25
     9e4:	f1 f7       	brne	.-4      	; 0x9e2 <am2302_read+0x4a>
     9e6:	00 c0       	rjmp	.+0      	; 0x9e8 <am2302_read+0x50>
     9e8:	f2 cf       	rjmp	.-28     	; 0x9ce <am2302_read+0x36>

struct am2302_data am2302_read()
{
	struct am2302_data data = {0, 0, 0xff};
	if (!start())
		return data;
     9ea:	1a 82       	std	Y+2, r1	; 0x02
     9ec:	19 82       	std	Y+1, r1	; 0x01
     9ee:	1c 82       	std	Y+4, r1	; 0x04
     9f0:	1b 82       	std	Y+3, r1	; 0x03
     9f2:	8f ef       	ldi	r24, 0xFF	; 255
     9f4:	18 c0       	rjmp	.+48     	; 0xa26 <am2302_read+0x8e>
	data.rh = (uint16_t)read() << 8;
     9f6:	0e 94 ba 04 	call	0x974	; 0x974 <read>
     9fa:	e8 2e       	mov	r14, r24
	data.rh |= read();
     9fc:	0e 94 ba 04 	call	0x974	; 0x974 <read>
struct am2302_data am2302_read()
{
	struct am2302_data data = {0, 0, 0xff};
	if (!start())
		return data;
	data.rh = (uint16_t)read() << 8;
     a00:	f1 2c       	mov	r15, r1
     a02:	fe 2c       	mov	r15, r14
     a04:	ee 24       	eor	r14, r14
	data.rh |= read();
     a06:	e8 2a       	or	r14, r24
	data.temp = (uint16_t)read() << 8;
     a08:	0e 94 ba 04 	call	0x974	; 0x974 <read>
     a0c:	08 2f       	mov	r16, r24
	data.temp |= read();
     a0e:	0e 94 ba 04 	call	0x974	; 0x974 <read>
	struct am2302_data data = {0, 0, 0xff};
	if (!start())
		return data;
	data.rh = (uint16_t)read() << 8;
	data.rh |= read();
	data.temp = (uint16_t)read() << 8;
     a12:	10 e0       	ldi	r17, 0x00	; 0
     a14:	10 2f       	mov	r17, r16
     a16:	00 27       	eor	r16, r16
	data.temp |= read();
     a18:	08 2b       	or	r16, r24
	data.parity = read();
     a1a:	0e 94 ba 04 	call	0x974	; 0x974 <read>
	return data;
     a1e:	fa 82       	std	Y+2, r15	; 0x02
     a20:	e9 82       	std	Y+1, r14	; 0x01
     a22:	1c 83       	std	Y+4, r17	; 0x04
     a24:	0b 83       	std	Y+3, r16	; 0x03
     a26:	8d 83       	std	Y+5, r24	; 0x05
     a28:	29 81       	ldd	r18, Y+1	; 0x01
     a2a:	3a 81       	ldd	r19, Y+2	; 0x02
     a2c:	4b 81       	ldd	r20, Y+3	; 0x03
     a2e:	5c 81       	ldd	r21, Y+4	; 0x04
     a30:	6d 81       	ldd	r22, Y+5	; 0x05
}
     a32:	70 e0       	ldi	r23, 0x00	; 0
     a34:	80 e0       	ldi	r24, 0x00	; 0
     a36:	90 e0       	ldi	r25, 0x00	; 0
     a38:	0f 90       	pop	r0
     a3a:	0f 90       	pop	r0
     a3c:	0f 90       	pop	r0
     a3e:	0f 90       	pop	r0
     a40:	0f 90       	pop	r0
     a42:	df 91       	pop	r29
     a44:	cf 91       	pop	r28
     a46:	1f 91       	pop	r17
     a48:	0f 91       	pop	r16
     a4a:	ff 90       	pop	r15
     a4c:	ef 90       	pop	r14
     a4e:	08 95       	ret

00000a50 <am2302_check>:
     a50:	fc 01       	movw	r30, r24
     a52:	dc 01       	movw	r26, r24
     a54:	85 e0       	ldi	r24, 0x05	; 5
     a56:	90 e0       	ldi	r25, 0x00	; 0
     a58:	81 50       	subi	r24, 0x01	; 1
     a5a:	19 f0       	breq	.+6      	; 0xa62 <am2302_check+0x12>
     a5c:	2d 91       	ld	r18, X+
     a5e:	92 0f       	add	r25, r18
     a60:	fb cf       	rjmp	.-10     	; 0xa58 <am2302_check+0x8>
     a62:	81 e0       	ldi	r24, 0x01	; 1
     a64:	24 81       	ldd	r18, Z+4	; 0x04
     a66:	92 13       	cpse	r25, r18
     a68:	80 e0       	ldi	r24, 0x00	; 0
     a6a:	08 95       	ret

00000a6c <main>:
}

int main()
{
     a6c:	cf 93       	push	r28
     a6e:	df 93       	push	r29
     a70:	00 d0       	rcall	.+0      	; 0xa72 <main+0x6>
     a72:	00 d0       	rcall	.+0      	; 0xa74 <main+0x8>
     a74:	1f 92       	push	r1
     a76:	cd b7       	in	r28, 0x3d	; 61
     a78:	de b7       	in	r29, 0x3e	; 62
	init();
     a7a:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <init>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     a7e:	2f ef       	ldi	r18, 0xFF	; 255
     a80:	3d e3       	ldi	r19, 0x3D	; 61
     a82:	89 e4       	ldi	r24, 0x49	; 73
     a84:	21 50       	subi	r18, 0x01	; 1
     a86:	30 40       	sbci	r19, 0x00	; 0
     a88:	80 40       	sbci	r24, 0x00	; 0
     a8a:	e1 f7       	brne	.-8      	; 0xa84 <main+0x18>
     a8c:	00 c0       	rjmp	.+0      	; 0xa8e <main+0x22>
     a8e:	00 00       	nop

	_delay_ms(3000);
	puts("Hello, world!");
     a90:	80 e2       	ldi	r24, 0x20	; 32
     a92:	91 e0       	ldi	r25, 0x01	; 1
     a94:	0e 94 d0 0c 	call	0x19a0	; 0x19a0 <puts>

#if 0
	si7021_write_heater(0x80 | 0x0f);
#else
	si7021_write_heater(0);
     a98:	80 e0       	ldi	r24, 0x00	; 0
     a9a:	0e 94 79 04 	call	0x8f2	; 0x8f2 <si7021_write_heater>

loop:
#if 1	// AM2302
	puts(ESC_RED "\n*** AM2302 ***");
	struct am2302_data data = am2302_read();
	printf("RH:\t%u\t| %u.%u\n", data.rh, data.rh / 10, data.rh % 10);
     a9e:	8a e0       	ldi	r24, 0x0A	; 10
     aa0:	c8 2e       	mov	r12, r24
     aa2:	d1 2c       	mov	r13, r1
     aa4:	93 e4       	ldi	r25, 0x43	; 67
     aa6:	a9 2e       	mov	r10, r25
     aa8:	91 e0       	ldi	r25, 0x01	; 1
     aaa:	b9 2e       	mov	r11, r25
	printf("TEMP:\t%u\t| %u.%u\n", data.temp, data.temp / 10, data.temp % 10);
     aac:	23 e5       	ldi	r18, 0x53	; 83
     aae:	82 2e       	mov	r8, r18
     ab0:	21 e0       	ldi	r18, 0x01	; 1
     ab2:	92 2e       	mov	r9, r18
	printf("Parity: 0x%02x, %s\n", data.parity, am2302_check(&data) ? "passed" : "failed");
     ab4:	35 e6       	ldi	r19, 0x65	; 101
     ab6:	e3 2e       	mov	r14, r19
     ab8:	31 e0       	ldi	r19, 0x01	; 1
     aba:	f3 2e       	mov	r15, r19
#endif	// AM2302
#if 1	// Si7021
	puts(ESC_GREEN "\n*** Si7021 ***");
	printf("USER1:\t0x%02x\n", si7021_read_user1());
     abc:	0e e8       	ldi	r16, 0x8E	; 142
     abe:	11 e0       	ldi	r17, 0x01	; 1
	struct si7021_data_t res = si7021_read();
	printf("RH:\t%u\t| %g\n", res.rh, (float)res.rh * 125. / 65536. - 6.);
     ac0:	4d e9       	ldi	r20, 0x9D	; 157
     ac2:	24 2e       	mov	r2, r20
     ac4:	41 e0       	ldi	r20, 0x01	; 1
     ac6:	34 2e       	mov	r3, r20
	si7021_write_heater(0);
#endif

loop:
#if 1	// AM2302
	puts(ESC_RED "\n*** AM2302 ***");
     ac8:	8e e2       	ldi	r24, 0x2E	; 46
     aca:	91 e0       	ldi	r25, 0x01	; 1
     acc:	0e 94 d0 0c 	call	0x19a0	; 0x19a0 <puts>
	struct am2302_data data = am2302_read();
     ad0:	0e 94 cc 04 	call	0x998	; 0x998 <am2302_read>
     ad4:	29 83       	std	Y+1, r18	; 0x01
     ad6:	3a 83       	std	Y+2, r19	; 0x02
     ad8:	4b 83       	std	Y+3, r20	; 0x03
     ada:	5c 83       	std	Y+4, r21	; 0x04
     adc:	6d 83       	std	Y+5, r22	; 0x05
	printf("RH:\t%u\t| %u.%u\n", data.rh, data.rh / 10, data.rh % 10);
     ade:	c9 01       	movw	r24, r18
     ae0:	b6 01       	movw	r22, r12
     ae2:	0e 94 8f 09 	call	0x131e	; 0x131e <__udivmodhi4>
     ae6:	9f 93       	push	r25
     ae8:	8f 93       	push	r24
     aea:	7f 93       	push	r23
     aec:	6f 93       	push	r22
     aee:	3f 93       	push	r19
     af0:	2f 93       	push	r18
     af2:	bf 92       	push	r11
     af4:	af 92       	push	r10
     af6:	0e 94 bc 0c 	call	0x1978	; 0x1978 <printf>
	printf("TEMP:\t%u\t| %u.%u\n", data.temp, data.temp / 10, data.temp % 10);
     afa:	2b 81       	ldd	r18, Y+3	; 0x03
     afc:	3c 81       	ldd	r19, Y+4	; 0x04
     afe:	c9 01       	movw	r24, r18
     b00:	b6 01       	movw	r22, r12
     b02:	0e 94 8f 09 	call	0x131e	; 0x131e <__udivmodhi4>
     b06:	9f 93       	push	r25
     b08:	8f 93       	push	r24
     b0a:	7f 93       	push	r23
     b0c:	6f 93       	push	r22
     b0e:	3f 93       	push	r19
     b10:	2f 93       	push	r18
     b12:	9f 92       	push	r9
     b14:	8f 92       	push	r8
     b16:	0e 94 bc 0c 	call	0x1978	; 0x1978 <printf>
	printf("Parity: 0x%02x, %s\n", data.parity, am2302_check(&data) ? "passed" : "failed");
     b1a:	ce 01       	movw	r24, r28
     b1c:	01 96       	adiw	r24, 0x01	; 1
     b1e:	0e 94 28 05 	call	0xa50	; 0xa50 <am2302_check>
     b22:	0f b6       	in	r0, 0x3f	; 63
     b24:	f8 94       	cli
     b26:	de bf       	out	0x3e, r29	; 62
     b28:	0f be       	out	0x3f, r0	; 63
     b2a:	cd bf       	out	0x3d, r28	; 61
     b2c:	88 23       	and	r24, r24
     b2e:	19 f0       	breq	.+6      	; 0xb36 <main+0xca>
     b30:	82 e1       	ldi	r24, 0x12	; 18
     b32:	91 e0       	ldi	r25, 0x01	; 1
     b34:	02 c0       	rjmp	.+4      	; 0xb3a <main+0xce>
     b36:	89 e1       	ldi	r24, 0x19	; 25
     b38:	91 e0       	ldi	r25, 0x01	; 1
     b3a:	9f 93       	push	r25
     b3c:	8f 93       	push	r24
     b3e:	8d 81       	ldd	r24, Y+5	; 0x05
     b40:	1f 92       	push	r1
     b42:	8f 93       	push	r24
     b44:	ff 92       	push	r15
     b46:	ef 92       	push	r14
     b48:	0e 94 bc 0c 	call	0x1978	; 0x1978 <printf>
#endif	// AM2302
#if 1	// Si7021
	puts(ESC_GREEN "\n*** Si7021 ***");
     b4c:	89 e7       	ldi	r24, 0x79	; 121
     b4e:	91 e0       	ldi	r25, 0x01	; 1
     b50:	0e 94 d0 0c 	call	0x19a0	; 0x19a0 <puts>
	printf("USER1:\t0x%02x\n", si7021_read_user1());
     b54:	0e 94 b2 03 	call	0x764	; 0x764 <si7021_read_user1>
     b58:	1f 92       	push	r1
     b5a:	8f 93       	push	r24
     b5c:	1f 93       	push	r17
     b5e:	0f 93       	push	r16
     b60:	0e 94 bc 0c 	call	0x1978	; 0x1978 <printf>
	struct si7021_data_t res = si7021_read();
     b64:	0e 94 86 03 	call	0x70c	; 0x70c <si7021_read>
     b68:	2b 01       	movw	r4, r22
     b6a:	3c 01       	movw	r6, r24
	printf("RH:\t%u\t| %g\n", res.rh, (float)res.rh * 125. / 65536. - 6.);
     b6c:	80 e0       	ldi	r24, 0x00	; 0
     b6e:	90 e0       	ldi	r25, 0x00	; 0
     b70:	0e 94 58 0a 	call	0x14b0	; 0x14b0 <__floatunsisf>
     b74:	20 e0       	ldi	r18, 0x00	; 0
     b76:	30 e0       	ldi	r19, 0x00	; 0
     b78:	4a ef       	ldi	r20, 0xFA	; 250
     b7a:	52 e4       	ldi	r21, 0x42	; 66
     b7c:	0e 94 e6 0a 	call	0x15cc	; 0x15cc <__mulsf3>
     b80:	20 e0       	ldi	r18, 0x00	; 0
     b82:	30 e0       	ldi	r19, 0x00	; 0
     b84:	40 e8       	ldi	r20, 0x80	; 128
     b86:	57 e3       	ldi	r21, 0x37	; 55
     b88:	0e 94 e6 0a 	call	0x15cc	; 0x15cc <__mulsf3>
     b8c:	20 e0       	ldi	r18, 0x00	; 0
     b8e:	30 e0       	ldi	r19, 0x00	; 0
     b90:	40 ec       	ldi	r20, 0xC0	; 192
     b92:	50 e4       	ldi	r21, 0x40	; 64
     b94:	0e 94 f3 09 	call	0x13e6	; 0x13e6 <__subsf3>
     b98:	9f 93       	push	r25
     b9a:	8f 93       	push	r24
     b9c:	7f 93       	push	r23
     b9e:	6f 93       	push	r22
     ba0:	5f 92       	push	r5
     ba2:	4f 92       	push	r4
     ba4:	3f 92       	push	r3
     ba6:	2f 92       	push	r2
     ba8:	0e 94 bc 0c 	call	0x1978	; 0x1978 <printf>
	printf("TEMP:\t%u\t| %g\n", res.temp, (float)res.temp * 175.72 / 65536. - 46.85);
     bac:	b3 01       	movw	r22, r6
     bae:	80 e0       	ldi	r24, 0x00	; 0
     bb0:	90 e0       	ldi	r25, 0x00	; 0
     bb2:	0e 94 58 0a 	call	0x14b0	; 0x14b0 <__floatunsisf>
     bb6:	22 e5       	ldi	r18, 0x52	; 82
     bb8:	38 eb       	ldi	r19, 0xB8	; 184
     bba:	4f e2       	ldi	r20, 0x2F	; 47
     bbc:	53 e4       	ldi	r21, 0x43	; 67
     bbe:	0e 94 e6 0a 	call	0x15cc	; 0x15cc <__mulsf3>
     bc2:	20 e0       	ldi	r18, 0x00	; 0
     bc4:	30 e0       	ldi	r19, 0x00	; 0
     bc6:	40 e8       	ldi	r20, 0x80	; 128
     bc8:	57 e3       	ldi	r21, 0x37	; 55
     bca:	0e 94 e6 0a 	call	0x15cc	; 0x15cc <__mulsf3>
     bce:	26 e6       	ldi	r18, 0x66	; 102
     bd0:	36 e6       	ldi	r19, 0x66	; 102
     bd2:	4b e3       	ldi	r20, 0x3B	; 59
     bd4:	52 e4       	ldi	r21, 0x42	; 66
     bd6:	0e 94 f3 09 	call	0x13e6	; 0x13e6 <__subsf3>
     bda:	9f 93       	push	r25
     bdc:	8f 93       	push	r24
     bde:	7f 93       	push	r23
     be0:	6f 93       	push	r22
     be2:	7f 92       	push	r7
     be4:	6f 92       	push	r6
     be6:	aa ea       	ldi	r26, 0xAA	; 170
     be8:	b1 e0       	ldi	r27, 0x01	; 1
     bea:	bf 93       	push	r27
     bec:	af 93       	push	r26
     bee:	0e 94 bc 0c 	call	0x1978	; 0x1978 <printf>
     bf2:	3f ef       	ldi	r19, 0xFF	; 255
     bf4:	83 ed       	ldi	r24, 0xD3	; 211
     bf6:	90 e3       	ldi	r25, 0x30	; 48
     bf8:	31 50       	subi	r19, 0x01	; 1
     bfa:	80 40       	sbci	r24, 0x00	; 0
     bfc:	90 40       	sbci	r25, 0x00	; 0
     bfe:	e1 f7       	brne	.-8      	; 0xbf8 <main+0x18c>
     c00:	00 c0       	rjmp	.+0      	; 0xc02 <main+0x196>
     c02:	00 00       	nop
     c04:	0f b6       	in	r0, 0x3f	; 63
     c06:	f8 94       	cli
     c08:	de bf       	out	0x3e, r29	; 62
     c0a:	0f be       	out	0x3f, r0	; 63
     c0c:	cd bf       	out	0x3d, r28	; 61
     c0e:	5c cf       	rjmp	.-328    	; 0xac8 <main+0x5c>

00000c10 <vfprintf>:
     c10:	a3 e1       	ldi	r26, 0x13	; 19
     c12:	b0 e0       	ldi	r27, 0x00	; 0
     c14:	ee e0       	ldi	r30, 0x0E	; 14
     c16:	f6 e0       	ldi	r31, 0x06	; 6
     c18:	0c 94 a3 09 	jmp	0x1346	; 0x1346 <__prologue_saves__>
     c1c:	7c 01       	movw	r14, r24
     c1e:	1b 01       	movw	r2, r22
     c20:	6a 01       	movw	r12, r20
     c22:	fc 01       	movw	r30, r24
     c24:	17 82       	std	Z+7, r1	; 0x07
     c26:	16 82       	std	Z+6, r1	; 0x06
     c28:	83 81       	ldd	r24, Z+3	; 0x03
     c2a:	81 ff       	sbrs	r24, 1
     c2c:	66 c3       	rjmp	.+1740   	; 0x12fa <vfprintf+0x6ea>
     c2e:	be 01       	movw	r22, r28
     c30:	6f 5f       	subi	r22, 0xFF	; 255
     c32:	7f 4f       	sbci	r23, 0xFF	; 255
     c34:	4b 01       	movw	r8, r22
     c36:	f7 01       	movw	r30, r14
     c38:	93 81       	ldd	r25, Z+3	; 0x03
     c3a:	f1 01       	movw	r30, r2
     c3c:	93 fd       	sbrc	r25, 3
     c3e:	85 91       	lpm	r24, Z+
     c40:	93 ff       	sbrs	r25, 3
     c42:	81 91       	ld	r24, Z+
     c44:	1f 01       	movw	r2, r30
     c46:	88 23       	and	r24, r24
     c48:	09 f4       	brne	.+2      	; 0xc4c <vfprintf+0x3c>
     c4a:	53 c3       	rjmp	.+1702   	; 0x12f2 <vfprintf+0x6e2>
     c4c:	85 32       	cpi	r24, 0x25	; 37
     c4e:	39 f4       	brne	.+14     	; 0xc5e <vfprintf+0x4e>
     c50:	93 fd       	sbrc	r25, 3
     c52:	85 91       	lpm	r24, Z+
     c54:	93 ff       	sbrs	r25, 3
     c56:	81 91       	ld	r24, Z+
     c58:	1f 01       	movw	r2, r30
     c5a:	85 32       	cpi	r24, 0x25	; 37
     c5c:	39 f4       	brne	.+14     	; 0xc6c <vfprintf+0x5c>
     c5e:	b7 01       	movw	r22, r14
     c60:	90 e0       	ldi	r25, 0x00	; 0
     c62:	0e 94 8a 0c 	call	0x1914	; 0x1914 <fputc>
     c66:	56 01       	movw	r10, r12
     c68:	65 01       	movw	r12, r10
     c6a:	e5 cf       	rjmp	.-54     	; 0xc36 <vfprintf+0x26>
     c6c:	10 e0       	ldi	r17, 0x00	; 0
     c6e:	51 2c       	mov	r5, r1
     c70:	20 e0       	ldi	r18, 0x00	; 0
     c72:	20 32       	cpi	r18, 0x20	; 32
     c74:	a0 f4       	brcc	.+40     	; 0xc9e <vfprintf+0x8e>
     c76:	8b 32       	cpi	r24, 0x2B	; 43
     c78:	69 f0       	breq	.+26     	; 0xc94 <vfprintf+0x84>
     c7a:	30 f4       	brcc	.+12     	; 0xc88 <vfprintf+0x78>
     c7c:	80 32       	cpi	r24, 0x20	; 32
     c7e:	59 f0       	breq	.+22     	; 0xc96 <vfprintf+0x86>
     c80:	83 32       	cpi	r24, 0x23	; 35
     c82:	69 f4       	brne	.+26     	; 0xc9e <vfprintf+0x8e>
     c84:	20 61       	ori	r18, 0x10	; 16
     c86:	2c c0       	rjmp	.+88     	; 0xce0 <vfprintf+0xd0>
     c88:	8d 32       	cpi	r24, 0x2D	; 45
     c8a:	39 f0       	breq	.+14     	; 0xc9a <vfprintf+0x8a>
     c8c:	80 33       	cpi	r24, 0x30	; 48
     c8e:	39 f4       	brne	.+14     	; 0xc9e <vfprintf+0x8e>
     c90:	21 60       	ori	r18, 0x01	; 1
     c92:	26 c0       	rjmp	.+76     	; 0xce0 <vfprintf+0xd0>
     c94:	22 60       	ori	r18, 0x02	; 2
     c96:	24 60       	ori	r18, 0x04	; 4
     c98:	23 c0       	rjmp	.+70     	; 0xce0 <vfprintf+0xd0>
     c9a:	28 60       	ori	r18, 0x08	; 8
     c9c:	21 c0       	rjmp	.+66     	; 0xce0 <vfprintf+0xd0>
     c9e:	27 fd       	sbrc	r18, 7
     ca0:	27 c0       	rjmp	.+78     	; 0xcf0 <vfprintf+0xe0>
     ca2:	30 ed       	ldi	r19, 0xD0	; 208
     ca4:	38 0f       	add	r19, r24
     ca6:	3a 30       	cpi	r19, 0x0A	; 10
     ca8:	78 f4       	brcc	.+30     	; 0xcc8 <vfprintf+0xb8>
     caa:	26 ff       	sbrs	r18, 6
     cac:	06 c0       	rjmp	.+12     	; 0xcba <vfprintf+0xaa>
     cae:	fa e0       	ldi	r31, 0x0A	; 10
     cb0:	1f 9f       	mul	r17, r31
     cb2:	30 0d       	add	r19, r0
     cb4:	11 24       	eor	r1, r1
     cb6:	13 2f       	mov	r17, r19
     cb8:	13 c0       	rjmp	.+38     	; 0xce0 <vfprintf+0xd0>
     cba:	6a e0       	ldi	r22, 0x0A	; 10
     cbc:	56 9e       	mul	r5, r22
     cbe:	30 0d       	add	r19, r0
     cc0:	11 24       	eor	r1, r1
     cc2:	53 2e       	mov	r5, r19
     cc4:	20 62       	ori	r18, 0x20	; 32
     cc6:	0c c0       	rjmp	.+24     	; 0xce0 <vfprintf+0xd0>
     cc8:	8e 32       	cpi	r24, 0x2E	; 46
     cca:	21 f4       	brne	.+8      	; 0xcd4 <vfprintf+0xc4>
     ccc:	26 fd       	sbrc	r18, 6
     cce:	11 c3       	rjmp	.+1570   	; 0x12f2 <vfprintf+0x6e2>
     cd0:	20 64       	ori	r18, 0x40	; 64
     cd2:	06 c0       	rjmp	.+12     	; 0xce0 <vfprintf+0xd0>
     cd4:	8c 36       	cpi	r24, 0x6C	; 108
     cd6:	11 f4       	brne	.+4      	; 0xcdc <vfprintf+0xcc>
     cd8:	20 68       	ori	r18, 0x80	; 128
     cda:	02 c0       	rjmp	.+4      	; 0xce0 <vfprintf+0xd0>
     cdc:	88 36       	cpi	r24, 0x68	; 104
     cde:	41 f4       	brne	.+16     	; 0xcf0 <vfprintf+0xe0>
     ce0:	f1 01       	movw	r30, r2
     ce2:	93 fd       	sbrc	r25, 3
     ce4:	85 91       	lpm	r24, Z+
     ce6:	93 ff       	sbrs	r25, 3
     ce8:	81 91       	ld	r24, Z+
     cea:	1f 01       	movw	r2, r30
     cec:	81 11       	cpse	r24, r1
     cee:	c1 cf       	rjmp	.-126    	; 0xc72 <vfprintf+0x62>
     cf0:	9b eb       	ldi	r25, 0xBB	; 187
     cf2:	98 0f       	add	r25, r24
     cf4:	93 30       	cpi	r25, 0x03	; 3
     cf6:	18 f4       	brcc	.+6      	; 0xcfe <vfprintf+0xee>
     cf8:	20 61       	ori	r18, 0x10	; 16
     cfa:	80 5e       	subi	r24, 0xE0	; 224
     cfc:	06 c0       	rjmp	.+12     	; 0xd0a <vfprintf+0xfa>
     cfe:	9b e9       	ldi	r25, 0x9B	; 155
     d00:	98 0f       	add	r25, r24
     d02:	93 30       	cpi	r25, 0x03	; 3
     d04:	08 f0       	brcs	.+2      	; 0xd08 <vfprintf+0xf8>
     d06:	aa c1       	rjmp	.+852    	; 0x105c <vfprintf+0x44c>
     d08:	2f 7e       	andi	r18, 0xEF	; 239
     d0a:	26 ff       	sbrs	r18, 6
     d0c:	16 e0       	ldi	r17, 0x06	; 6
     d0e:	2f 73       	andi	r18, 0x3F	; 63
     d10:	72 2e       	mov	r7, r18
     d12:	85 36       	cpi	r24, 0x65	; 101
     d14:	21 f4       	brne	.+8      	; 0xd1e <vfprintf+0x10e>
     d16:	f2 2f       	mov	r31, r18
     d18:	f0 64       	ori	r31, 0x40	; 64
     d1a:	7f 2e       	mov	r7, r31
     d1c:	08 c0       	rjmp	.+16     	; 0xd2e <vfprintf+0x11e>
     d1e:	86 36       	cpi	r24, 0x66	; 102
     d20:	21 f4       	brne	.+8      	; 0xd2a <vfprintf+0x11a>
     d22:	62 2f       	mov	r22, r18
     d24:	60 68       	ori	r22, 0x80	; 128
     d26:	76 2e       	mov	r7, r22
     d28:	02 c0       	rjmp	.+4      	; 0xd2e <vfprintf+0x11e>
     d2a:	11 11       	cpse	r17, r1
     d2c:	11 50       	subi	r17, 0x01	; 1
     d2e:	77 fe       	sbrs	r7, 7
     d30:	07 c0       	rjmp	.+14     	; 0xd40 <vfprintf+0x130>
     d32:	1c 33       	cpi	r17, 0x3C	; 60
     d34:	48 f4       	brcc	.+18     	; 0xd48 <vfprintf+0x138>
     d36:	44 24       	eor	r4, r4
     d38:	43 94       	inc	r4
     d3a:	41 0e       	add	r4, r17
     d3c:	27 e0       	ldi	r18, 0x07	; 7
     d3e:	0b c0       	rjmp	.+22     	; 0xd56 <vfprintf+0x146>
     d40:	18 30       	cpi	r17, 0x08	; 8
     d42:	30 f4       	brcc	.+12     	; 0xd50 <vfprintf+0x140>
     d44:	21 2f       	mov	r18, r17
     d46:	06 c0       	rjmp	.+12     	; 0xd54 <vfprintf+0x144>
     d48:	27 e0       	ldi	r18, 0x07	; 7
     d4a:	4c e3       	ldi	r20, 0x3C	; 60
     d4c:	44 2e       	mov	r4, r20
     d4e:	03 c0       	rjmp	.+6      	; 0xd56 <vfprintf+0x146>
     d50:	27 e0       	ldi	r18, 0x07	; 7
     d52:	17 e0       	ldi	r17, 0x07	; 7
     d54:	41 2c       	mov	r4, r1
     d56:	56 01       	movw	r10, r12
     d58:	74 e0       	ldi	r23, 0x04	; 4
     d5a:	a7 0e       	add	r10, r23
     d5c:	b1 1c       	adc	r11, r1
     d5e:	f6 01       	movw	r30, r12
     d60:	60 81       	ld	r22, Z
     d62:	71 81       	ldd	r23, Z+1	; 0x01
     d64:	82 81       	ldd	r24, Z+2	; 0x02
     d66:	93 81       	ldd	r25, Z+3	; 0x03
     d68:	04 2d       	mov	r16, r4
     d6a:	a4 01       	movw	r20, r8
     d6c:	0e 94 49 0b 	call	0x1692	; 0x1692 <__ftoa_engine>
     d70:	6c 01       	movw	r12, r24
     d72:	09 81       	ldd	r16, Y+1	; 0x01
     d74:	00 ff       	sbrs	r16, 0
     d76:	02 c0       	rjmp	.+4      	; 0xd7c <vfprintf+0x16c>
     d78:	03 ff       	sbrs	r16, 3
     d7a:	06 c0       	rjmp	.+12     	; 0xd88 <vfprintf+0x178>
     d7c:	71 fc       	sbrc	r7, 1
     d7e:	07 c0       	rjmp	.+14     	; 0xd8e <vfprintf+0x17e>
     d80:	72 fc       	sbrc	r7, 2
     d82:	08 c0       	rjmp	.+16     	; 0xd94 <vfprintf+0x184>
     d84:	61 2c       	mov	r6, r1
     d86:	08 c0       	rjmp	.+16     	; 0xd98 <vfprintf+0x188>
     d88:	3d e2       	ldi	r19, 0x2D	; 45
     d8a:	63 2e       	mov	r6, r19
     d8c:	05 c0       	rjmp	.+10     	; 0xd98 <vfprintf+0x188>
     d8e:	2b e2       	ldi	r18, 0x2B	; 43
     d90:	62 2e       	mov	r6, r18
     d92:	02 c0       	rjmp	.+4      	; 0xd98 <vfprintf+0x188>
     d94:	90 e2       	ldi	r25, 0x20	; 32
     d96:	69 2e       	mov	r6, r25
     d98:	80 2f       	mov	r24, r16
     d9a:	8c 70       	andi	r24, 0x0C	; 12
     d9c:	99 f1       	breq	.+102    	; 0xe04 <vfprintf+0x1f4>
     d9e:	66 20       	and	r6, r6
     da0:	11 f0       	breq	.+4      	; 0xda6 <vfprintf+0x196>
     da2:	84 e0       	ldi	r24, 0x04	; 4
     da4:	01 c0       	rjmp	.+2      	; 0xda8 <vfprintf+0x198>
     da6:	83 e0       	ldi	r24, 0x03	; 3
     da8:	85 15       	cp	r24, r5
     daa:	10 f0       	brcs	.+4      	; 0xdb0 <vfprintf+0x1a0>
     dac:	51 2c       	mov	r5, r1
     dae:	0b c0       	rjmp	.+22     	; 0xdc6 <vfprintf+0x1b6>
     db0:	58 1a       	sub	r5, r24
     db2:	73 fc       	sbrc	r7, 3
     db4:	08 c0       	rjmp	.+16     	; 0xdc6 <vfprintf+0x1b6>
     db6:	b7 01       	movw	r22, r14
     db8:	80 e2       	ldi	r24, 0x20	; 32
     dba:	90 e0       	ldi	r25, 0x00	; 0
     dbc:	0e 94 8a 0c 	call	0x1914	; 0x1914 <fputc>
     dc0:	5a 94       	dec	r5
     dc2:	c9 f7       	brne	.-14     	; 0xdb6 <vfprintf+0x1a6>
     dc4:	f3 cf       	rjmp	.-26     	; 0xdac <vfprintf+0x19c>
     dc6:	66 20       	and	r6, r6
     dc8:	29 f0       	breq	.+10     	; 0xdd4 <vfprintf+0x1c4>
     dca:	b7 01       	movw	r22, r14
     dcc:	86 2d       	mov	r24, r6
     dce:	90 e0       	ldi	r25, 0x00	; 0
     dd0:	0e 94 8a 0c 	call	0x1914	; 0x1914 <fputc>
     dd4:	03 fd       	sbrc	r16, 3
     dd6:	03 c0       	rjmp	.+6      	; 0xdde <vfprintf+0x1ce>
     dd8:	0c e6       	ldi	r16, 0x6C	; 108
     dda:	10 e0       	ldi	r17, 0x00	; 0
     ddc:	02 c0       	rjmp	.+4      	; 0xde2 <vfprintf+0x1d2>
     dde:	08 e6       	ldi	r16, 0x68	; 104
     de0:	10 e0       	ldi	r17, 0x00	; 0
     de2:	f7 2d       	mov	r31, r7
     de4:	f0 71       	andi	r31, 0x10	; 16
     de6:	7f 2e       	mov	r7, r31
     de8:	f8 01       	movw	r30, r16
     dea:	84 91       	lpm	r24, Z
     dec:	88 23       	and	r24, r24
     dee:	09 f4       	brne	.+2      	; 0xdf2 <vfprintf+0x1e2>
     df0:	76 c2       	rjmp	.+1260   	; 0x12de <vfprintf+0x6ce>
     df2:	71 10       	cpse	r7, r1
     df4:	80 52       	subi	r24, 0x20	; 32
     df6:	b7 01       	movw	r22, r14
     df8:	90 e0       	ldi	r25, 0x00	; 0
     dfa:	0e 94 8a 0c 	call	0x1914	; 0x1914 <fputc>
     dfe:	0f 5f       	subi	r16, 0xFF	; 255
     e00:	1f 4f       	sbci	r17, 0xFF	; 255
     e02:	f2 cf       	rjmp	.-28     	; 0xde8 <vfprintf+0x1d8>
     e04:	77 fe       	sbrs	r7, 7
     e06:	0f c0       	rjmp	.+30     	; 0xe26 <vfprintf+0x216>
     e08:	4c 0c       	add	r4, r12
     e0a:	04 ff       	sbrs	r16, 4
     e0c:	04 c0       	rjmp	.+8      	; 0xe16 <vfprintf+0x206>
     e0e:	8a 81       	ldd	r24, Y+2	; 0x02
     e10:	81 33       	cpi	r24, 0x31	; 49
     e12:	09 f4       	brne	.+2      	; 0xe16 <vfprintf+0x206>
     e14:	4a 94       	dec	r4
     e16:	14 14       	cp	r1, r4
     e18:	74 f5       	brge	.+92     	; 0xe76 <vfprintf+0x266>
     e1a:	f8 e0       	ldi	r31, 0x08	; 8
     e1c:	f4 15       	cp	r31, r4
     e1e:	78 f5       	brcc	.+94     	; 0xe7e <vfprintf+0x26e>
     e20:	88 e0       	ldi	r24, 0x08	; 8
     e22:	48 2e       	mov	r4, r24
     e24:	2c c0       	rjmp	.+88     	; 0xe7e <vfprintf+0x26e>
     e26:	76 fc       	sbrc	r7, 6
     e28:	2a c0       	rjmp	.+84     	; 0xe7e <vfprintf+0x26e>
     e2a:	81 2f       	mov	r24, r17
     e2c:	90 e0       	ldi	r25, 0x00	; 0
     e2e:	8c 15       	cp	r24, r12
     e30:	9d 05       	cpc	r25, r13
     e32:	9c f0       	brlt	.+38     	; 0xe5a <vfprintf+0x24a>
     e34:	6c ef       	ldi	r22, 0xFC	; 252
     e36:	c6 16       	cp	r12, r22
     e38:	6f ef       	ldi	r22, 0xFF	; 255
     e3a:	d6 06       	cpc	r13, r22
     e3c:	74 f0       	brlt	.+28     	; 0xe5a <vfprintf+0x24a>
     e3e:	77 2d       	mov	r23, r7
     e40:	70 68       	ori	r23, 0x80	; 128
     e42:	77 2e       	mov	r7, r23
     e44:	0a c0       	rjmp	.+20     	; 0xe5a <vfprintf+0x24a>
     e46:	e2 e0       	ldi	r30, 0x02	; 2
     e48:	f0 e0       	ldi	r31, 0x00	; 0
     e4a:	ec 0f       	add	r30, r28
     e4c:	fd 1f       	adc	r31, r29
     e4e:	e1 0f       	add	r30, r17
     e50:	f1 1d       	adc	r31, r1
     e52:	80 81       	ld	r24, Z
     e54:	80 33       	cpi	r24, 0x30	; 48
     e56:	19 f4       	brne	.+6      	; 0xe5e <vfprintf+0x24e>
     e58:	11 50       	subi	r17, 0x01	; 1
     e5a:	11 11       	cpse	r17, r1
     e5c:	f4 cf       	rjmp	.-24     	; 0xe46 <vfprintf+0x236>
     e5e:	77 fe       	sbrs	r7, 7
     e60:	0e c0       	rjmp	.+28     	; 0xe7e <vfprintf+0x26e>
     e62:	44 24       	eor	r4, r4
     e64:	43 94       	inc	r4
     e66:	41 0e       	add	r4, r17
     e68:	81 2f       	mov	r24, r17
     e6a:	90 e0       	ldi	r25, 0x00	; 0
     e6c:	c8 16       	cp	r12, r24
     e6e:	d9 06       	cpc	r13, r25
     e70:	2c f4       	brge	.+10     	; 0xe7c <vfprintf+0x26c>
     e72:	1c 19       	sub	r17, r12
     e74:	04 c0       	rjmp	.+8      	; 0xe7e <vfprintf+0x26e>
     e76:	44 24       	eor	r4, r4
     e78:	43 94       	inc	r4
     e7a:	01 c0       	rjmp	.+2      	; 0xe7e <vfprintf+0x26e>
     e7c:	10 e0       	ldi	r17, 0x00	; 0
     e7e:	77 fe       	sbrs	r7, 7
     e80:	07 c0       	rjmp	.+14     	; 0xe90 <vfprintf+0x280>
     e82:	1c 14       	cp	r1, r12
     e84:	1d 04       	cpc	r1, r13
     e86:	3c f4       	brge	.+14     	; 0xe96 <vfprintf+0x286>
     e88:	96 01       	movw	r18, r12
     e8a:	2f 5f       	subi	r18, 0xFF	; 255
     e8c:	3f 4f       	sbci	r19, 0xFF	; 255
     e8e:	05 c0       	rjmp	.+10     	; 0xe9a <vfprintf+0x28a>
     e90:	25 e0       	ldi	r18, 0x05	; 5
     e92:	30 e0       	ldi	r19, 0x00	; 0
     e94:	02 c0       	rjmp	.+4      	; 0xe9a <vfprintf+0x28a>
     e96:	21 e0       	ldi	r18, 0x01	; 1
     e98:	30 e0       	ldi	r19, 0x00	; 0
     e9a:	66 20       	and	r6, r6
     e9c:	11 f0       	breq	.+4      	; 0xea2 <vfprintf+0x292>
     e9e:	2f 5f       	subi	r18, 0xFF	; 255
     ea0:	3f 4f       	sbci	r19, 0xFF	; 255
     ea2:	11 23       	and	r17, r17
     ea4:	31 f0       	breq	.+12     	; 0xeb2 <vfprintf+0x2a2>
     ea6:	41 2f       	mov	r20, r17
     ea8:	50 e0       	ldi	r21, 0x00	; 0
     eaa:	4f 5f       	subi	r20, 0xFF	; 255
     eac:	5f 4f       	sbci	r21, 0xFF	; 255
     eae:	24 0f       	add	r18, r20
     eb0:	35 1f       	adc	r19, r21
     eb2:	45 2d       	mov	r20, r5
     eb4:	50 e0       	ldi	r21, 0x00	; 0
     eb6:	24 17       	cp	r18, r20
     eb8:	35 07       	cpc	r19, r21
     eba:	14 f4       	brge	.+4      	; 0xec0 <vfprintf+0x2b0>
     ebc:	52 1a       	sub	r5, r18
     ebe:	01 c0       	rjmp	.+2      	; 0xec2 <vfprintf+0x2b2>
     ec0:	51 2c       	mov	r5, r1
     ec2:	87 2d       	mov	r24, r7
     ec4:	89 70       	andi	r24, 0x09	; 9
     ec6:	49 f4       	brne	.+18     	; 0xeda <vfprintf+0x2ca>
     ec8:	55 20       	and	r5, r5
     eca:	39 f0       	breq	.+14     	; 0xeda <vfprintf+0x2ca>
     ecc:	b7 01       	movw	r22, r14
     ece:	80 e2       	ldi	r24, 0x20	; 32
     ed0:	90 e0       	ldi	r25, 0x00	; 0
     ed2:	0e 94 8a 0c 	call	0x1914	; 0x1914 <fputc>
     ed6:	5a 94       	dec	r5
     ed8:	f7 cf       	rjmp	.-18     	; 0xec8 <vfprintf+0x2b8>
     eda:	66 20       	and	r6, r6
     edc:	29 f0       	breq	.+10     	; 0xee8 <vfprintf+0x2d8>
     ede:	b7 01       	movw	r22, r14
     ee0:	86 2d       	mov	r24, r6
     ee2:	90 e0       	ldi	r25, 0x00	; 0
     ee4:	0e 94 8a 0c 	call	0x1914	; 0x1914 <fputc>
     ee8:	73 fc       	sbrc	r7, 3
     eea:	09 c0       	rjmp	.+18     	; 0xefe <vfprintf+0x2ee>
     eec:	55 20       	and	r5, r5
     eee:	39 f0       	breq	.+14     	; 0xefe <vfprintf+0x2ee>
     ef0:	b7 01       	movw	r22, r14
     ef2:	80 e3       	ldi	r24, 0x30	; 48
     ef4:	90 e0       	ldi	r25, 0x00	; 0
     ef6:	0e 94 8a 0c 	call	0x1914	; 0x1914 <fputc>
     efa:	5a 94       	dec	r5
     efc:	f7 cf       	rjmp	.-18     	; 0xeec <vfprintf+0x2dc>
     efe:	77 fe       	sbrs	r7, 7
     f00:	5f c0       	rjmp	.+190    	; 0xfc0 <vfprintf+0x3b0>
     f02:	9c 2d       	mov	r25, r12
     f04:	8d 2d       	mov	r24, r13
     f06:	d7 fe       	sbrs	r13, 7
     f08:	02 c0       	rjmp	.+4      	; 0xf0e <vfprintf+0x2fe>
     f0a:	90 e0       	ldi	r25, 0x00	; 0
     f0c:	80 e0       	ldi	r24, 0x00	; 0
     f0e:	69 2e       	mov	r6, r25
     f10:	78 2e       	mov	r7, r24
     f12:	40 e0       	ldi	r20, 0x00	; 0
     f14:	50 e0       	ldi	r21, 0x00	; 0
     f16:	c6 01       	movw	r24, r12
     f18:	84 19       	sub	r24, r4
     f1a:	91 09       	sbc	r25, r1
     f1c:	9d 87       	std	Y+13, r25	; 0x0d
     f1e:	8c 87       	std	Y+12, r24	; 0x0c
     f20:	96 01       	movw	r18, r12
     f22:	26 19       	sub	r18, r6
     f24:	37 09       	sbc	r19, r7
     f26:	28 0d       	add	r18, r8
     f28:	39 1d       	adc	r19, r9
     f2a:	81 2f       	mov	r24, r17
     f2c:	90 e0       	ldi	r25, 0x00	; 0
     f2e:	ee 27       	eor	r30, r30
     f30:	ff 27       	eor	r31, r31
     f32:	e8 1b       	sub	r30, r24
     f34:	f9 0b       	sbc	r31, r25
     f36:	ff 87       	std	Y+15, r31	; 0x0f
     f38:	ee 87       	std	Y+14, r30	; 0x0e
     f3a:	ff ef       	ldi	r31, 0xFF	; 255
     f3c:	6f 16       	cp	r6, r31
     f3e:	7f 06       	cpc	r7, r31
     f40:	69 f4       	brne	.+26     	; 0xf5c <vfprintf+0x34c>
     f42:	b7 01       	movw	r22, r14
     f44:	8e e2       	ldi	r24, 0x2E	; 46
     f46:	90 e0       	ldi	r25, 0x00	; 0
     f48:	2b 8b       	std	Y+19, r18	; 0x13
     f4a:	3a 8b       	std	Y+18, r19	; 0x12
     f4c:	48 8b       	std	Y+16, r20	; 0x10
     f4e:	59 8b       	std	Y+17, r21	; 0x11
     f50:	0e 94 8a 0c 	call	0x1914	; 0x1914 <fputc>
     f54:	59 89       	ldd	r21, Y+17	; 0x11
     f56:	48 89       	ldd	r20, Y+16	; 0x10
     f58:	3a 89       	ldd	r19, Y+18	; 0x12
     f5a:	2b 89       	ldd	r18, Y+19	; 0x13
     f5c:	c6 14       	cp	r12, r6
     f5e:	d7 04       	cpc	r13, r7
     f60:	54 f0       	brlt	.+20     	; 0xf76 <vfprintf+0x366>
     f62:	6c 85       	ldd	r22, Y+12	; 0x0c
     f64:	7d 85       	ldd	r23, Y+13	; 0x0d
     f66:	66 15       	cp	r22, r6
     f68:	77 05       	cpc	r23, r7
     f6a:	2c f4       	brge	.+10     	; 0xf76 <vfprintf+0x366>
     f6c:	f9 01       	movw	r30, r18
     f6e:	e4 0f       	add	r30, r20
     f70:	f5 1f       	adc	r31, r21
     f72:	81 81       	ldd	r24, Z+1	; 0x01
     f74:	01 c0       	rjmp	.+2      	; 0xf78 <vfprintf+0x368>
     f76:	80 e3       	ldi	r24, 0x30	; 48
     f78:	71 e0       	ldi	r23, 0x01	; 1
     f7a:	67 1a       	sub	r6, r23
     f7c:	71 08       	sbc	r7, r1
     f7e:	4f 5f       	subi	r20, 0xFF	; 255
     f80:	5f 4f       	sbci	r21, 0xFF	; 255
     f82:	ee 85       	ldd	r30, Y+14	; 0x0e
     f84:	ff 85       	ldd	r31, Y+15	; 0x0f
     f86:	6e 16       	cp	r6, r30
     f88:	7f 06       	cpc	r7, r31
     f8a:	6c f0       	brlt	.+26     	; 0xfa6 <vfprintf+0x396>
     f8c:	b7 01       	movw	r22, r14
     f8e:	90 e0       	ldi	r25, 0x00	; 0
     f90:	2b 8b       	std	Y+19, r18	; 0x13
     f92:	3a 8b       	std	Y+18, r19	; 0x12
     f94:	48 8b       	std	Y+16, r20	; 0x10
     f96:	59 8b       	std	Y+17, r21	; 0x11
     f98:	0e 94 8a 0c 	call	0x1914	; 0x1914 <fputc>
     f9c:	2b 89       	ldd	r18, Y+19	; 0x13
     f9e:	3a 89       	ldd	r19, Y+18	; 0x12
     fa0:	48 89       	ldd	r20, Y+16	; 0x10
     fa2:	59 89       	ldd	r21, Y+17	; 0x11
     fa4:	ca cf       	rjmp	.-108    	; 0xf3a <vfprintf+0x32a>
     fa6:	6c 14       	cp	r6, r12
     fa8:	7d 04       	cpc	r7, r13
     faa:	39 f4       	brne	.+14     	; 0xfba <vfprintf+0x3aa>
     fac:	9a 81       	ldd	r25, Y+2	; 0x02
     fae:	96 33       	cpi	r25, 0x36	; 54
     fb0:	18 f4       	brcc	.+6      	; 0xfb8 <vfprintf+0x3a8>
     fb2:	95 33       	cpi	r25, 0x35	; 53
     fb4:	11 f4       	brne	.+4      	; 0xfba <vfprintf+0x3aa>
     fb6:	04 ff       	sbrs	r16, 4
     fb8:	81 e3       	ldi	r24, 0x31	; 49
     fba:	b7 01       	movw	r22, r14
     fbc:	90 e0       	ldi	r25, 0x00	; 0
     fbe:	4b c0       	rjmp	.+150    	; 0x1056 <vfprintf+0x446>
     fc0:	8a 81       	ldd	r24, Y+2	; 0x02
     fc2:	81 33       	cpi	r24, 0x31	; 49
     fc4:	09 f0       	breq	.+2      	; 0xfc8 <vfprintf+0x3b8>
     fc6:	0f 7e       	andi	r16, 0xEF	; 239
     fc8:	b7 01       	movw	r22, r14
     fca:	90 e0       	ldi	r25, 0x00	; 0
     fcc:	0e 94 8a 0c 	call	0x1914	; 0x1914 <fputc>
     fd0:	11 11       	cpse	r17, r1
     fd2:	05 c0       	rjmp	.+10     	; 0xfde <vfprintf+0x3ce>
     fd4:	74 fe       	sbrs	r7, 4
     fd6:	18 c0       	rjmp	.+48     	; 0x1008 <vfprintf+0x3f8>
     fd8:	85 e4       	ldi	r24, 0x45	; 69
     fda:	90 e0       	ldi	r25, 0x00	; 0
     fdc:	17 c0       	rjmp	.+46     	; 0x100c <vfprintf+0x3fc>
     fde:	b7 01       	movw	r22, r14
     fe0:	8e e2       	ldi	r24, 0x2E	; 46
     fe2:	90 e0       	ldi	r25, 0x00	; 0
     fe4:	0e 94 8a 0c 	call	0x1914	; 0x1914 <fputc>
     fe8:	82 e0       	ldi	r24, 0x02	; 2
     fea:	66 24       	eor	r6, r6
     fec:	63 94       	inc	r6
     fee:	68 0e       	add	r6, r24
     ff0:	f4 01       	movw	r30, r8
     ff2:	e8 0f       	add	r30, r24
     ff4:	f1 1d       	adc	r31, r1
     ff6:	80 81       	ld	r24, Z
     ff8:	b7 01       	movw	r22, r14
     ffa:	90 e0       	ldi	r25, 0x00	; 0
     ffc:	0e 94 8a 0c 	call	0x1914	; 0x1914 <fputc>
    1000:	11 50       	subi	r17, 0x01	; 1
    1002:	41 f3       	breq	.-48     	; 0xfd4 <vfprintf+0x3c4>
    1004:	86 2d       	mov	r24, r6
    1006:	f1 cf       	rjmp	.-30     	; 0xfea <vfprintf+0x3da>
    1008:	85 e6       	ldi	r24, 0x65	; 101
    100a:	90 e0       	ldi	r25, 0x00	; 0
    100c:	b7 01       	movw	r22, r14
    100e:	0e 94 8a 0c 	call	0x1914	; 0x1914 <fputc>
    1012:	d7 fc       	sbrc	r13, 7
    1014:	05 c0       	rjmp	.+10     	; 0x1020 <vfprintf+0x410>
    1016:	c1 14       	cp	r12, r1
    1018:	d1 04       	cpc	r13, r1
    101a:	39 f4       	brne	.+14     	; 0x102a <vfprintf+0x41a>
    101c:	04 ff       	sbrs	r16, 4
    101e:	05 c0       	rjmp	.+10     	; 0x102a <vfprintf+0x41a>
    1020:	d1 94       	neg	r13
    1022:	c1 94       	neg	r12
    1024:	d1 08       	sbc	r13, r1
    1026:	8d e2       	ldi	r24, 0x2D	; 45
    1028:	01 c0       	rjmp	.+2      	; 0x102c <vfprintf+0x41c>
    102a:	8b e2       	ldi	r24, 0x2B	; 43
    102c:	b7 01       	movw	r22, r14
    102e:	90 e0       	ldi	r25, 0x00	; 0
    1030:	0e 94 8a 0c 	call	0x1914	; 0x1914 <fputc>
    1034:	80 e3       	ldi	r24, 0x30	; 48
    1036:	6a e0       	ldi	r22, 0x0A	; 10
    1038:	c6 16       	cp	r12, r22
    103a:	d1 04       	cpc	r13, r1
    103c:	2c f0       	brlt	.+10     	; 0x1048 <vfprintf+0x438>
    103e:	8f 5f       	subi	r24, 0xFF	; 255
    1040:	fa e0       	ldi	r31, 0x0A	; 10
    1042:	cf 1a       	sub	r12, r31
    1044:	d1 08       	sbc	r13, r1
    1046:	f7 cf       	rjmp	.-18     	; 0x1036 <vfprintf+0x426>
    1048:	b7 01       	movw	r22, r14
    104a:	90 e0       	ldi	r25, 0x00	; 0
    104c:	0e 94 8a 0c 	call	0x1914	; 0x1914 <fputc>
    1050:	b7 01       	movw	r22, r14
    1052:	c6 01       	movw	r24, r12
    1054:	c0 96       	adiw	r24, 0x30	; 48
    1056:	0e 94 8a 0c 	call	0x1914	; 0x1914 <fputc>
    105a:	41 c1       	rjmp	.+642    	; 0x12de <vfprintf+0x6ce>
    105c:	83 36       	cpi	r24, 0x63	; 99
    105e:	31 f0       	breq	.+12     	; 0x106c <vfprintf+0x45c>
    1060:	83 37       	cpi	r24, 0x73	; 115
    1062:	79 f0       	breq	.+30     	; 0x1082 <vfprintf+0x472>
    1064:	83 35       	cpi	r24, 0x53	; 83
    1066:	09 f0       	breq	.+2      	; 0x106a <vfprintf+0x45a>
    1068:	58 c0       	rjmp	.+176    	; 0x111a <vfprintf+0x50a>
    106a:	21 c0       	rjmp	.+66     	; 0x10ae <vfprintf+0x49e>
    106c:	56 01       	movw	r10, r12
    106e:	72 e0       	ldi	r23, 0x02	; 2
    1070:	a7 0e       	add	r10, r23
    1072:	b1 1c       	adc	r11, r1
    1074:	f6 01       	movw	r30, r12
    1076:	80 81       	ld	r24, Z
    1078:	89 83       	std	Y+1, r24	; 0x01
    107a:	01 e0       	ldi	r16, 0x01	; 1
    107c:	10 e0       	ldi	r17, 0x00	; 0
    107e:	64 01       	movw	r12, r8
    1080:	14 c0       	rjmp	.+40     	; 0x10aa <vfprintf+0x49a>
    1082:	56 01       	movw	r10, r12
    1084:	f2 e0       	ldi	r31, 0x02	; 2
    1086:	af 0e       	add	r10, r31
    1088:	b1 1c       	adc	r11, r1
    108a:	f6 01       	movw	r30, r12
    108c:	c0 80       	ld	r12, Z
    108e:	d1 80       	ldd	r13, Z+1	; 0x01
    1090:	26 ff       	sbrs	r18, 6
    1092:	03 c0       	rjmp	.+6      	; 0x109a <vfprintf+0x48a>
    1094:	61 2f       	mov	r22, r17
    1096:	70 e0       	ldi	r23, 0x00	; 0
    1098:	02 c0       	rjmp	.+4      	; 0x109e <vfprintf+0x48e>
    109a:	6f ef       	ldi	r22, 0xFF	; 255
    109c:	7f ef       	ldi	r23, 0xFF	; 255
    109e:	c6 01       	movw	r24, r12
    10a0:	2b 8b       	std	Y+19, r18	; 0x13
    10a2:	0e 94 34 0c 	call	0x1868	; 0x1868 <strnlen>
    10a6:	8c 01       	movw	r16, r24
    10a8:	2b 89       	ldd	r18, Y+19	; 0x13
    10aa:	2f 77       	andi	r18, 0x7F	; 127
    10ac:	15 c0       	rjmp	.+42     	; 0x10d8 <vfprintf+0x4c8>
    10ae:	56 01       	movw	r10, r12
    10b0:	f2 e0       	ldi	r31, 0x02	; 2
    10b2:	af 0e       	add	r10, r31
    10b4:	b1 1c       	adc	r11, r1
    10b6:	f6 01       	movw	r30, r12
    10b8:	c0 80       	ld	r12, Z
    10ba:	d1 80       	ldd	r13, Z+1	; 0x01
    10bc:	26 ff       	sbrs	r18, 6
    10be:	03 c0       	rjmp	.+6      	; 0x10c6 <vfprintf+0x4b6>
    10c0:	61 2f       	mov	r22, r17
    10c2:	70 e0       	ldi	r23, 0x00	; 0
    10c4:	02 c0       	rjmp	.+4      	; 0x10ca <vfprintf+0x4ba>
    10c6:	6f ef       	ldi	r22, 0xFF	; 255
    10c8:	7f ef       	ldi	r23, 0xFF	; 255
    10ca:	c6 01       	movw	r24, r12
    10cc:	2b 8b       	std	Y+19, r18	; 0x13
    10ce:	0e 94 29 0c 	call	0x1852	; 0x1852 <strnlen_P>
    10d2:	8c 01       	movw	r16, r24
    10d4:	2b 89       	ldd	r18, Y+19	; 0x13
    10d6:	20 68       	ori	r18, 0x80	; 128
    10d8:	72 2e       	mov	r7, r18
    10da:	23 fd       	sbrc	r18, 3
    10dc:	1a c0       	rjmp	.+52     	; 0x1112 <vfprintf+0x502>
    10de:	85 2d       	mov	r24, r5
    10e0:	90 e0       	ldi	r25, 0x00	; 0
    10e2:	08 17       	cp	r16, r24
    10e4:	19 07       	cpc	r17, r25
    10e6:	a8 f4       	brcc	.+42     	; 0x1112 <vfprintf+0x502>
    10e8:	b7 01       	movw	r22, r14
    10ea:	80 e2       	ldi	r24, 0x20	; 32
    10ec:	90 e0       	ldi	r25, 0x00	; 0
    10ee:	0e 94 8a 0c 	call	0x1914	; 0x1914 <fputc>
    10f2:	5a 94       	dec	r5
    10f4:	f4 cf       	rjmp	.-24     	; 0x10de <vfprintf+0x4ce>
    10f6:	f6 01       	movw	r30, r12
    10f8:	77 fc       	sbrc	r7, 7
    10fa:	85 91       	lpm	r24, Z+
    10fc:	77 fe       	sbrs	r7, 7
    10fe:	81 91       	ld	r24, Z+
    1100:	6f 01       	movw	r12, r30
    1102:	b7 01       	movw	r22, r14
    1104:	90 e0       	ldi	r25, 0x00	; 0
    1106:	0e 94 8a 0c 	call	0x1914	; 0x1914 <fputc>
    110a:	51 10       	cpse	r5, r1
    110c:	5a 94       	dec	r5
    110e:	01 50       	subi	r16, 0x01	; 1
    1110:	11 09       	sbc	r17, r1
    1112:	01 15       	cp	r16, r1
    1114:	11 05       	cpc	r17, r1
    1116:	79 f7       	brne	.-34     	; 0x10f6 <vfprintf+0x4e6>
    1118:	e2 c0       	rjmp	.+452    	; 0x12de <vfprintf+0x6ce>
    111a:	84 36       	cpi	r24, 0x64	; 100
    111c:	11 f0       	breq	.+4      	; 0x1122 <vfprintf+0x512>
    111e:	89 36       	cpi	r24, 0x69	; 105
    1120:	51 f5       	brne	.+84     	; 0x1176 <vfprintf+0x566>
    1122:	56 01       	movw	r10, r12
    1124:	27 ff       	sbrs	r18, 7
    1126:	09 c0       	rjmp	.+18     	; 0x113a <vfprintf+0x52a>
    1128:	f4 e0       	ldi	r31, 0x04	; 4
    112a:	af 0e       	add	r10, r31
    112c:	b1 1c       	adc	r11, r1
    112e:	f6 01       	movw	r30, r12
    1130:	60 81       	ld	r22, Z
    1132:	71 81       	ldd	r23, Z+1	; 0x01
    1134:	82 81       	ldd	r24, Z+2	; 0x02
    1136:	93 81       	ldd	r25, Z+3	; 0x03
    1138:	0a c0       	rjmp	.+20     	; 0x114e <vfprintf+0x53e>
    113a:	f2 e0       	ldi	r31, 0x02	; 2
    113c:	af 0e       	add	r10, r31
    113e:	b1 1c       	adc	r11, r1
    1140:	f6 01       	movw	r30, r12
    1142:	60 81       	ld	r22, Z
    1144:	71 81       	ldd	r23, Z+1	; 0x01
    1146:	88 27       	eor	r24, r24
    1148:	77 fd       	sbrc	r23, 7
    114a:	80 95       	com	r24
    114c:	98 2f       	mov	r25, r24
    114e:	02 2f       	mov	r16, r18
    1150:	0f 76       	andi	r16, 0x6F	; 111
    1152:	97 ff       	sbrs	r25, 7
    1154:	08 c0       	rjmp	.+16     	; 0x1166 <vfprintf+0x556>
    1156:	90 95       	com	r25
    1158:	80 95       	com	r24
    115a:	70 95       	com	r23
    115c:	61 95       	neg	r22
    115e:	7f 4f       	sbci	r23, 0xFF	; 255
    1160:	8f 4f       	sbci	r24, 0xFF	; 255
    1162:	9f 4f       	sbci	r25, 0xFF	; 255
    1164:	00 68       	ori	r16, 0x80	; 128
    1166:	2a e0       	ldi	r18, 0x0A	; 10
    1168:	30 e0       	ldi	r19, 0x00	; 0
    116a:	a4 01       	movw	r20, r8
    116c:	0e 94 fd 0c 	call	0x19fa	; 0x19fa <__ultoa_invert>
    1170:	c8 2e       	mov	r12, r24
    1172:	c8 18       	sub	r12, r8
    1174:	3e c0       	rjmp	.+124    	; 0x11f2 <vfprintf+0x5e2>
    1176:	02 2f       	mov	r16, r18
    1178:	85 37       	cpi	r24, 0x75	; 117
    117a:	21 f4       	brne	.+8      	; 0x1184 <vfprintf+0x574>
    117c:	0f 7e       	andi	r16, 0xEF	; 239
    117e:	2a e0       	ldi	r18, 0x0A	; 10
    1180:	30 e0       	ldi	r19, 0x00	; 0
    1182:	1d c0       	rjmp	.+58     	; 0x11be <vfprintf+0x5ae>
    1184:	09 7f       	andi	r16, 0xF9	; 249
    1186:	8f 36       	cpi	r24, 0x6F	; 111
    1188:	91 f0       	breq	.+36     	; 0x11ae <vfprintf+0x59e>
    118a:	18 f4       	brcc	.+6      	; 0x1192 <vfprintf+0x582>
    118c:	88 35       	cpi	r24, 0x58	; 88
    118e:	59 f0       	breq	.+22     	; 0x11a6 <vfprintf+0x596>
    1190:	b0 c0       	rjmp	.+352    	; 0x12f2 <vfprintf+0x6e2>
    1192:	80 37       	cpi	r24, 0x70	; 112
    1194:	19 f0       	breq	.+6      	; 0x119c <vfprintf+0x58c>
    1196:	88 37       	cpi	r24, 0x78	; 120
    1198:	11 f0       	breq	.+4      	; 0x119e <vfprintf+0x58e>
    119a:	ab c0       	rjmp	.+342    	; 0x12f2 <vfprintf+0x6e2>
    119c:	00 61       	ori	r16, 0x10	; 16
    119e:	04 ff       	sbrs	r16, 4
    11a0:	09 c0       	rjmp	.+18     	; 0x11b4 <vfprintf+0x5a4>
    11a2:	04 60       	ori	r16, 0x04	; 4
    11a4:	07 c0       	rjmp	.+14     	; 0x11b4 <vfprintf+0x5a4>
    11a6:	24 ff       	sbrs	r18, 4
    11a8:	08 c0       	rjmp	.+16     	; 0x11ba <vfprintf+0x5aa>
    11aa:	06 60       	ori	r16, 0x06	; 6
    11ac:	06 c0       	rjmp	.+12     	; 0x11ba <vfprintf+0x5aa>
    11ae:	28 e0       	ldi	r18, 0x08	; 8
    11b0:	30 e0       	ldi	r19, 0x00	; 0
    11b2:	05 c0       	rjmp	.+10     	; 0x11be <vfprintf+0x5ae>
    11b4:	20 e1       	ldi	r18, 0x10	; 16
    11b6:	30 e0       	ldi	r19, 0x00	; 0
    11b8:	02 c0       	rjmp	.+4      	; 0x11be <vfprintf+0x5ae>
    11ba:	20 e1       	ldi	r18, 0x10	; 16
    11bc:	32 e0       	ldi	r19, 0x02	; 2
    11be:	56 01       	movw	r10, r12
    11c0:	07 ff       	sbrs	r16, 7
    11c2:	09 c0       	rjmp	.+18     	; 0x11d6 <vfprintf+0x5c6>
    11c4:	f4 e0       	ldi	r31, 0x04	; 4
    11c6:	af 0e       	add	r10, r31
    11c8:	b1 1c       	adc	r11, r1
    11ca:	f6 01       	movw	r30, r12
    11cc:	60 81       	ld	r22, Z
    11ce:	71 81       	ldd	r23, Z+1	; 0x01
    11d0:	82 81       	ldd	r24, Z+2	; 0x02
    11d2:	93 81       	ldd	r25, Z+3	; 0x03
    11d4:	08 c0       	rjmp	.+16     	; 0x11e6 <vfprintf+0x5d6>
    11d6:	f2 e0       	ldi	r31, 0x02	; 2
    11d8:	af 0e       	add	r10, r31
    11da:	b1 1c       	adc	r11, r1
    11dc:	f6 01       	movw	r30, r12
    11de:	60 81       	ld	r22, Z
    11e0:	71 81       	ldd	r23, Z+1	; 0x01
    11e2:	80 e0       	ldi	r24, 0x00	; 0
    11e4:	90 e0       	ldi	r25, 0x00	; 0
    11e6:	a4 01       	movw	r20, r8
    11e8:	0e 94 fd 0c 	call	0x19fa	; 0x19fa <__ultoa_invert>
    11ec:	c8 2e       	mov	r12, r24
    11ee:	c8 18       	sub	r12, r8
    11f0:	0f 77       	andi	r16, 0x7F	; 127
    11f2:	06 ff       	sbrs	r16, 6
    11f4:	0b c0       	rjmp	.+22     	; 0x120c <vfprintf+0x5fc>
    11f6:	20 2f       	mov	r18, r16
    11f8:	2e 7f       	andi	r18, 0xFE	; 254
    11fa:	c1 16       	cp	r12, r17
    11fc:	50 f4       	brcc	.+20     	; 0x1212 <vfprintf+0x602>
    11fe:	04 ff       	sbrs	r16, 4
    1200:	0a c0       	rjmp	.+20     	; 0x1216 <vfprintf+0x606>
    1202:	02 fd       	sbrc	r16, 2
    1204:	08 c0       	rjmp	.+16     	; 0x1216 <vfprintf+0x606>
    1206:	20 2f       	mov	r18, r16
    1208:	2e 7e       	andi	r18, 0xEE	; 238
    120a:	05 c0       	rjmp	.+10     	; 0x1216 <vfprintf+0x606>
    120c:	dc 2c       	mov	r13, r12
    120e:	20 2f       	mov	r18, r16
    1210:	03 c0       	rjmp	.+6      	; 0x1218 <vfprintf+0x608>
    1212:	dc 2c       	mov	r13, r12
    1214:	01 c0       	rjmp	.+2      	; 0x1218 <vfprintf+0x608>
    1216:	d1 2e       	mov	r13, r17
    1218:	24 ff       	sbrs	r18, 4
    121a:	0d c0       	rjmp	.+26     	; 0x1236 <vfprintf+0x626>
    121c:	fe 01       	movw	r30, r28
    121e:	ec 0d       	add	r30, r12
    1220:	f1 1d       	adc	r31, r1
    1222:	80 81       	ld	r24, Z
    1224:	80 33       	cpi	r24, 0x30	; 48
    1226:	11 f4       	brne	.+4      	; 0x122c <vfprintf+0x61c>
    1228:	29 7e       	andi	r18, 0xE9	; 233
    122a:	09 c0       	rjmp	.+18     	; 0x123e <vfprintf+0x62e>
    122c:	22 ff       	sbrs	r18, 2
    122e:	06 c0       	rjmp	.+12     	; 0x123c <vfprintf+0x62c>
    1230:	d3 94       	inc	r13
    1232:	d3 94       	inc	r13
    1234:	04 c0       	rjmp	.+8      	; 0x123e <vfprintf+0x62e>
    1236:	82 2f       	mov	r24, r18
    1238:	86 78       	andi	r24, 0x86	; 134
    123a:	09 f0       	breq	.+2      	; 0x123e <vfprintf+0x62e>
    123c:	d3 94       	inc	r13
    123e:	23 fd       	sbrc	r18, 3
    1240:	13 c0       	rjmp	.+38     	; 0x1268 <vfprintf+0x658>
    1242:	20 ff       	sbrs	r18, 0
    1244:	06 c0       	rjmp	.+12     	; 0x1252 <vfprintf+0x642>
    1246:	1c 2d       	mov	r17, r12
    1248:	d5 14       	cp	r13, r5
    124a:	18 f4       	brcc	.+6      	; 0x1252 <vfprintf+0x642>
    124c:	15 0d       	add	r17, r5
    124e:	1d 19       	sub	r17, r13
    1250:	d5 2c       	mov	r13, r5
    1252:	d5 14       	cp	r13, r5
    1254:	68 f4       	brcc	.+26     	; 0x1270 <vfprintf+0x660>
    1256:	b7 01       	movw	r22, r14
    1258:	80 e2       	ldi	r24, 0x20	; 32
    125a:	90 e0       	ldi	r25, 0x00	; 0
    125c:	2b 8b       	std	Y+19, r18	; 0x13
    125e:	0e 94 8a 0c 	call	0x1914	; 0x1914 <fputc>
    1262:	d3 94       	inc	r13
    1264:	2b 89       	ldd	r18, Y+19	; 0x13
    1266:	f5 cf       	rjmp	.-22     	; 0x1252 <vfprintf+0x642>
    1268:	d5 14       	cp	r13, r5
    126a:	10 f4       	brcc	.+4      	; 0x1270 <vfprintf+0x660>
    126c:	5d 18       	sub	r5, r13
    126e:	01 c0       	rjmp	.+2      	; 0x1272 <vfprintf+0x662>
    1270:	51 2c       	mov	r5, r1
    1272:	24 ff       	sbrs	r18, 4
    1274:	12 c0       	rjmp	.+36     	; 0x129a <vfprintf+0x68a>
    1276:	b7 01       	movw	r22, r14
    1278:	80 e3       	ldi	r24, 0x30	; 48
    127a:	90 e0       	ldi	r25, 0x00	; 0
    127c:	2b 8b       	std	Y+19, r18	; 0x13
    127e:	0e 94 8a 0c 	call	0x1914	; 0x1914 <fputc>
    1282:	2b 89       	ldd	r18, Y+19	; 0x13
    1284:	22 ff       	sbrs	r18, 2
    1286:	17 c0       	rjmp	.+46     	; 0x12b6 <vfprintf+0x6a6>
    1288:	21 ff       	sbrs	r18, 1
    128a:	03 c0       	rjmp	.+6      	; 0x1292 <vfprintf+0x682>
    128c:	88 e5       	ldi	r24, 0x58	; 88
    128e:	90 e0       	ldi	r25, 0x00	; 0
    1290:	02 c0       	rjmp	.+4      	; 0x1296 <vfprintf+0x686>
    1292:	88 e7       	ldi	r24, 0x78	; 120
    1294:	90 e0       	ldi	r25, 0x00	; 0
    1296:	b7 01       	movw	r22, r14
    1298:	0c c0       	rjmp	.+24     	; 0x12b2 <vfprintf+0x6a2>
    129a:	82 2f       	mov	r24, r18
    129c:	86 78       	andi	r24, 0x86	; 134
    129e:	59 f0       	breq	.+22     	; 0x12b6 <vfprintf+0x6a6>
    12a0:	21 fd       	sbrc	r18, 1
    12a2:	02 c0       	rjmp	.+4      	; 0x12a8 <vfprintf+0x698>
    12a4:	80 e2       	ldi	r24, 0x20	; 32
    12a6:	01 c0       	rjmp	.+2      	; 0x12aa <vfprintf+0x69a>
    12a8:	8b e2       	ldi	r24, 0x2B	; 43
    12aa:	27 fd       	sbrc	r18, 7
    12ac:	8d e2       	ldi	r24, 0x2D	; 45
    12ae:	b7 01       	movw	r22, r14
    12b0:	90 e0       	ldi	r25, 0x00	; 0
    12b2:	0e 94 8a 0c 	call	0x1914	; 0x1914 <fputc>
    12b6:	c1 16       	cp	r12, r17
    12b8:	38 f4       	brcc	.+14     	; 0x12c8 <vfprintf+0x6b8>
    12ba:	b7 01       	movw	r22, r14
    12bc:	80 e3       	ldi	r24, 0x30	; 48
    12be:	90 e0       	ldi	r25, 0x00	; 0
    12c0:	0e 94 8a 0c 	call	0x1914	; 0x1914 <fputc>
    12c4:	11 50       	subi	r17, 0x01	; 1
    12c6:	f7 cf       	rjmp	.-18     	; 0x12b6 <vfprintf+0x6a6>
    12c8:	ca 94       	dec	r12
    12ca:	f4 01       	movw	r30, r8
    12cc:	ec 0d       	add	r30, r12
    12ce:	f1 1d       	adc	r31, r1
    12d0:	80 81       	ld	r24, Z
    12d2:	b7 01       	movw	r22, r14
    12d4:	90 e0       	ldi	r25, 0x00	; 0
    12d6:	0e 94 8a 0c 	call	0x1914	; 0x1914 <fputc>
    12da:	c1 10       	cpse	r12, r1
    12dc:	f5 cf       	rjmp	.-22     	; 0x12c8 <vfprintf+0x6b8>
    12de:	55 20       	and	r5, r5
    12e0:	09 f4       	brne	.+2      	; 0x12e4 <vfprintf+0x6d4>
    12e2:	c2 cc       	rjmp	.-1660   	; 0xc68 <vfprintf+0x58>
    12e4:	b7 01       	movw	r22, r14
    12e6:	80 e2       	ldi	r24, 0x20	; 32
    12e8:	90 e0       	ldi	r25, 0x00	; 0
    12ea:	0e 94 8a 0c 	call	0x1914	; 0x1914 <fputc>
    12ee:	5a 94       	dec	r5
    12f0:	f6 cf       	rjmp	.-20     	; 0x12de <vfprintf+0x6ce>
    12f2:	f7 01       	movw	r30, r14
    12f4:	86 81       	ldd	r24, Z+6	; 0x06
    12f6:	97 81       	ldd	r25, Z+7	; 0x07
    12f8:	02 c0       	rjmp	.+4      	; 0x12fe <vfprintf+0x6ee>
    12fa:	8f ef       	ldi	r24, 0xFF	; 255
    12fc:	9f ef       	ldi	r25, 0xFF	; 255
    12fe:	63 96       	adiw	r28, 0x13	; 19
    1300:	e2 e1       	ldi	r30, 0x12	; 18
    1302:	0c 94 bf 09 	jmp	0x137e	; 0x137e <__epilogue_restores__>

00001306 <__udivmodqi4>:
    1306:	99 1b       	sub	r25, r25
    1308:	79 e0       	ldi	r23, 0x09	; 9
    130a:	04 c0       	rjmp	.+8      	; 0x1314 <__udivmodqi4_ep>

0000130c <__udivmodqi4_loop>:
    130c:	99 1f       	adc	r25, r25
    130e:	96 17       	cp	r25, r22
    1310:	08 f0       	brcs	.+2      	; 0x1314 <__udivmodqi4_ep>
    1312:	96 1b       	sub	r25, r22

00001314 <__udivmodqi4_ep>:
    1314:	88 1f       	adc	r24, r24
    1316:	7a 95       	dec	r23
    1318:	c9 f7       	brne	.-14     	; 0x130c <__udivmodqi4_loop>
    131a:	80 95       	com	r24
    131c:	08 95       	ret

0000131e <__udivmodhi4>:
    131e:	aa 1b       	sub	r26, r26
    1320:	bb 1b       	sub	r27, r27
    1322:	51 e1       	ldi	r21, 0x11	; 17
    1324:	07 c0       	rjmp	.+14     	; 0x1334 <__udivmodhi4_ep>

00001326 <__udivmodhi4_loop>:
    1326:	aa 1f       	adc	r26, r26
    1328:	bb 1f       	adc	r27, r27
    132a:	a6 17       	cp	r26, r22
    132c:	b7 07       	cpc	r27, r23
    132e:	10 f0       	brcs	.+4      	; 0x1334 <__udivmodhi4_ep>
    1330:	a6 1b       	sub	r26, r22
    1332:	b7 0b       	sbc	r27, r23

00001334 <__udivmodhi4_ep>:
    1334:	88 1f       	adc	r24, r24
    1336:	99 1f       	adc	r25, r25
    1338:	5a 95       	dec	r21
    133a:	a9 f7       	brne	.-22     	; 0x1326 <__udivmodhi4_loop>
    133c:	80 95       	com	r24
    133e:	90 95       	com	r25
    1340:	bc 01       	movw	r22, r24
    1342:	cd 01       	movw	r24, r26
    1344:	08 95       	ret

00001346 <__prologue_saves__>:
    1346:	2f 92       	push	r2
    1348:	3f 92       	push	r3
    134a:	4f 92       	push	r4
    134c:	5f 92       	push	r5
    134e:	6f 92       	push	r6
    1350:	7f 92       	push	r7
    1352:	8f 92       	push	r8
    1354:	9f 92       	push	r9
    1356:	af 92       	push	r10
    1358:	bf 92       	push	r11
    135a:	cf 92       	push	r12
    135c:	df 92       	push	r13
    135e:	ef 92       	push	r14
    1360:	ff 92       	push	r15
    1362:	0f 93       	push	r16
    1364:	1f 93       	push	r17
    1366:	cf 93       	push	r28
    1368:	df 93       	push	r29
    136a:	cd b7       	in	r28, 0x3d	; 61
    136c:	de b7       	in	r29, 0x3e	; 62
    136e:	ca 1b       	sub	r28, r26
    1370:	db 0b       	sbc	r29, r27
    1372:	0f b6       	in	r0, 0x3f	; 63
    1374:	f8 94       	cli
    1376:	de bf       	out	0x3e, r29	; 62
    1378:	0f be       	out	0x3f, r0	; 63
    137a:	cd bf       	out	0x3d, r28	; 61
    137c:	09 94       	ijmp

0000137e <__epilogue_restores__>:
    137e:	2a 88       	ldd	r2, Y+18	; 0x12
    1380:	39 88       	ldd	r3, Y+17	; 0x11
    1382:	48 88       	ldd	r4, Y+16	; 0x10
    1384:	5f 84       	ldd	r5, Y+15	; 0x0f
    1386:	6e 84       	ldd	r6, Y+14	; 0x0e
    1388:	7d 84       	ldd	r7, Y+13	; 0x0d
    138a:	8c 84       	ldd	r8, Y+12	; 0x0c
    138c:	9b 84       	ldd	r9, Y+11	; 0x0b
    138e:	aa 84       	ldd	r10, Y+10	; 0x0a
    1390:	b9 84       	ldd	r11, Y+9	; 0x09
    1392:	c8 84       	ldd	r12, Y+8	; 0x08
    1394:	df 80       	ldd	r13, Y+7	; 0x07
    1396:	ee 80       	ldd	r14, Y+6	; 0x06
    1398:	fd 80       	ldd	r15, Y+5	; 0x05
    139a:	0c 81       	ldd	r16, Y+4	; 0x04
    139c:	1b 81       	ldd	r17, Y+3	; 0x03
    139e:	aa 81       	ldd	r26, Y+2	; 0x02
    13a0:	b9 81       	ldd	r27, Y+1	; 0x01
    13a2:	ce 0f       	add	r28, r30
    13a4:	d1 1d       	adc	r29, r1
    13a6:	0f b6       	in	r0, 0x3f	; 63
    13a8:	f8 94       	cli
    13aa:	de bf       	out	0x3e, r29	; 62
    13ac:	0f be       	out	0x3f, r0	; 63
    13ae:	cd bf       	out	0x3d, r28	; 61
    13b0:	ed 01       	movw	r28, r26
    13b2:	08 95       	ret

000013b4 <__ashldi3>:
    13b4:	0f 93       	push	r16
    13b6:	08 30       	cpi	r16, 0x08	; 8
    13b8:	90 f0       	brcs	.+36     	; 0x13de <__ashldi3+0x2a>
    13ba:	98 2f       	mov	r25, r24
    13bc:	87 2f       	mov	r24, r23
    13be:	76 2f       	mov	r23, r22
    13c0:	65 2f       	mov	r22, r21
    13c2:	54 2f       	mov	r21, r20
    13c4:	43 2f       	mov	r20, r19
    13c6:	32 2f       	mov	r19, r18
    13c8:	22 27       	eor	r18, r18
    13ca:	08 50       	subi	r16, 0x08	; 8
    13cc:	f4 cf       	rjmp	.-24     	; 0x13b6 <__ashldi3+0x2>
    13ce:	22 0f       	add	r18, r18
    13d0:	33 1f       	adc	r19, r19
    13d2:	44 1f       	adc	r20, r20
    13d4:	55 1f       	adc	r21, r21
    13d6:	66 1f       	adc	r22, r22
    13d8:	77 1f       	adc	r23, r23
    13da:	88 1f       	adc	r24, r24
    13dc:	99 1f       	adc	r25, r25
    13de:	0a 95       	dec	r16
    13e0:	b2 f7       	brpl	.-20     	; 0x13ce <__ashldi3+0x1a>
    13e2:	0f 91       	pop	r16
    13e4:	08 95       	ret

000013e6 <__subsf3>:
    13e6:	50 58       	subi	r21, 0x80	; 128

000013e8 <__addsf3>:
    13e8:	bb 27       	eor	r27, r27
    13ea:	aa 27       	eor	r26, r26
    13ec:	0e d0       	rcall	.+28     	; 0x140a <__addsf3x>
    13ee:	b4 c0       	rjmp	.+360    	; 0x1558 <__fp_round>
    13f0:	a5 d0       	rcall	.+330    	; 0x153c <__fp_pscA>
    13f2:	30 f0       	brcs	.+12     	; 0x1400 <__addsf3+0x18>
    13f4:	aa d0       	rcall	.+340    	; 0x154a <__fp_pscB>
    13f6:	20 f0       	brcs	.+8      	; 0x1400 <__addsf3+0x18>
    13f8:	31 f4       	brne	.+12     	; 0x1406 <__addsf3+0x1e>
    13fa:	9f 3f       	cpi	r25, 0xFF	; 255
    13fc:	11 f4       	brne	.+4      	; 0x1402 <__addsf3+0x1a>
    13fe:	1e f4       	brtc	.+6      	; 0x1406 <__addsf3+0x1e>
    1400:	9a c0       	rjmp	.+308    	; 0x1536 <__fp_nan>
    1402:	0e f4       	brtc	.+2      	; 0x1406 <__addsf3+0x1e>
    1404:	e0 95       	com	r30
    1406:	e7 fb       	bst	r30, 7
    1408:	90 c0       	rjmp	.+288    	; 0x152a <__fp_inf>

0000140a <__addsf3x>:
    140a:	e9 2f       	mov	r30, r25
    140c:	b6 d0       	rcall	.+364    	; 0x157a <__fp_split3>
    140e:	80 f3       	brcs	.-32     	; 0x13f0 <__addsf3+0x8>
    1410:	ba 17       	cp	r27, r26
    1412:	62 07       	cpc	r22, r18
    1414:	73 07       	cpc	r23, r19
    1416:	84 07       	cpc	r24, r20
    1418:	95 07       	cpc	r25, r21
    141a:	18 f0       	brcs	.+6      	; 0x1422 <__addsf3x+0x18>
    141c:	71 f4       	brne	.+28     	; 0x143a <__addsf3x+0x30>
    141e:	9e f5       	brtc	.+102    	; 0x1486 <__addsf3x+0x7c>
    1420:	ce c0       	rjmp	.+412    	; 0x15be <__fp_zero>
    1422:	0e f4       	brtc	.+2      	; 0x1426 <__addsf3x+0x1c>
    1424:	e0 95       	com	r30
    1426:	0b 2e       	mov	r0, r27
    1428:	ba 2f       	mov	r27, r26
    142a:	a0 2d       	mov	r26, r0
    142c:	0b 01       	movw	r0, r22
    142e:	b9 01       	movw	r22, r18
    1430:	90 01       	movw	r18, r0
    1432:	0c 01       	movw	r0, r24
    1434:	ca 01       	movw	r24, r20
    1436:	a0 01       	movw	r20, r0
    1438:	11 24       	eor	r1, r1
    143a:	ff 27       	eor	r31, r31
    143c:	59 1b       	sub	r21, r25
    143e:	99 f0       	breq	.+38     	; 0x1466 <__addsf3x+0x5c>
    1440:	59 3f       	cpi	r21, 0xF9	; 249
    1442:	50 f4       	brcc	.+20     	; 0x1458 <__addsf3x+0x4e>
    1444:	50 3e       	cpi	r21, 0xE0	; 224
    1446:	68 f1       	brcs	.+90     	; 0x14a2 <__addsf3x+0x98>
    1448:	1a 16       	cp	r1, r26
    144a:	f0 40       	sbci	r31, 0x00	; 0
    144c:	a2 2f       	mov	r26, r18
    144e:	23 2f       	mov	r18, r19
    1450:	34 2f       	mov	r19, r20
    1452:	44 27       	eor	r20, r20
    1454:	58 5f       	subi	r21, 0xF8	; 248
    1456:	f3 cf       	rjmp	.-26     	; 0x143e <__addsf3x+0x34>
    1458:	46 95       	lsr	r20
    145a:	37 95       	ror	r19
    145c:	27 95       	ror	r18
    145e:	a7 95       	ror	r26
    1460:	f0 40       	sbci	r31, 0x00	; 0
    1462:	53 95       	inc	r21
    1464:	c9 f7       	brne	.-14     	; 0x1458 <__addsf3x+0x4e>
    1466:	7e f4       	brtc	.+30     	; 0x1486 <__addsf3x+0x7c>
    1468:	1f 16       	cp	r1, r31
    146a:	ba 0b       	sbc	r27, r26
    146c:	62 0b       	sbc	r22, r18
    146e:	73 0b       	sbc	r23, r19
    1470:	84 0b       	sbc	r24, r20
    1472:	ba f0       	brmi	.+46     	; 0x14a2 <__addsf3x+0x98>
    1474:	91 50       	subi	r25, 0x01	; 1
    1476:	a1 f0       	breq	.+40     	; 0x14a0 <__addsf3x+0x96>
    1478:	ff 0f       	add	r31, r31
    147a:	bb 1f       	adc	r27, r27
    147c:	66 1f       	adc	r22, r22
    147e:	77 1f       	adc	r23, r23
    1480:	88 1f       	adc	r24, r24
    1482:	c2 f7       	brpl	.-16     	; 0x1474 <__addsf3x+0x6a>
    1484:	0e c0       	rjmp	.+28     	; 0x14a2 <__addsf3x+0x98>
    1486:	ba 0f       	add	r27, r26
    1488:	62 1f       	adc	r22, r18
    148a:	73 1f       	adc	r23, r19
    148c:	84 1f       	adc	r24, r20
    148e:	48 f4       	brcc	.+18     	; 0x14a2 <__addsf3x+0x98>
    1490:	87 95       	ror	r24
    1492:	77 95       	ror	r23
    1494:	67 95       	ror	r22
    1496:	b7 95       	ror	r27
    1498:	f7 95       	ror	r31
    149a:	9e 3f       	cpi	r25, 0xFE	; 254
    149c:	08 f0       	brcs	.+2      	; 0x14a0 <__addsf3x+0x96>
    149e:	b3 cf       	rjmp	.-154    	; 0x1406 <__addsf3+0x1e>
    14a0:	93 95       	inc	r25
    14a2:	88 0f       	add	r24, r24
    14a4:	08 f0       	brcs	.+2      	; 0x14a8 <__addsf3x+0x9e>
    14a6:	99 27       	eor	r25, r25
    14a8:	ee 0f       	add	r30, r30
    14aa:	97 95       	ror	r25
    14ac:	87 95       	ror	r24
    14ae:	08 95       	ret

000014b0 <__floatunsisf>:
    14b0:	e8 94       	clt
    14b2:	09 c0       	rjmp	.+18     	; 0x14c6 <__floatsisf+0x12>

000014b4 <__floatsisf>:
    14b4:	97 fb       	bst	r25, 7
    14b6:	3e f4       	brtc	.+14     	; 0x14c6 <__floatsisf+0x12>
    14b8:	90 95       	com	r25
    14ba:	80 95       	com	r24
    14bc:	70 95       	com	r23
    14be:	61 95       	neg	r22
    14c0:	7f 4f       	sbci	r23, 0xFF	; 255
    14c2:	8f 4f       	sbci	r24, 0xFF	; 255
    14c4:	9f 4f       	sbci	r25, 0xFF	; 255
    14c6:	99 23       	and	r25, r25
    14c8:	a9 f0       	breq	.+42     	; 0x14f4 <__floatsisf+0x40>
    14ca:	f9 2f       	mov	r31, r25
    14cc:	96 e9       	ldi	r25, 0x96	; 150
    14ce:	bb 27       	eor	r27, r27
    14d0:	93 95       	inc	r25
    14d2:	f6 95       	lsr	r31
    14d4:	87 95       	ror	r24
    14d6:	77 95       	ror	r23
    14d8:	67 95       	ror	r22
    14da:	b7 95       	ror	r27
    14dc:	f1 11       	cpse	r31, r1
    14de:	f8 cf       	rjmp	.-16     	; 0x14d0 <__floatsisf+0x1c>
    14e0:	fa f4       	brpl	.+62     	; 0x1520 <__floatsisf+0x6c>
    14e2:	bb 0f       	add	r27, r27
    14e4:	11 f4       	brne	.+4      	; 0x14ea <__floatsisf+0x36>
    14e6:	60 ff       	sbrs	r22, 0
    14e8:	1b c0       	rjmp	.+54     	; 0x1520 <__floatsisf+0x6c>
    14ea:	6f 5f       	subi	r22, 0xFF	; 255
    14ec:	7f 4f       	sbci	r23, 0xFF	; 255
    14ee:	8f 4f       	sbci	r24, 0xFF	; 255
    14f0:	9f 4f       	sbci	r25, 0xFF	; 255
    14f2:	16 c0       	rjmp	.+44     	; 0x1520 <__floatsisf+0x6c>
    14f4:	88 23       	and	r24, r24
    14f6:	11 f0       	breq	.+4      	; 0x14fc <__floatsisf+0x48>
    14f8:	96 e9       	ldi	r25, 0x96	; 150
    14fa:	11 c0       	rjmp	.+34     	; 0x151e <__floatsisf+0x6a>
    14fc:	77 23       	and	r23, r23
    14fe:	21 f0       	breq	.+8      	; 0x1508 <__floatsisf+0x54>
    1500:	9e e8       	ldi	r25, 0x8E	; 142
    1502:	87 2f       	mov	r24, r23
    1504:	76 2f       	mov	r23, r22
    1506:	05 c0       	rjmp	.+10     	; 0x1512 <__floatsisf+0x5e>
    1508:	66 23       	and	r22, r22
    150a:	71 f0       	breq	.+28     	; 0x1528 <__floatsisf+0x74>
    150c:	96 e8       	ldi	r25, 0x86	; 134
    150e:	86 2f       	mov	r24, r22
    1510:	70 e0       	ldi	r23, 0x00	; 0
    1512:	60 e0       	ldi	r22, 0x00	; 0
    1514:	2a f0       	brmi	.+10     	; 0x1520 <__floatsisf+0x6c>
    1516:	9a 95       	dec	r25
    1518:	66 0f       	add	r22, r22
    151a:	77 1f       	adc	r23, r23
    151c:	88 1f       	adc	r24, r24
    151e:	da f7       	brpl	.-10     	; 0x1516 <__floatsisf+0x62>
    1520:	88 0f       	add	r24, r24
    1522:	96 95       	lsr	r25
    1524:	87 95       	ror	r24
    1526:	97 f9       	bld	r25, 7
    1528:	08 95       	ret

0000152a <__fp_inf>:
    152a:	97 f9       	bld	r25, 7
    152c:	9f 67       	ori	r25, 0x7F	; 127
    152e:	80 e8       	ldi	r24, 0x80	; 128
    1530:	70 e0       	ldi	r23, 0x00	; 0
    1532:	60 e0       	ldi	r22, 0x00	; 0
    1534:	08 95       	ret

00001536 <__fp_nan>:
    1536:	9f ef       	ldi	r25, 0xFF	; 255
    1538:	80 ec       	ldi	r24, 0xC0	; 192
    153a:	08 95       	ret

0000153c <__fp_pscA>:
    153c:	00 24       	eor	r0, r0
    153e:	0a 94       	dec	r0
    1540:	16 16       	cp	r1, r22
    1542:	17 06       	cpc	r1, r23
    1544:	18 06       	cpc	r1, r24
    1546:	09 06       	cpc	r0, r25
    1548:	08 95       	ret

0000154a <__fp_pscB>:
    154a:	00 24       	eor	r0, r0
    154c:	0a 94       	dec	r0
    154e:	12 16       	cp	r1, r18
    1550:	13 06       	cpc	r1, r19
    1552:	14 06       	cpc	r1, r20
    1554:	05 06       	cpc	r0, r21
    1556:	08 95       	ret

00001558 <__fp_round>:
    1558:	09 2e       	mov	r0, r25
    155a:	03 94       	inc	r0
    155c:	00 0c       	add	r0, r0
    155e:	11 f4       	brne	.+4      	; 0x1564 <__fp_round+0xc>
    1560:	88 23       	and	r24, r24
    1562:	52 f0       	brmi	.+20     	; 0x1578 <__fp_round+0x20>
    1564:	bb 0f       	add	r27, r27
    1566:	40 f4       	brcc	.+16     	; 0x1578 <__fp_round+0x20>
    1568:	bf 2b       	or	r27, r31
    156a:	11 f4       	brne	.+4      	; 0x1570 <__fp_round+0x18>
    156c:	60 ff       	sbrs	r22, 0
    156e:	04 c0       	rjmp	.+8      	; 0x1578 <__fp_round+0x20>
    1570:	6f 5f       	subi	r22, 0xFF	; 255
    1572:	7f 4f       	sbci	r23, 0xFF	; 255
    1574:	8f 4f       	sbci	r24, 0xFF	; 255
    1576:	9f 4f       	sbci	r25, 0xFF	; 255
    1578:	08 95       	ret

0000157a <__fp_split3>:
    157a:	57 fd       	sbrc	r21, 7
    157c:	90 58       	subi	r25, 0x80	; 128
    157e:	44 0f       	add	r20, r20
    1580:	55 1f       	adc	r21, r21
    1582:	59 f0       	breq	.+22     	; 0x159a <__fp_splitA+0x10>
    1584:	5f 3f       	cpi	r21, 0xFF	; 255
    1586:	71 f0       	breq	.+28     	; 0x15a4 <__fp_splitA+0x1a>
    1588:	47 95       	ror	r20

0000158a <__fp_splitA>:
    158a:	88 0f       	add	r24, r24
    158c:	97 fb       	bst	r25, 7
    158e:	99 1f       	adc	r25, r25
    1590:	61 f0       	breq	.+24     	; 0x15aa <__fp_splitA+0x20>
    1592:	9f 3f       	cpi	r25, 0xFF	; 255
    1594:	79 f0       	breq	.+30     	; 0x15b4 <__fp_splitA+0x2a>
    1596:	87 95       	ror	r24
    1598:	08 95       	ret
    159a:	12 16       	cp	r1, r18
    159c:	13 06       	cpc	r1, r19
    159e:	14 06       	cpc	r1, r20
    15a0:	55 1f       	adc	r21, r21
    15a2:	f2 cf       	rjmp	.-28     	; 0x1588 <__fp_split3+0xe>
    15a4:	46 95       	lsr	r20
    15a6:	f1 df       	rcall	.-30     	; 0x158a <__fp_splitA>
    15a8:	08 c0       	rjmp	.+16     	; 0x15ba <__fp_splitA+0x30>
    15aa:	16 16       	cp	r1, r22
    15ac:	17 06       	cpc	r1, r23
    15ae:	18 06       	cpc	r1, r24
    15b0:	99 1f       	adc	r25, r25
    15b2:	f1 cf       	rjmp	.-30     	; 0x1596 <__fp_splitA+0xc>
    15b4:	86 95       	lsr	r24
    15b6:	71 05       	cpc	r23, r1
    15b8:	61 05       	cpc	r22, r1
    15ba:	08 94       	sec
    15bc:	08 95       	ret

000015be <__fp_zero>:
    15be:	e8 94       	clt

000015c0 <__fp_szero>:
    15c0:	bb 27       	eor	r27, r27
    15c2:	66 27       	eor	r22, r22
    15c4:	77 27       	eor	r23, r23
    15c6:	cb 01       	movw	r24, r22
    15c8:	97 f9       	bld	r25, 7
    15ca:	08 95       	ret

000015cc <__mulsf3>:
    15cc:	0b d0       	rcall	.+22     	; 0x15e4 <__mulsf3x>
    15ce:	c4 cf       	rjmp	.-120    	; 0x1558 <__fp_round>
    15d0:	b5 df       	rcall	.-150    	; 0x153c <__fp_pscA>
    15d2:	28 f0       	brcs	.+10     	; 0x15de <__mulsf3+0x12>
    15d4:	ba df       	rcall	.-140    	; 0x154a <__fp_pscB>
    15d6:	18 f0       	brcs	.+6      	; 0x15de <__mulsf3+0x12>
    15d8:	95 23       	and	r25, r21
    15da:	09 f0       	breq	.+2      	; 0x15de <__mulsf3+0x12>
    15dc:	a6 cf       	rjmp	.-180    	; 0x152a <__fp_inf>
    15de:	ab cf       	rjmp	.-170    	; 0x1536 <__fp_nan>
    15e0:	11 24       	eor	r1, r1
    15e2:	ee cf       	rjmp	.-36     	; 0x15c0 <__fp_szero>

000015e4 <__mulsf3x>:
    15e4:	ca df       	rcall	.-108    	; 0x157a <__fp_split3>
    15e6:	a0 f3       	brcs	.-24     	; 0x15d0 <__mulsf3+0x4>

000015e8 <__mulsf3_pse>:
    15e8:	95 9f       	mul	r25, r21
    15ea:	d1 f3       	breq	.-12     	; 0x15e0 <__mulsf3+0x14>
    15ec:	95 0f       	add	r25, r21
    15ee:	50 e0       	ldi	r21, 0x00	; 0
    15f0:	55 1f       	adc	r21, r21
    15f2:	62 9f       	mul	r22, r18
    15f4:	f0 01       	movw	r30, r0
    15f6:	72 9f       	mul	r23, r18
    15f8:	bb 27       	eor	r27, r27
    15fa:	f0 0d       	add	r31, r0
    15fc:	b1 1d       	adc	r27, r1
    15fe:	63 9f       	mul	r22, r19
    1600:	aa 27       	eor	r26, r26
    1602:	f0 0d       	add	r31, r0
    1604:	b1 1d       	adc	r27, r1
    1606:	aa 1f       	adc	r26, r26
    1608:	64 9f       	mul	r22, r20
    160a:	66 27       	eor	r22, r22
    160c:	b0 0d       	add	r27, r0
    160e:	a1 1d       	adc	r26, r1
    1610:	66 1f       	adc	r22, r22
    1612:	82 9f       	mul	r24, r18
    1614:	22 27       	eor	r18, r18
    1616:	b0 0d       	add	r27, r0
    1618:	a1 1d       	adc	r26, r1
    161a:	62 1f       	adc	r22, r18
    161c:	73 9f       	mul	r23, r19
    161e:	b0 0d       	add	r27, r0
    1620:	a1 1d       	adc	r26, r1
    1622:	62 1f       	adc	r22, r18
    1624:	83 9f       	mul	r24, r19
    1626:	a0 0d       	add	r26, r0
    1628:	61 1d       	adc	r22, r1
    162a:	22 1f       	adc	r18, r18
    162c:	74 9f       	mul	r23, r20
    162e:	33 27       	eor	r19, r19
    1630:	a0 0d       	add	r26, r0
    1632:	61 1d       	adc	r22, r1
    1634:	23 1f       	adc	r18, r19
    1636:	84 9f       	mul	r24, r20
    1638:	60 0d       	add	r22, r0
    163a:	21 1d       	adc	r18, r1
    163c:	82 2f       	mov	r24, r18
    163e:	76 2f       	mov	r23, r22
    1640:	6a 2f       	mov	r22, r26
    1642:	11 24       	eor	r1, r1
    1644:	9f 57       	subi	r25, 0x7F	; 127
    1646:	50 40       	sbci	r21, 0x00	; 0
    1648:	8a f0       	brmi	.+34     	; 0x166c <__mulsf3_pse+0x84>
    164a:	e1 f0       	breq	.+56     	; 0x1684 <__mulsf3_pse+0x9c>
    164c:	88 23       	and	r24, r24
    164e:	4a f0       	brmi	.+18     	; 0x1662 <__mulsf3_pse+0x7a>
    1650:	ee 0f       	add	r30, r30
    1652:	ff 1f       	adc	r31, r31
    1654:	bb 1f       	adc	r27, r27
    1656:	66 1f       	adc	r22, r22
    1658:	77 1f       	adc	r23, r23
    165a:	88 1f       	adc	r24, r24
    165c:	91 50       	subi	r25, 0x01	; 1
    165e:	50 40       	sbci	r21, 0x00	; 0
    1660:	a9 f7       	brne	.-22     	; 0x164c <__mulsf3_pse+0x64>
    1662:	9e 3f       	cpi	r25, 0xFE	; 254
    1664:	51 05       	cpc	r21, r1
    1666:	70 f0       	brcs	.+28     	; 0x1684 <__mulsf3_pse+0x9c>
    1668:	60 cf       	rjmp	.-320    	; 0x152a <__fp_inf>
    166a:	aa cf       	rjmp	.-172    	; 0x15c0 <__fp_szero>
    166c:	5f 3f       	cpi	r21, 0xFF	; 255
    166e:	ec f3       	brlt	.-6      	; 0x166a <__mulsf3_pse+0x82>
    1670:	98 3e       	cpi	r25, 0xE8	; 232
    1672:	dc f3       	brlt	.-10     	; 0x166a <__mulsf3_pse+0x82>
    1674:	86 95       	lsr	r24
    1676:	77 95       	ror	r23
    1678:	67 95       	ror	r22
    167a:	b7 95       	ror	r27
    167c:	f7 95       	ror	r31
    167e:	e7 95       	ror	r30
    1680:	9f 5f       	subi	r25, 0xFF	; 255
    1682:	c1 f7       	brne	.-16     	; 0x1674 <__mulsf3_pse+0x8c>
    1684:	fe 2b       	or	r31, r30
    1686:	88 0f       	add	r24, r24
    1688:	91 1d       	adc	r25, r1
    168a:	96 95       	lsr	r25
    168c:	87 95       	ror	r24
    168e:	97 f9       	bld	r25, 7
    1690:	08 95       	ret

00001692 <__ftoa_engine>:
    1692:	28 30       	cpi	r18, 0x08	; 8
    1694:	08 f0       	brcs	.+2      	; 0x1698 <__ftoa_engine+0x6>
    1696:	27 e0       	ldi	r18, 0x07	; 7
    1698:	33 27       	eor	r19, r19
    169a:	da 01       	movw	r26, r20
    169c:	99 0f       	add	r25, r25
    169e:	31 1d       	adc	r19, r1
    16a0:	87 fd       	sbrc	r24, 7
    16a2:	91 60       	ori	r25, 0x01	; 1
    16a4:	00 96       	adiw	r24, 0x00	; 0
    16a6:	61 05       	cpc	r22, r1
    16a8:	71 05       	cpc	r23, r1
    16aa:	39 f4       	brne	.+14     	; 0x16ba <__ftoa_engine+0x28>
    16ac:	32 60       	ori	r19, 0x02	; 2
    16ae:	2e 5f       	subi	r18, 0xFE	; 254
    16b0:	3d 93       	st	X+, r19
    16b2:	30 e3       	ldi	r19, 0x30	; 48
    16b4:	2a 95       	dec	r18
    16b6:	e1 f7       	brne	.-8      	; 0x16b0 <__ftoa_engine+0x1e>
    16b8:	08 95       	ret
    16ba:	9f 3f       	cpi	r25, 0xFF	; 255
    16bc:	30 f0       	brcs	.+12     	; 0x16ca <__ftoa_engine+0x38>
    16be:	80 38       	cpi	r24, 0x80	; 128
    16c0:	71 05       	cpc	r23, r1
    16c2:	61 05       	cpc	r22, r1
    16c4:	09 f0       	breq	.+2      	; 0x16c8 <__ftoa_engine+0x36>
    16c6:	3c 5f       	subi	r19, 0xFC	; 252
    16c8:	3c 5f       	subi	r19, 0xFC	; 252
    16ca:	3d 93       	st	X+, r19
    16cc:	91 30       	cpi	r25, 0x01	; 1
    16ce:	08 f0       	brcs	.+2      	; 0x16d2 <__ftoa_engine+0x40>
    16d0:	80 68       	ori	r24, 0x80	; 128
    16d2:	91 1d       	adc	r25, r1
    16d4:	df 93       	push	r29
    16d6:	cf 93       	push	r28
    16d8:	1f 93       	push	r17
    16da:	0f 93       	push	r16
    16dc:	ff 92       	push	r15
    16de:	ef 92       	push	r14
    16e0:	19 2f       	mov	r17, r25
    16e2:	98 7f       	andi	r25, 0xF8	; 248
    16e4:	96 95       	lsr	r25
    16e6:	e9 2f       	mov	r30, r25
    16e8:	96 95       	lsr	r25
    16ea:	96 95       	lsr	r25
    16ec:	e9 0f       	add	r30, r25
    16ee:	ff 27       	eor	r31, r31
    16f0:	e6 53       	subi	r30, 0x36	; 54
    16f2:	ff 4f       	sbci	r31, 0xFF	; 255
    16f4:	99 27       	eor	r25, r25
    16f6:	33 27       	eor	r19, r19
    16f8:	ee 24       	eor	r14, r14
    16fa:	ff 24       	eor	r15, r15
    16fc:	a7 01       	movw	r20, r14
    16fe:	e7 01       	movw	r28, r14
    1700:	05 90       	lpm	r0, Z+
    1702:	08 94       	sec
    1704:	07 94       	ror	r0
    1706:	28 f4       	brcc	.+10     	; 0x1712 <__ftoa_engine+0x80>
    1708:	36 0f       	add	r19, r22
    170a:	e7 1e       	adc	r14, r23
    170c:	f8 1e       	adc	r15, r24
    170e:	49 1f       	adc	r20, r25
    1710:	51 1d       	adc	r21, r1
    1712:	66 0f       	add	r22, r22
    1714:	77 1f       	adc	r23, r23
    1716:	88 1f       	adc	r24, r24
    1718:	99 1f       	adc	r25, r25
    171a:	06 94       	lsr	r0
    171c:	a1 f7       	brne	.-24     	; 0x1706 <__ftoa_engine+0x74>
    171e:	05 90       	lpm	r0, Z+
    1720:	07 94       	ror	r0
    1722:	28 f4       	brcc	.+10     	; 0x172e <__ftoa_engine+0x9c>
    1724:	e7 0e       	add	r14, r23
    1726:	f8 1e       	adc	r15, r24
    1728:	49 1f       	adc	r20, r25
    172a:	56 1f       	adc	r21, r22
    172c:	c1 1d       	adc	r28, r1
    172e:	77 0f       	add	r23, r23
    1730:	88 1f       	adc	r24, r24
    1732:	99 1f       	adc	r25, r25
    1734:	66 1f       	adc	r22, r22
    1736:	06 94       	lsr	r0
    1738:	a1 f7       	brne	.-24     	; 0x1722 <__ftoa_engine+0x90>
    173a:	05 90       	lpm	r0, Z+
    173c:	07 94       	ror	r0
    173e:	28 f4       	brcc	.+10     	; 0x174a <__ftoa_engine+0xb8>
    1740:	f8 0e       	add	r15, r24
    1742:	49 1f       	adc	r20, r25
    1744:	56 1f       	adc	r21, r22
    1746:	c7 1f       	adc	r28, r23
    1748:	d1 1d       	adc	r29, r1
    174a:	88 0f       	add	r24, r24
    174c:	99 1f       	adc	r25, r25
    174e:	66 1f       	adc	r22, r22
    1750:	77 1f       	adc	r23, r23
    1752:	06 94       	lsr	r0
    1754:	a1 f7       	brne	.-24     	; 0x173e <__ftoa_engine+0xac>
    1756:	05 90       	lpm	r0, Z+
    1758:	07 94       	ror	r0
    175a:	20 f4       	brcc	.+8      	; 0x1764 <__ftoa_engine+0xd2>
    175c:	49 0f       	add	r20, r25
    175e:	56 1f       	adc	r21, r22
    1760:	c7 1f       	adc	r28, r23
    1762:	d8 1f       	adc	r29, r24
    1764:	99 0f       	add	r25, r25
    1766:	66 1f       	adc	r22, r22
    1768:	77 1f       	adc	r23, r23
    176a:	88 1f       	adc	r24, r24
    176c:	06 94       	lsr	r0
    176e:	a9 f7       	brne	.-22     	; 0x175a <__ftoa_engine+0xc8>
    1770:	84 91       	lpm	r24, Z
    1772:	10 95       	com	r17
    1774:	17 70       	andi	r17, 0x07	; 7
    1776:	41 f0       	breq	.+16     	; 0x1788 <__ftoa_engine+0xf6>
    1778:	d6 95       	lsr	r29
    177a:	c7 95       	ror	r28
    177c:	57 95       	ror	r21
    177e:	47 95       	ror	r20
    1780:	f7 94       	ror	r15
    1782:	e7 94       	ror	r14
    1784:	1a 95       	dec	r17
    1786:	c1 f7       	brne	.-16     	; 0x1778 <__ftoa_engine+0xe6>
    1788:	e0 e7       	ldi	r30, 0x70	; 112
    178a:	f0 e0       	ldi	r31, 0x00	; 0
    178c:	68 94       	set
    178e:	15 90       	lpm	r1, Z+
    1790:	15 91       	lpm	r17, Z+
    1792:	35 91       	lpm	r19, Z+
    1794:	65 91       	lpm	r22, Z+
    1796:	95 91       	lpm	r25, Z+
    1798:	05 90       	lpm	r0, Z+
    179a:	7f e2       	ldi	r23, 0x2F	; 47
    179c:	73 95       	inc	r23
    179e:	e1 18       	sub	r14, r1
    17a0:	f1 0a       	sbc	r15, r17
    17a2:	43 0b       	sbc	r20, r19
    17a4:	56 0b       	sbc	r21, r22
    17a6:	c9 0b       	sbc	r28, r25
    17a8:	d0 09       	sbc	r29, r0
    17aa:	c0 f7       	brcc	.-16     	; 0x179c <__ftoa_engine+0x10a>
    17ac:	e1 0c       	add	r14, r1
    17ae:	f1 1e       	adc	r15, r17
    17b0:	43 1f       	adc	r20, r19
    17b2:	56 1f       	adc	r21, r22
    17b4:	c9 1f       	adc	r28, r25
    17b6:	d0 1d       	adc	r29, r0
    17b8:	7e f4       	brtc	.+30     	; 0x17d8 <__ftoa_engine+0x146>
    17ba:	70 33       	cpi	r23, 0x30	; 48
    17bc:	11 f4       	brne	.+4      	; 0x17c2 <__ftoa_engine+0x130>
    17be:	8a 95       	dec	r24
    17c0:	e6 cf       	rjmp	.-52     	; 0x178e <__ftoa_engine+0xfc>
    17c2:	e8 94       	clt
    17c4:	01 50       	subi	r16, 0x01	; 1
    17c6:	30 f0       	brcs	.+12     	; 0x17d4 <__ftoa_engine+0x142>
    17c8:	08 0f       	add	r16, r24
    17ca:	0a f4       	brpl	.+2      	; 0x17ce <__ftoa_engine+0x13c>
    17cc:	00 27       	eor	r16, r16
    17ce:	02 17       	cp	r16, r18
    17d0:	08 f4       	brcc	.+2      	; 0x17d4 <__ftoa_engine+0x142>
    17d2:	20 2f       	mov	r18, r16
    17d4:	23 95       	inc	r18
    17d6:	02 2f       	mov	r16, r18
    17d8:	7a 33       	cpi	r23, 0x3A	; 58
    17da:	28 f0       	brcs	.+10     	; 0x17e6 <__ftoa_engine+0x154>
    17dc:	79 e3       	ldi	r23, 0x39	; 57
    17de:	7d 93       	st	X+, r23
    17e0:	2a 95       	dec	r18
    17e2:	e9 f7       	brne	.-6      	; 0x17de <__ftoa_engine+0x14c>
    17e4:	10 c0       	rjmp	.+32     	; 0x1806 <__ftoa_engine+0x174>
    17e6:	7d 93       	st	X+, r23
    17e8:	2a 95       	dec	r18
    17ea:	89 f6       	brne	.-94     	; 0x178e <__ftoa_engine+0xfc>
    17ec:	06 94       	lsr	r0
    17ee:	97 95       	ror	r25
    17f0:	67 95       	ror	r22
    17f2:	37 95       	ror	r19
    17f4:	17 95       	ror	r17
    17f6:	17 94       	ror	r1
    17f8:	e1 18       	sub	r14, r1
    17fa:	f1 0a       	sbc	r15, r17
    17fc:	43 0b       	sbc	r20, r19
    17fe:	56 0b       	sbc	r21, r22
    1800:	c9 0b       	sbc	r28, r25
    1802:	d0 09       	sbc	r29, r0
    1804:	98 f0       	brcs	.+38     	; 0x182c <__ftoa_engine+0x19a>
    1806:	23 95       	inc	r18
    1808:	7e 91       	ld	r23, -X
    180a:	73 95       	inc	r23
    180c:	7a 33       	cpi	r23, 0x3A	; 58
    180e:	08 f0       	brcs	.+2      	; 0x1812 <__ftoa_engine+0x180>
    1810:	70 e3       	ldi	r23, 0x30	; 48
    1812:	7c 93       	st	X, r23
    1814:	20 13       	cpse	r18, r16
    1816:	b8 f7       	brcc	.-18     	; 0x1806 <__ftoa_engine+0x174>
    1818:	7e 91       	ld	r23, -X
    181a:	70 61       	ori	r23, 0x10	; 16
    181c:	7d 93       	st	X+, r23
    181e:	30 f0       	brcs	.+12     	; 0x182c <__ftoa_engine+0x19a>
    1820:	83 95       	inc	r24
    1822:	71 e3       	ldi	r23, 0x31	; 49
    1824:	7d 93       	st	X+, r23
    1826:	70 e3       	ldi	r23, 0x30	; 48
    1828:	2a 95       	dec	r18
    182a:	e1 f7       	brne	.-8      	; 0x1824 <__ftoa_engine+0x192>
    182c:	11 24       	eor	r1, r1
    182e:	ef 90       	pop	r14
    1830:	ff 90       	pop	r15
    1832:	0f 91       	pop	r16
    1834:	1f 91       	pop	r17
    1836:	cf 91       	pop	r28
    1838:	df 91       	pop	r29
    183a:	99 27       	eor	r25, r25
    183c:	87 fd       	sbrc	r24, 7
    183e:	90 95       	com	r25
    1840:	08 95       	ret

00001842 <isgraph>:
    1842:	80 32       	cpi	r24, 0x20	; 32
    1844:	09 f0       	breq	.+2      	; 0x1848 <isprint+0x2>

00001846 <isprint>:
    1846:	91 11       	cpse	r25, r1
    1848:	79 c2       	rjmp	.+1266   	; 0x1d3c <__ctype_isfalse>
    184a:	80 52       	subi	r24, 0x20	; 32
    184c:	8f 55       	subi	r24, 0x5F	; 95
    184e:	e0 f7       	brcc	.-8      	; 0x1848 <isprint+0x2>
    1850:	08 95       	ret

00001852 <strnlen_P>:
    1852:	fc 01       	movw	r30, r24
    1854:	05 90       	lpm	r0, Z+
    1856:	61 50       	subi	r22, 0x01	; 1
    1858:	70 40       	sbci	r23, 0x00	; 0
    185a:	01 10       	cpse	r0, r1
    185c:	d8 f7       	brcc	.-10     	; 0x1854 <strnlen_P+0x2>
    185e:	80 95       	com	r24
    1860:	90 95       	com	r25
    1862:	8e 0f       	add	r24, r30
    1864:	9f 1f       	adc	r25, r31
    1866:	08 95       	ret

00001868 <strnlen>:
    1868:	fc 01       	movw	r30, r24
    186a:	61 50       	subi	r22, 0x01	; 1
    186c:	70 40       	sbci	r23, 0x00	; 0
    186e:	01 90       	ld	r0, Z+
    1870:	01 10       	cpse	r0, r1
    1872:	d8 f7       	brcc	.-10     	; 0x186a <strnlen+0x2>
    1874:	80 95       	com	r24
    1876:	90 95       	com	r25
    1878:	8e 0f       	add	r24, r30
    187a:	9f 1f       	adc	r25, r31
    187c:	08 95       	ret

0000187e <fdevopen>:
    187e:	0f 93       	push	r16
    1880:	1f 93       	push	r17
    1882:	cf 93       	push	r28
    1884:	df 93       	push	r29
    1886:	ec 01       	movw	r28, r24
    1888:	8b 01       	movw	r16, r22
    188a:	00 97       	sbiw	r24, 0x00	; 0
    188c:	31 f4       	brne	.+12     	; 0x189a <fdevopen+0x1c>
    188e:	61 15       	cp	r22, r1
    1890:	71 05       	cpc	r23, r1
    1892:	19 f4       	brne	.+6      	; 0x189a <fdevopen+0x1c>
    1894:	80 e0       	ldi	r24, 0x00	; 0
    1896:	90 e0       	ldi	r25, 0x00	; 0
    1898:	38 c0       	rjmp	.+112    	; 0x190a <fdevopen+0x8c>
    189a:	6e e0       	ldi	r22, 0x0E	; 14
    189c:	70 e0       	ldi	r23, 0x00	; 0
    189e:	81 e0       	ldi	r24, 0x01	; 1
    18a0:	90 e0       	ldi	r25, 0x00	; 0
    18a2:	0e 94 5b 0d 	call	0x1ab6	; 0x1ab6 <calloc>
    18a6:	fc 01       	movw	r30, r24
    18a8:	00 97       	sbiw	r24, 0x00	; 0
    18aa:	a1 f3       	breq	.-24     	; 0x1894 <fdevopen+0x16>
    18ac:	80 e8       	ldi	r24, 0x80	; 128
    18ae:	83 83       	std	Z+3, r24	; 0x03
    18b0:	01 15       	cp	r16, r1
    18b2:	11 05       	cpc	r17, r1
    18b4:	71 f0       	breq	.+28     	; 0x18d2 <fdevopen+0x54>
    18b6:	13 87       	std	Z+11, r17	; 0x0b
    18b8:	02 87       	std	Z+10, r16	; 0x0a
    18ba:	81 e8       	ldi	r24, 0x81	; 129
    18bc:	83 83       	std	Z+3, r24	; 0x03
    18be:	80 91 1e 02 	lds	r24, 0x021E
    18c2:	90 91 1f 02 	lds	r25, 0x021F
    18c6:	89 2b       	or	r24, r25
    18c8:	21 f4       	brne	.+8      	; 0x18d2 <fdevopen+0x54>
    18ca:	f0 93 1f 02 	sts	0x021F, r31
    18ce:	e0 93 1e 02 	sts	0x021E, r30
    18d2:	20 97       	sbiw	r28, 0x00	; 0
    18d4:	c9 f0       	breq	.+50     	; 0x1908 <fdevopen+0x8a>
    18d6:	d1 87       	std	Z+9, r29	; 0x09
    18d8:	c0 87       	std	Z+8, r28	; 0x08
    18da:	83 81       	ldd	r24, Z+3	; 0x03
    18dc:	82 60       	ori	r24, 0x02	; 2
    18de:	83 83       	std	Z+3, r24	; 0x03
    18e0:	80 91 20 02 	lds	r24, 0x0220
    18e4:	90 91 21 02 	lds	r25, 0x0221
    18e8:	89 2b       	or	r24, r25
    18ea:	71 f4       	brne	.+28     	; 0x1908 <fdevopen+0x8a>
    18ec:	f0 93 21 02 	sts	0x0221, r31
    18f0:	e0 93 20 02 	sts	0x0220, r30
    18f4:	80 91 22 02 	lds	r24, 0x0222
    18f8:	90 91 23 02 	lds	r25, 0x0223
    18fc:	89 2b       	or	r24, r25
    18fe:	21 f4       	brne	.+8      	; 0x1908 <fdevopen+0x8a>
    1900:	f0 93 23 02 	sts	0x0223, r31
    1904:	e0 93 22 02 	sts	0x0222, r30
    1908:	cf 01       	movw	r24, r30
    190a:	df 91       	pop	r29
    190c:	cf 91       	pop	r28
    190e:	1f 91       	pop	r17
    1910:	0f 91       	pop	r16
    1912:	08 95       	ret

00001914 <fputc>:
    1914:	0f 93       	push	r16
    1916:	1f 93       	push	r17
    1918:	cf 93       	push	r28
    191a:	df 93       	push	r29
    191c:	18 2f       	mov	r17, r24
    191e:	09 2f       	mov	r16, r25
    1920:	eb 01       	movw	r28, r22
    1922:	8b 81       	ldd	r24, Y+3	; 0x03
    1924:	81 fd       	sbrc	r24, 1
    1926:	03 c0       	rjmp	.+6      	; 0x192e <fputc+0x1a>
    1928:	8f ef       	ldi	r24, 0xFF	; 255
    192a:	9f ef       	ldi	r25, 0xFF	; 255
    192c:	20 c0       	rjmp	.+64     	; 0x196e <fputc+0x5a>
    192e:	82 ff       	sbrs	r24, 2
    1930:	10 c0       	rjmp	.+32     	; 0x1952 <fputc+0x3e>
    1932:	4e 81       	ldd	r20, Y+6	; 0x06
    1934:	5f 81       	ldd	r21, Y+7	; 0x07
    1936:	2c 81       	ldd	r18, Y+4	; 0x04
    1938:	3d 81       	ldd	r19, Y+5	; 0x05
    193a:	42 17       	cp	r20, r18
    193c:	53 07       	cpc	r21, r19
    193e:	7c f4       	brge	.+30     	; 0x195e <fputc+0x4a>
    1940:	e8 81       	ld	r30, Y
    1942:	f9 81       	ldd	r31, Y+1	; 0x01
    1944:	9f 01       	movw	r18, r30
    1946:	2f 5f       	subi	r18, 0xFF	; 255
    1948:	3f 4f       	sbci	r19, 0xFF	; 255
    194a:	39 83       	std	Y+1, r19	; 0x01
    194c:	28 83       	st	Y, r18
    194e:	10 83       	st	Z, r17
    1950:	06 c0       	rjmp	.+12     	; 0x195e <fputc+0x4a>
    1952:	e8 85       	ldd	r30, Y+8	; 0x08
    1954:	f9 85       	ldd	r31, Y+9	; 0x09
    1956:	81 2f       	mov	r24, r17
    1958:	09 95       	icall
    195a:	89 2b       	or	r24, r25
    195c:	29 f7       	brne	.-54     	; 0x1928 <fputc+0x14>
    195e:	2e 81       	ldd	r18, Y+6	; 0x06
    1960:	3f 81       	ldd	r19, Y+7	; 0x07
    1962:	2f 5f       	subi	r18, 0xFF	; 255
    1964:	3f 4f       	sbci	r19, 0xFF	; 255
    1966:	3f 83       	std	Y+7, r19	; 0x07
    1968:	2e 83       	std	Y+6, r18	; 0x06
    196a:	81 2f       	mov	r24, r17
    196c:	90 2f       	mov	r25, r16
    196e:	df 91       	pop	r29
    1970:	cf 91       	pop	r28
    1972:	1f 91       	pop	r17
    1974:	0f 91       	pop	r16
    1976:	08 95       	ret

00001978 <printf>:
    1978:	a0 e0       	ldi	r26, 0x00	; 0
    197a:	b0 e0       	ldi	r27, 0x00	; 0
    197c:	e2 ec       	ldi	r30, 0xC2	; 194
    197e:	fc e0       	ldi	r31, 0x0C	; 12
    1980:	0c 94 b3 09 	jmp	0x1366	; 0x1366 <__prologue_saves__+0x20>
    1984:	fe 01       	movw	r30, r28
    1986:	35 96       	adiw	r30, 0x05	; 5
    1988:	61 91       	ld	r22, Z+
    198a:	71 91       	ld	r23, Z+
    198c:	af 01       	movw	r20, r30
    198e:	80 91 20 02 	lds	r24, 0x0220
    1992:	90 91 21 02 	lds	r25, 0x0221
    1996:	0e 94 08 06 	call	0xc10	; 0xc10 <vfprintf>
    199a:	e2 e0       	ldi	r30, 0x02	; 2
    199c:	0c 94 cf 09 	jmp	0x139e	; 0x139e <__epilogue_restores__+0x20>

000019a0 <puts>:
    19a0:	0f 93       	push	r16
    19a2:	1f 93       	push	r17
    19a4:	cf 93       	push	r28
    19a6:	df 93       	push	r29
    19a8:	e0 91 20 02 	lds	r30, 0x0220
    19ac:	f0 91 21 02 	lds	r31, 0x0221
    19b0:	23 81       	ldd	r18, Z+3	; 0x03
    19b2:	21 ff       	sbrs	r18, 1
    19b4:	1b c0       	rjmp	.+54     	; 0x19ec <puts+0x4c>
    19b6:	ec 01       	movw	r28, r24
    19b8:	00 e0       	ldi	r16, 0x00	; 0
    19ba:	10 e0       	ldi	r17, 0x00	; 0
    19bc:	89 91       	ld	r24, Y+
    19be:	60 91 20 02 	lds	r22, 0x0220
    19c2:	70 91 21 02 	lds	r23, 0x0221
    19c6:	db 01       	movw	r26, r22
    19c8:	18 96       	adiw	r26, 0x08	; 8
    19ca:	ed 91       	ld	r30, X+
    19cc:	fc 91       	ld	r31, X
    19ce:	19 97       	sbiw	r26, 0x09	; 9
    19d0:	88 23       	and	r24, r24
    19d2:	31 f0       	breq	.+12     	; 0x19e0 <puts+0x40>
    19d4:	09 95       	icall
    19d6:	89 2b       	or	r24, r25
    19d8:	89 f3       	breq	.-30     	; 0x19bc <puts+0x1c>
    19da:	0f ef       	ldi	r16, 0xFF	; 255
    19dc:	1f ef       	ldi	r17, 0xFF	; 255
    19de:	ee cf       	rjmp	.-36     	; 0x19bc <puts+0x1c>
    19e0:	8a e0       	ldi	r24, 0x0A	; 10
    19e2:	09 95       	icall
    19e4:	89 2b       	or	r24, r25
    19e6:	11 f4       	brne	.+4      	; 0x19ec <puts+0x4c>
    19e8:	c8 01       	movw	r24, r16
    19ea:	02 c0       	rjmp	.+4      	; 0x19f0 <puts+0x50>
    19ec:	8f ef       	ldi	r24, 0xFF	; 255
    19ee:	9f ef       	ldi	r25, 0xFF	; 255
    19f0:	df 91       	pop	r29
    19f2:	cf 91       	pop	r28
    19f4:	1f 91       	pop	r17
    19f6:	0f 91       	pop	r16
    19f8:	08 95       	ret

000019fa <__ultoa_invert>:
    19fa:	fa 01       	movw	r30, r20
    19fc:	aa 27       	eor	r26, r26
    19fe:	28 30       	cpi	r18, 0x08	; 8
    1a00:	51 f1       	breq	.+84     	; 0x1a56 <__ultoa_invert+0x5c>
    1a02:	20 31       	cpi	r18, 0x10	; 16
    1a04:	81 f1       	breq	.+96     	; 0x1a66 <__ultoa_invert+0x6c>
    1a06:	e8 94       	clt
    1a08:	6f 93       	push	r22
    1a0a:	6e 7f       	andi	r22, 0xFE	; 254
    1a0c:	6e 5f       	subi	r22, 0xFE	; 254
    1a0e:	7f 4f       	sbci	r23, 0xFF	; 255
    1a10:	8f 4f       	sbci	r24, 0xFF	; 255
    1a12:	9f 4f       	sbci	r25, 0xFF	; 255
    1a14:	af 4f       	sbci	r26, 0xFF	; 255
    1a16:	b1 e0       	ldi	r27, 0x01	; 1
    1a18:	3e d0       	rcall	.+124    	; 0x1a96 <__ultoa_invert+0x9c>
    1a1a:	b4 e0       	ldi	r27, 0x04	; 4
    1a1c:	3c d0       	rcall	.+120    	; 0x1a96 <__ultoa_invert+0x9c>
    1a1e:	67 0f       	add	r22, r23
    1a20:	78 1f       	adc	r23, r24
    1a22:	89 1f       	adc	r24, r25
    1a24:	9a 1f       	adc	r25, r26
    1a26:	a1 1d       	adc	r26, r1
    1a28:	68 0f       	add	r22, r24
    1a2a:	79 1f       	adc	r23, r25
    1a2c:	8a 1f       	adc	r24, r26
    1a2e:	91 1d       	adc	r25, r1
    1a30:	a1 1d       	adc	r26, r1
    1a32:	6a 0f       	add	r22, r26
    1a34:	71 1d       	adc	r23, r1
    1a36:	81 1d       	adc	r24, r1
    1a38:	91 1d       	adc	r25, r1
    1a3a:	a1 1d       	adc	r26, r1
    1a3c:	20 d0       	rcall	.+64     	; 0x1a7e <__ultoa_invert+0x84>
    1a3e:	09 f4       	brne	.+2      	; 0x1a42 <__ultoa_invert+0x48>
    1a40:	68 94       	set
    1a42:	3f 91       	pop	r19
    1a44:	2a e0       	ldi	r18, 0x0A	; 10
    1a46:	26 9f       	mul	r18, r22
    1a48:	11 24       	eor	r1, r1
    1a4a:	30 19       	sub	r19, r0
    1a4c:	30 5d       	subi	r19, 0xD0	; 208
    1a4e:	31 93       	st	Z+, r19
    1a50:	de f6       	brtc	.-74     	; 0x1a08 <__ultoa_invert+0xe>
    1a52:	cf 01       	movw	r24, r30
    1a54:	08 95       	ret
    1a56:	46 2f       	mov	r20, r22
    1a58:	47 70       	andi	r20, 0x07	; 7
    1a5a:	40 5d       	subi	r20, 0xD0	; 208
    1a5c:	41 93       	st	Z+, r20
    1a5e:	b3 e0       	ldi	r27, 0x03	; 3
    1a60:	0f d0       	rcall	.+30     	; 0x1a80 <__ultoa_invert+0x86>
    1a62:	c9 f7       	brne	.-14     	; 0x1a56 <__ultoa_invert+0x5c>
    1a64:	f6 cf       	rjmp	.-20     	; 0x1a52 <__ultoa_invert+0x58>
    1a66:	46 2f       	mov	r20, r22
    1a68:	4f 70       	andi	r20, 0x0F	; 15
    1a6a:	40 5d       	subi	r20, 0xD0	; 208
    1a6c:	4a 33       	cpi	r20, 0x3A	; 58
    1a6e:	18 f0       	brcs	.+6      	; 0x1a76 <__ultoa_invert+0x7c>
    1a70:	49 5d       	subi	r20, 0xD9	; 217
    1a72:	31 fd       	sbrc	r19, 1
    1a74:	40 52       	subi	r20, 0x20	; 32
    1a76:	41 93       	st	Z+, r20
    1a78:	02 d0       	rcall	.+4      	; 0x1a7e <__ultoa_invert+0x84>
    1a7a:	a9 f7       	brne	.-22     	; 0x1a66 <__ultoa_invert+0x6c>
    1a7c:	ea cf       	rjmp	.-44     	; 0x1a52 <__ultoa_invert+0x58>
    1a7e:	b4 e0       	ldi	r27, 0x04	; 4
    1a80:	a6 95       	lsr	r26
    1a82:	97 95       	ror	r25
    1a84:	87 95       	ror	r24
    1a86:	77 95       	ror	r23
    1a88:	67 95       	ror	r22
    1a8a:	ba 95       	dec	r27
    1a8c:	c9 f7       	brne	.-14     	; 0x1a80 <__ultoa_invert+0x86>
    1a8e:	00 97       	sbiw	r24, 0x00	; 0
    1a90:	61 05       	cpc	r22, r1
    1a92:	71 05       	cpc	r23, r1
    1a94:	08 95       	ret
    1a96:	9b 01       	movw	r18, r22
    1a98:	ac 01       	movw	r20, r24
    1a9a:	0a 2e       	mov	r0, r26
    1a9c:	06 94       	lsr	r0
    1a9e:	57 95       	ror	r21
    1aa0:	47 95       	ror	r20
    1aa2:	37 95       	ror	r19
    1aa4:	27 95       	ror	r18
    1aa6:	ba 95       	dec	r27
    1aa8:	c9 f7       	brne	.-14     	; 0x1a9c <__ultoa_invert+0xa2>
    1aaa:	62 0f       	add	r22, r18
    1aac:	73 1f       	adc	r23, r19
    1aae:	84 1f       	adc	r24, r20
    1ab0:	95 1f       	adc	r25, r21
    1ab2:	a0 1d       	adc	r26, r0
    1ab4:	08 95       	ret

00001ab6 <calloc>:
    1ab6:	0f 93       	push	r16
    1ab8:	1f 93       	push	r17
    1aba:	cf 93       	push	r28
    1abc:	df 93       	push	r29
    1abe:	86 9f       	mul	r24, r22
    1ac0:	80 01       	movw	r16, r0
    1ac2:	87 9f       	mul	r24, r23
    1ac4:	10 0d       	add	r17, r0
    1ac6:	96 9f       	mul	r25, r22
    1ac8:	10 0d       	add	r17, r0
    1aca:	11 24       	eor	r1, r1
    1acc:	c8 01       	movw	r24, r16
    1ace:	0e 94 77 0d 	call	0x1aee	; 0x1aee <malloc>
    1ad2:	ec 01       	movw	r28, r24
    1ad4:	00 97       	sbiw	r24, 0x00	; 0
    1ad6:	29 f0       	breq	.+10     	; 0x1ae2 <calloc+0x2c>
    1ad8:	a8 01       	movw	r20, r16
    1ada:	60 e0       	ldi	r22, 0x00	; 0
    1adc:	70 e0       	ldi	r23, 0x00	; 0
    1ade:	0e 94 a1 0e 	call	0x1d42	; 0x1d42 <memset>
    1ae2:	ce 01       	movw	r24, r28
    1ae4:	df 91       	pop	r29
    1ae6:	cf 91       	pop	r28
    1ae8:	1f 91       	pop	r17
    1aea:	0f 91       	pop	r16
    1aec:	08 95       	ret

00001aee <malloc>:
    1aee:	cf 93       	push	r28
    1af0:	df 93       	push	r29
    1af2:	82 30       	cpi	r24, 0x02	; 2
    1af4:	91 05       	cpc	r25, r1
    1af6:	10 f4       	brcc	.+4      	; 0x1afc <malloc+0xe>
    1af8:	82 e0       	ldi	r24, 0x02	; 2
    1afa:	90 e0       	ldi	r25, 0x00	; 0
    1afc:	e0 91 26 02 	lds	r30, 0x0226
    1b00:	f0 91 27 02 	lds	r31, 0x0227
    1b04:	20 e0       	ldi	r18, 0x00	; 0
    1b06:	30 e0       	ldi	r19, 0x00	; 0
    1b08:	a0 e0       	ldi	r26, 0x00	; 0
    1b0a:	b0 e0       	ldi	r27, 0x00	; 0
    1b0c:	30 97       	sbiw	r30, 0x00	; 0
    1b0e:	39 f1       	breq	.+78     	; 0x1b5e <malloc+0x70>
    1b10:	40 81       	ld	r20, Z
    1b12:	51 81       	ldd	r21, Z+1	; 0x01
    1b14:	48 17       	cp	r20, r24
    1b16:	59 07       	cpc	r21, r25
    1b18:	b8 f0       	brcs	.+46     	; 0x1b48 <malloc+0x5a>
    1b1a:	48 17       	cp	r20, r24
    1b1c:	59 07       	cpc	r21, r25
    1b1e:	71 f4       	brne	.+28     	; 0x1b3c <malloc+0x4e>
    1b20:	82 81       	ldd	r24, Z+2	; 0x02
    1b22:	93 81       	ldd	r25, Z+3	; 0x03
    1b24:	10 97       	sbiw	r26, 0x00	; 0
    1b26:	29 f0       	breq	.+10     	; 0x1b32 <malloc+0x44>
    1b28:	13 96       	adiw	r26, 0x03	; 3
    1b2a:	9c 93       	st	X, r25
    1b2c:	8e 93       	st	-X, r24
    1b2e:	12 97       	sbiw	r26, 0x02	; 2
    1b30:	2c c0       	rjmp	.+88     	; 0x1b8a <malloc+0x9c>
    1b32:	90 93 27 02 	sts	0x0227, r25
    1b36:	80 93 26 02 	sts	0x0226, r24
    1b3a:	27 c0       	rjmp	.+78     	; 0x1b8a <malloc+0x9c>
    1b3c:	21 15       	cp	r18, r1
    1b3e:	31 05       	cpc	r19, r1
    1b40:	31 f0       	breq	.+12     	; 0x1b4e <malloc+0x60>
    1b42:	42 17       	cp	r20, r18
    1b44:	53 07       	cpc	r21, r19
    1b46:	18 f0       	brcs	.+6      	; 0x1b4e <malloc+0x60>
    1b48:	a9 01       	movw	r20, r18
    1b4a:	db 01       	movw	r26, r22
    1b4c:	01 c0       	rjmp	.+2      	; 0x1b50 <malloc+0x62>
    1b4e:	ef 01       	movw	r28, r30
    1b50:	9a 01       	movw	r18, r20
    1b52:	bd 01       	movw	r22, r26
    1b54:	df 01       	movw	r26, r30
    1b56:	02 80       	ldd	r0, Z+2	; 0x02
    1b58:	f3 81       	ldd	r31, Z+3	; 0x03
    1b5a:	e0 2d       	mov	r30, r0
    1b5c:	d7 cf       	rjmp	.-82     	; 0x1b0c <malloc+0x1e>
    1b5e:	21 15       	cp	r18, r1
    1b60:	31 05       	cpc	r19, r1
    1b62:	f9 f0       	breq	.+62     	; 0x1ba2 <malloc+0xb4>
    1b64:	28 1b       	sub	r18, r24
    1b66:	39 0b       	sbc	r19, r25
    1b68:	24 30       	cpi	r18, 0x04	; 4
    1b6a:	31 05       	cpc	r19, r1
    1b6c:	80 f4       	brcc	.+32     	; 0x1b8e <malloc+0xa0>
    1b6e:	8a 81       	ldd	r24, Y+2	; 0x02
    1b70:	9b 81       	ldd	r25, Y+3	; 0x03
    1b72:	61 15       	cp	r22, r1
    1b74:	71 05       	cpc	r23, r1
    1b76:	21 f0       	breq	.+8      	; 0x1b80 <malloc+0x92>
    1b78:	fb 01       	movw	r30, r22
    1b7a:	93 83       	std	Z+3, r25	; 0x03
    1b7c:	82 83       	std	Z+2, r24	; 0x02
    1b7e:	04 c0       	rjmp	.+8      	; 0x1b88 <malloc+0x9a>
    1b80:	90 93 27 02 	sts	0x0227, r25
    1b84:	80 93 26 02 	sts	0x0226, r24
    1b88:	fe 01       	movw	r30, r28
    1b8a:	32 96       	adiw	r30, 0x02	; 2
    1b8c:	44 c0       	rjmp	.+136    	; 0x1c16 <malloc+0x128>
    1b8e:	fe 01       	movw	r30, r28
    1b90:	e2 0f       	add	r30, r18
    1b92:	f3 1f       	adc	r31, r19
    1b94:	81 93       	st	Z+, r24
    1b96:	91 93       	st	Z+, r25
    1b98:	22 50       	subi	r18, 0x02	; 2
    1b9a:	31 09       	sbc	r19, r1
    1b9c:	39 83       	std	Y+1, r19	; 0x01
    1b9e:	28 83       	st	Y, r18
    1ba0:	3a c0       	rjmp	.+116    	; 0x1c16 <malloc+0x128>
    1ba2:	20 91 24 02 	lds	r18, 0x0224
    1ba6:	30 91 25 02 	lds	r19, 0x0225
    1baa:	23 2b       	or	r18, r19
    1bac:	41 f4       	brne	.+16     	; 0x1bbe <malloc+0xd0>
    1bae:	20 91 02 01 	lds	r18, 0x0102
    1bb2:	30 91 03 01 	lds	r19, 0x0103
    1bb6:	30 93 25 02 	sts	0x0225, r19
    1bba:	20 93 24 02 	sts	0x0224, r18
    1bbe:	20 91 00 01 	lds	r18, 0x0100
    1bc2:	30 91 01 01 	lds	r19, 0x0101
    1bc6:	21 15       	cp	r18, r1
    1bc8:	31 05       	cpc	r19, r1
    1bca:	41 f4       	brne	.+16     	; 0x1bdc <malloc+0xee>
    1bcc:	2d b7       	in	r18, 0x3d	; 61
    1bce:	3e b7       	in	r19, 0x3e	; 62
    1bd0:	40 91 04 01 	lds	r20, 0x0104
    1bd4:	50 91 05 01 	lds	r21, 0x0105
    1bd8:	24 1b       	sub	r18, r20
    1bda:	35 0b       	sbc	r19, r21
    1bdc:	e0 91 24 02 	lds	r30, 0x0224
    1be0:	f0 91 25 02 	lds	r31, 0x0225
    1be4:	e2 17       	cp	r30, r18
    1be6:	f3 07       	cpc	r31, r19
    1be8:	a0 f4       	brcc	.+40     	; 0x1c12 <malloc+0x124>
    1bea:	2e 1b       	sub	r18, r30
    1bec:	3f 0b       	sbc	r19, r31
    1bee:	28 17       	cp	r18, r24
    1bf0:	39 07       	cpc	r19, r25
    1bf2:	78 f0       	brcs	.+30     	; 0x1c12 <malloc+0x124>
    1bf4:	ac 01       	movw	r20, r24
    1bf6:	4e 5f       	subi	r20, 0xFE	; 254
    1bf8:	5f 4f       	sbci	r21, 0xFF	; 255
    1bfa:	24 17       	cp	r18, r20
    1bfc:	35 07       	cpc	r19, r21
    1bfe:	48 f0       	brcs	.+18     	; 0x1c12 <malloc+0x124>
    1c00:	4e 0f       	add	r20, r30
    1c02:	5f 1f       	adc	r21, r31
    1c04:	50 93 25 02 	sts	0x0225, r21
    1c08:	40 93 24 02 	sts	0x0224, r20
    1c0c:	81 93       	st	Z+, r24
    1c0e:	91 93       	st	Z+, r25
    1c10:	02 c0       	rjmp	.+4      	; 0x1c16 <malloc+0x128>
    1c12:	e0 e0       	ldi	r30, 0x00	; 0
    1c14:	f0 e0       	ldi	r31, 0x00	; 0
    1c16:	cf 01       	movw	r24, r30
    1c18:	df 91       	pop	r29
    1c1a:	cf 91       	pop	r28
    1c1c:	08 95       	ret

00001c1e <free>:
    1c1e:	cf 93       	push	r28
    1c20:	df 93       	push	r29
    1c22:	00 97       	sbiw	r24, 0x00	; 0
    1c24:	09 f4       	brne	.+2      	; 0x1c28 <free+0xa>
    1c26:	87 c0       	rjmp	.+270    	; 0x1d36 <free+0x118>
    1c28:	fc 01       	movw	r30, r24
    1c2a:	32 97       	sbiw	r30, 0x02	; 2
    1c2c:	13 82       	std	Z+3, r1	; 0x03
    1c2e:	12 82       	std	Z+2, r1	; 0x02
    1c30:	c0 91 26 02 	lds	r28, 0x0226
    1c34:	d0 91 27 02 	lds	r29, 0x0227
    1c38:	20 97       	sbiw	r28, 0x00	; 0
    1c3a:	81 f4       	brne	.+32     	; 0x1c5c <free+0x3e>
    1c3c:	20 81       	ld	r18, Z
    1c3e:	31 81       	ldd	r19, Z+1	; 0x01
    1c40:	28 0f       	add	r18, r24
    1c42:	39 1f       	adc	r19, r25
    1c44:	80 91 24 02 	lds	r24, 0x0224
    1c48:	90 91 25 02 	lds	r25, 0x0225
    1c4c:	82 17       	cp	r24, r18
    1c4e:	93 07       	cpc	r25, r19
    1c50:	79 f5       	brne	.+94     	; 0x1cb0 <free+0x92>
    1c52:	f0 93 25 02 	sts	0x0225, r31
    1c56:	e0 93 24 02 	sts	0x0224, r30
    1c5a:	6d c0       	rjmp	.+218    	; 0x1d36 <free+0x118>
    1c5c:	de 01       	movw	r26, r28
    1c5e:	20 e0       	ldi	r18, 0x00	; 0
    1c60:	30 e0       	ldi	r19, 0x00	; 0
    1c62:	ae 17       	cp	r26, r30
    1c64:	bf 07       	cpc	r27, r31
    1c66:	50 f4       	brcc	.+20     	; 0x1c7c <free+0x5e>
    1c68:	12 96       	adiw	r26, 0x02	; 2
    1c6a:	4d 91       	ld	r20, X+
    1c6c:	5c 91       	ld	r21, X
    1c6e:	13 97       	sbiw	r26, 0x03	; 3
    1c70:	9d 01       	movw	r18, r26
    1c72:	41 15       	cp	r20, r1
    1c74:	51 05       	cpc	r21, r1
    1c76:	09 f1       	breq	.+66     	; 0x1cba <free+0x9c>
    1c78:	da 01       	movw	r26, r20
    1c7a:	f3 cf       	rjmp	.-26     	; 0x1c62 <free+0x44>
    1c7c:	b3 83       	std	Z+3, r27	; 0x03
    1c7e:	a2 83       	std	Z+2, r26	; 0x02
    1c80:	40 81       	ld	r20, Z
    1c82:	51 81       	ldd	r21, Z+1	; 0x01
    1c84:	84 0f       	add	r24, r20
    1c86:	95 1f       	adc	r25, r21
    1c88:	8a 17       	cp	r24, r26
    1c8a:	9b 07       	cpc	r25, r27
    1c8c:	71 f4       	brne	.+28     	; 0x1caa <free+0x8c>
    1c8e:	8d 91       	ld	r24, X+
    1c90:	9c 91       	ld	r25, X
    1c92:	11 97       	sbiw	r26, 0x01	; 1
    1c94:	84 0f       	add	r24, r20
    1c96:	95 1f       	adc	r25, r21
    1c98:	02 96       	adiw	r24, 0x02	; 2
    1c9a:	91 83       	std	Z+1, r25	; 0x01
    1c9c:	80 83       	st	Z, r24
    1c9e:	12 96       	adiw	r26, 0x02	; 2
    1ca0:	8d 91       	ld	r24, X+
    1ca2:	9c 91       	ld	r25, X
    1ca4:	13 97       	sbiw	r26, 0x03	; 3
    1ca6:	93 83       	std	Z+3, r25	; 0x03
    1ca8:	82 83       	std	Z+2, r24	; 0x02
    1caa:	21 15       	cp	r18, r1
    1cac:	31 05       	cpc	r19, r1
    1cae:	29 f4       	brne	.+10     	; 0x1cba <free+0x9c>
    1cb0:	f0 93 27 02 	sts	0x0227, r31
    1cb4:	e0 93 26 02 	sts	0x0226, r30
    1cb8:	3e c0       	rjmp	.+124    	; 0x1d36 <free+0x118>
    1cba:	d9 01       	movw	r26, r18
    1cbc:	13 96       	adiw	r26, 0x03	; 3
    1cbe:	fc 93       	st	X, r31
    1cc0:	ee 93       	st	-X, r30
    1cc2:	12 97       	sbiw	r26, 0x02	; 2
    1cc4:	4d 91       	ld	r20, X+
    1cc6:	5d 91       	ld	r21, X+
    1cc8:	a4 0f       	add	r26, r20
    1cca:	b5 1f       	adc	r27, r21
    1ccc:	ea 17       	cp	r30, r26
    1cce:	fb 07       	cpc	r31, r27
    1cd0:	79 f4       	brne	.+30     	; 0x1cf0 <free+0xd2>
    1cd2:	80 81       	ld	r24, Z
    1cd4:	91 81       	ldd	r25, Z+1	; 0x01
    1cd6:	84 0f       	add	r24, r20
    1cd8:	95 1f       	adc	r25, r21
    1cda:	02 96       	adiw	r24, 0x02	; 2
    1cdc:	d9 01       	movw	r26, r18
    1cde:	11 96       	adiw	r26, 0x01	; 1
    1ce0:	9c 93       	st	X, r25
    1ce2:	8e 93       	st	-X, r24
    1ce4:	82 81       	ldd	r24, Z+2	; 0x02
    1ce6:	93 81       	ldd	r25, Z+3	; 0x03
    1ce8:	13 96       	adiw	r26, 0x03	; 3
    1cea:	9c 93       	st	X, r25
    1cec:	8e 93       	st	-X, r24
    1cee:	12 97       	sbiw	r26, 0x02	; 2
    1cf0:	e0 e0       	ldi	r30, 0x00	; 0
    1cf2:	f0 e0       	ldi	r31, 0x00	; 0
    1cf4:	8a 81       	ldd	r24, Y+2	; 0x02
    1cf6:	9b 81       	ldd	r25, Y+3	; 0x03
    1cf8:	00 97       	sbiw	r24, 0x00	; 0
    1cfa:	19 f0       	breq	.+6      	; 0x1d02 <free+0xe4>
    1cfc:	fe 01       	movw	r30, r28
    1cfe:	ec 01       	movw	r28, r24
    1d00:	f9 cf       	rjmp	.-14     	; 0x1cf4 <free+0xd6>
    1d02:	ce 01       	movw	r24, r28
    1d04:	02 96       	adiw	r24, 0x02	; 2
    1d06:	28 81       	ld	r18, Y
    1d08:	39 81       	ldd	r19, Y+1	; 0x01
    1d0a:	82 0f       	add	r24, r18
    1d0c:	93 1f       	adc	r25, r19
    1d0e:	20 91 24 02 	lds	r18, 0x0224
    1d12:	30 91 25 02 	lds	r19, 0x0225
    1d16:	28 17       	cp	r18, r24
    1d18:	39 07       	cpc	r19, r25
    1d1a:	69 f4       	brne	.+26     	; 0x1d36 <free+0x118>
    1d1c:	30 97       	sbiw	r30, 0x00	; 0
    1d1e:	29 f4       	brne	.+10     	; 0x1d2a <free+0x10c>
    1d20:	10 92 27 02 	sts	0x0227, r1
    1d24:	10 92 26 02 	sts	0x0226, r1
    1d28:	02 c0       	rjmp	.+4      	; 0x1d2e <free+0x110>
    1d2a:	13 82       	std	Z+3, r1	; 0x03
    1d2c:	12 82       	std	Z+2, r1	; 0x02
    1d2e:	d0 93 25 02 	sts	0x0225, r29
    1d32:	c0 93 24 02 	sts	0x0224, r28
    1d36:	df 91       	pop	r29
    1d38:	cf 91       	pop	r28
    1d3a:	08 95       	ret

00001d3c <__ctype_isfalse>:
    1d3c:	99 27       	eor	r25, r25
    1d3e:	88 27       	eor	r24, r24

00001d40 <__ctype_istrue>:
    1d40:	08 95       	ret

00001d42 <memset>:
    1d42:	dc 01       	movw	r26, r24
    1d44:	01 c0       	rjmp	.+2      	; 0x1d48 <memset+0x6>
    1d46:	6d 93       	st	X+, r22
    1d48:	41 50       	subi	r20, 0x01	; 1
    1d4a:	50 40       	sbci	r21, 0x00	; 0
    1d4c:	e0 f7       	brcc	.-8      	; 0x1d46 <memset+0x4>
    1d4e:	08 95       	ret

00001d50 <_exit>:
    1d50:	f8 94       	cli

00001d52 <__stop_program>:
    1d52:	ff cf       	rjmp	.-2      	; 0x1d52 <__stop_program>
